{
  "swagger": "2.0",
  "info": {
    "title": "Box Platform API",
    "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.",
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "contact": {
      "name": "Box, Inc",
      "url": "https://box.dev",
      "email": "devrel@box.com"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0.0",
    "x-box-commit-hash": "d3a7365495"
  },
  "host": "api.box.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/oauth2/token": {
      "post": {
        "operationId": "post_oauth2_token",
        "summary": "Request access token",
        "description": "Request an Access Token using either a client-side obtained OAuth 2.0\nauthorization code or a server-side JWT assertion.\n\nAn Access Token is a string that enables Box to verify that a\nrequest belongs to an authorized session. In the normal order of\noperations you will begin by requesting authentication from the\n[authorize](#get-authorize) endpoint and Box will send you an\nauthorization code.\n\nYou will then send this code to this endpoint to exchange it for\nan Access Token. The returned Access Token can then be used to to make\nBox API calls.",
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "default": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/oauth2/token#refresh": {
      "post": {
        "operationId": "post_oauth2_token#refresh",
        "summary": "Refresh access token",
        "description": "Refresh an Access Token using its client ID, secret, and refresh token.",
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "default": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/oauth2/revoke": {
      "post": {
        "operationId": "post_oauth2_revoke",
        "summary": "Revoke access token",
        "description": "Revoke an active Access Token, effectively logging a user out\nthat has been previously authenticated.",
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Returns an empty response when the token was successfully revoked."
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "default": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    }
  },
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
      "tokenUrl": "https://api.box.com/oauth2/token",
      "scopes": {
        "root_readonly": "Read all files and folders stored in Box",
        "root_readwrite": "Read and write all files and folders stored in Box",
        "manage_app_users": "Provision and manage app users",
        "manage_managed_users": "Provision and manage managed users",
        "manage_groups": "Manage an enterprise's groups",
        "manage_webhook": "Create webhooks programmatically through the API",
        "manage_enterprise_properties": "Manage enterprise properties",
        "manage_data_retention": "Manage data retention polices",
        "manage_legal_hold": "Manage Legal Holds"
      }
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "definitions": {
    "AccessToken": {
      "title": "Access token",
      "type": "object",
      "description": "A token that can be used to make authenticated API calls.",
      "properties": {
        "access_token": {
          "type": "string",
          "format": "token",
          "description": "The requested access token."
        },
        "expires_in": {
          "type": "integer",
          "format": "int64",
          "description": "The time in seconds by which this token will expire."
        },
        "token_type": {
          "type": "string",
          "enum": [
            "bearer"
          ],
          "description": "The type of access token returned."
        },
        "restricted_to": {
          "type": "array",
          "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
          "items": {
            "$ref": "#/definitions/FileOrFolderScope"
          }
        },
        "refresh_token": {
          "type": "string",
          "format": "token",
          "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires."
        },
        "issued_token_type": {
          "type": "string",
          "format": "urn",
          "enum": [
            "urn:ietf:params:oauth:token-type:access_token"
          ],
          "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped."
        }
      }
    },
    "OAuth2Error": {
      "title": "OAuth 2.0 error",
      "type": "object",
      "description": "An OAuth 2.0 error",
      "properties": {
        "error": {
          "type": "string",
          "description": "The type of the error returned."
        },
        "error_description": {
          "type": "string",
          "description": "The type of the error returned."
        }
      }
    },
    "FileOrFolderScope": {
      "title": "File or folder scope",
      "type": "object",
      "description": "A relation between a resource (file or folder) and the scopes for which the resource can be accessed",
      "properties": {
        "scope": {
          "type": "string",
          "description": "The scopes for the resource access",
          "enum": [
            "annotation_edit",
            "annotation_view_all",
            "annotation_view_self",
            "base_explorer",
            "base_picker",
            "base_preview",
            "base_upload",
            "item_delete",
            "item_download",
            "item_preview",
            "item_rename",
            "item_share"
          ]
        },
        "object": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The file or folder resource"
            }
          ]
        }
      }
    },
    "Folder--Mini": {
      "title": "Folder (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a file version, used when\nnested under another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Folder--Base"
        },
        {
          "properties": {
            "sequence_id": {
              "allOf": [
                {
                  "type": "string",
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource."
                },
                {}
              ]
            },
            "name": {
              "type": "string",
              "description": "The name of the folder."
            }
          }
        }
      ]
    },
    "File--Mini": {
      "title": "File (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a file, used when\nnested under another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/File--Base"
        },
        {
          "properties": {
            "sequence_id": {
              "allOf": [
                {
                  "type": "string",
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource."
                },
                {}
              ]
            },
            "name": {
              "type": "string",
              "description": "The name of the file"
            },
            "sha1": {
              "type": "string",
              "format": "digest",
              "description": "The SHA1 hash of the file. This can be used to compare the contents\nof a file on Box with a local file."
            },
            "file_version": {
              "allOf": [
                {
                  "$ref": "#/definitions/FileVersion--Mini"
                },
                {
                  "description": "The information about the current version of the file."
                }
              ]
            }
          }
        }
      ]
    },
    "Folder--Base": {
      "title": "Folder (Base)",
      "type": "object",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ],
      "x-box-variant": "base",
      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
        },
        "etag": {
          "type": "string",
          "description": "The HTTP `etag` of this folder. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the folder if (no) changes have happened."
        },
        "type": {
          "type": "string",
          "description": "`folder`",
          "enum": [
            "folder"
          ]
        }
      }
    },
    "File--Base": {
      "title": "File (Base)",
      "type": "object",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ],
      "x-box-variant": "base",
      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
        },
        "etag": {
          "type": "string",
          "description": "The HTTP `etag` of this file. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the file if (no) changes have happened."
        },
        "type": {
          "type": "string",
          "description": "`file`",
          "enum": [
            "file"
          ]
        }
      }
    },
    "FileVersion--Mini": {
      "title": "File version (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a file version, used when\nnested within another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/FileVersion--Base"
        },
        {
          "properties": {
            "sha1": {
              "type": "string",
              "description": "The SHA1 hash of this version of the file."
            }
          }
        }
      ]
    },
    "FileVersion--Base": {
      "title": "File version (Base)",
      "type": "object",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ],
      "x-box-variant": "base",
      "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a file version."
        },
        "type": {
          "type": "string",
          "description": "`file_version`",
          "enum": [
            "file_version"
          ]
        }
      }
    }
  }
}