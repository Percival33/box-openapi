{
    "info": {
        "_postman_id": "97883aa1-8057-4537-ba1e-ee55f81638e5",
        "name": "Box Platform API",
        "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.\n\nContact Support:\n Name: Box, Inc\n Email: devrel@box.com",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authorization",
            "item": [
                {
                    "name": "Authorize user",
                    "id": "16f8c8c2-aeaf-4584-a46c-fb17dbad44b2",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "https://account.box.com/api/oauth2/authorize?response_type=code&client_id=ly1nj6n11vionaie65emwzk575hnnmrk&redirect_uri=http://example.com/auth/callback&state=my_state&scope=admin_readwrite",
                            "protocol": "https",
                            "host": [
                                "account",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "oauth2",
                                "authorize"
                            ],
                            "query": [
                                {
                                    "key": "response_type",
                                    "value": "code",
                                    "description": "(Required) The type of response we'd like to receive."
                                },
                                {
                                    "key": "client_id",
                                    "value": "ly1nj6n11vionaie65emwzk575hnnmrk",
                                    "description": "(Required) The Client ID of the application that is requesting to authenticate\nthe user. To get the Client ID for your application, log in to your\nBox developer console and click the **Edit Application** link for\nthe application you're working with. In the OAuth 2.0 Parameters section\nof the configuration page, find the item labelled `client_id`. The\ntext of that item is your application's Client ID."
                                },
                                {
                                    "key": "redirect_uri",
                                    "value": "http://example.com/auth/callback",
                                    "description": "The URI to which Box redirects the browser after the user has granted\nor denied the application permission. This URI match one of the redirect\nURIs in the configuration of your application. It must be a\nvalid HTTPS URI and it needs to be able to handle the redirection to\ncomplete the next step in the OAuth 2.0 flow."
                                },
                                {
                                    "key": "state",
                                    "value": "my_state",
                                    "description": "A custom string of your choice. Box will pass the same string to\nthe redirect URL when authentication is complete. This parameter\ncan be used to identify a user on redirect, as well as protect\nagainst hijacked sessions and other exploits."
                                },
                                {
                                    "key": "scope",
                                    "value": "admin_readwrite",
                                    "description": "A comma-separated list of application scopes you'd like to\nauthenticate the user for. This defaults to all the scopes configured\nfor the application in its configuration page."
                                }
                            ]
                        },
                        "description": "Authorize a user by sending them through the [Box](https://box.com)\nwebsite and request their permission to act on their behalf.\n\nThis is the first step when authenticating a user using\nOAuth 2.0. To request a user's authorization to use the Box APIs\non their behalf you will need to send a user to the URL with this\nformat."
                    },
                    "response": [
                        {
                            "id": "4e339c2e-c7a5-4adb-ac88-07a101c56911",
                            "name": "Does not return any data, but rather should be used in the browser.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://account.box.com/api/oauth2/authorize?response_type=code&client_id=ly1nj6n11vionaie65emwzk575hnnmrk&redirect_uri=http://example.com/auth/callback&state=my_state&scope=admin_readwrite",
                                    "protocol": "https",
                                    "host": [
                                        "account",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "oauth2",
                                        "authorize"
                                    ],
                                    "query": [
                                        {
                                            "key": "response_type",
                                            "value": "code"
                                        },
                                        {
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "key": "redirect_uri",
                                            "value": "http://example.com/auth/callback"
                                        },
                                        {
                                            "key": "state",
                                            "value": "my_state"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "admin_readwrite"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "cupidatat mollit"
                        },
                        {
                            "id": "74a731a6-fd5b-4e0e-b5a0-a7080ec45c7e",
                            "name": "Does not return any data, but rather should be used in the browser.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://account.box.com/api/oauth2/authorize?response_type=code&client_id=ly1nj6n11vionaie65emwzk575hnnmrk&redirect_uri=http://example.com/auth/callback&state=my_state&scope=admin_readwrite",
                                    "protocol": "https",
                                    "host": [
                                        "account",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "oauth2",
                                        "authorize"
                                    ],
                                    "query": [
                                        {
                                            "key": "response_type",
                                            "value": "code"
                                        },
                                        {
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "key": "redirect_uri",
                                            "value": "http://example.com/auth/callback"
                                        },
                                        {
                                            "key": "state",
                                            "value": "my_state"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "admin_readwrite"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "cupidatat mollit"
                        }
                    ]
                },
                {
                    "name": "Request access token",
                    "id": "b9cb9557-4261-413c-a80e-0a494907d074",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "grant_type",
                                    "value": "authorization_code",
                                    "description": "(Required) The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, client credentials\ngrant or another access token for the purpose of downscoping a token."
                                },
                                {
                                    "key": "client_id",
                                    "value": "ly1nj6n11vionaie65emwzk575hnnmrk",
                                    "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`."
                                },
                                {
                                    "key": "client_secret",
                                    "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
                                    "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`."
                                },
                                {
                                    "key": "code",
                                    "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW",
                                    "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`."
                                },
                                {
                                    "key": "refresh_token",
                                    "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`."
                                },
                                {
                                    "key": "assertion",
                                    "value": "xxxxx.yyyyy.zzzzz",
                                    "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`."
                                },
                                {
                                    "key": "subject_token",
                                    "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`."
                                },
                                {
                                    "key": "subject_token_type",
                                    "value": "urn:ietf:params:oauth:token-type:access_token",
                                    "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`."
                                },
                                {
                                    "key": "actor_token",
                                    "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "description": "The token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`."
                                },
                                {
                                    "key": "actor_token_type",
                                    "value": "urn:ietf:params:oauth:token-type:id_token",
                                    "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`."
                                },
                                {
                                    "key": "scope",
                                    "value": "item_upload item_preview base_explorer",
                                    "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**."
                                },
                                {
                                    "key": "resource",
                                    "value": "https://api.box.com/2.0/files/123456",
                                    "description": "Full URL for the file that the token should be generated for."
                                },
                                {
                                    "key": "box_subject_type",
                                    "value": "enterprise",
                                    "description": "Used in combination with `client_credentials` as the `grant_type`."
                                },
                                {
                                    "key": "box_subject_id",
                                    "value": "123456789",
                                    "description": "Used in combination with `client_credentials` as the `grant_type`.\nValue is determined by `box_subject_type`. If `user` use user ID and if\n`enterprise` use enterprise ID."
                                },
                                {
                                    "key": "box_shared_link",
                                    "value": "https://cloud.box.com/s/123456",
                                    "description": "Full URL of the shared link on the file or folder\nthat the token should be generated for."
                                }
                            ]
                        },
                        "url": {
                            "raw": "https://api.box.com/oauth2/token",
                            "protocol": "https",
                            "host": [
                                "api",
                                "box",
                                "com"
                            ],
                            "path": [
                                "oauth2",
                                "token"
                            ]
                        },
                        "description": "Request an Access Token using either a client-side obtained OAuth 2.0\nauthorization code or a server-side JWT assertion.\n\nAn Access Token is a string that enables Box to verify that a\nrequest belongs to an authorized session. In the normal order of\noperations you will begin by requesting authentication from the\n[authorize](#get-authorize) endpoint and Box will send you an\nauthorization code.\n\nYou will then send this code to this endpoint to exchange it for\nan Access Token. The returned Access Token can then be used to to make\nBox API calls."
                    },
                    "response": [
                        {
                            "id": "6b945b7e-a309-4d69-b9fd-361f71698ac6",
                            "name": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, client credentials\ngrant or another access token for the purpose of downscoping a token.",
                                            "key": "grant_type",
                                            "value": "authorization_code"
                                        },
                                        {
                                            "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
                                            "key": "code",
                                            "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
                                        },
                                        {
                                            "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
                                            "key": "refresh_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
                                            "key": "assertion",
                                            "value": "xxxxx.yyyyy.zzzzz"
                                        },
                                        {
                                            "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "subject_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "subject_token_type",
                                            "value": "urn:ietf:params:oauth:token-type:access_token"
                                        },
                                        {
                                            "description": "The token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "actor_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "actor_token_type",
                                            "value": "urn:ietf:params:oauth:token-type:id_token"
                                        },
                                        {
                                            "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
                                            "key": "scope",
                                            "value": "item_upload item_preview base_explorer"
                                        },
                                        {
                                            "description": "Full URL for the file that the token should be generated for.",
                                            "key": "resource",
                                            "value": "https://api.box.com/2.0/files/123456"
                                        },
                                        {
                                            "description": "Used in combination with `client_credentials` as the `grant_type`.",
                                            "key": "box_subject_type",
                                            "value": "enterprise"
                                        },
                                        {
                                            "description": "Used in combination with `client_credentials` as the `grant_type`.\nValue is determined by `box_subject_type`. If `user` use user ID and if\n`enterprise` use enterprise ID.",
                                            "key": "box_subject_id",
                                            "value": "123456789"
                                        },
                                        {
                                            "description": "Full URL of the shared link on the file or folder\nthat the token should be generated for.",
                                            "key": "box_shared_link",
                                            "value": "https://cloud.box.com/s/123456"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/token",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "token"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"access_token\": \"c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\",\n \"expires_in\": 3600,\n \"token_type\": \"bearer\",\n \"restricted_to\": [\n  {\n   \"scope\": \"item_download\",\n   \"object\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  },\n  {\n   \"scope\": \"item_download\",\n   \"object\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  }\n ],\n \"refresh_token\": \"c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\",\n \"issued_token_type\": \"urn:ietf:params:oauth:token-type:access_token\"\n}"
                        },
                        {
                            "id": "ea687bc0-91ce-4a15-8f70-bda13ad6e09c",
                            "name": "An authentication error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, client credentials\ngrant or another access token for the purpose of downscoping a token.",
                                            "key": "grant_type",
                                            "value": "authorization_code"
                                        },
                                        {
                                            "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
                                            "key": "code",
                                            "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
                                        },
                                        {
                                            "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
                                            "key": "refresh_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
                                            "key": "assertion",
                                            "value": "xxxxx.yyyyy.zzzzz"
                                        },
                                        {
                                            "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "subject_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "subject_token_type",
                                            "value": "urn:ietf:params:oauth:token-type:access_token"
                                        },
                                        {
                                            "description": "The token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "actor_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "actor_token_type",
                                            "value": "urn:ietf:params:oauth:token-type:id_token"
                                        },
                                        {
                                            "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
                                            "key": "scope",
                                            "value": "item_upload item_preview base_explorer"
                                        },
                                        {
                                            "description": "Full URL for the file that the token should be generated for.",
                                            "key": "resource",
                                            "value": "https://api.box.com/2.0/files/123456"
                                        },
                                        {
                                            "description": "Used in combination with `client_credentials` as the `grant_type`.",
                                            "key": "box_subject_type",
                                            "value": "enterprise"
                                        },
                                        {
                                            "description": "Used in combination with `client_credentials` as the `grant_type`.\nValue is determined by `box_subject_type`. If `user` use user ID and if\n`enterprise` use enterprise ID.",
                                            "key": "box_subject_id",
                                            "value": "123456789"
                                        },
                                        {
                                            "description": "Full URL of the shared link on the file or folder\nthat the token should be generated for.",
                                            "key": "box_shared_link",
                                            "value": "https://cloud.box.com/s/123456"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/token",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "token"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"error\": \"invalid_client\",\n \"error_description\": \"The client credentials are not valid\"\n}"
                        },
                        {
                            "id": "27b23315-37cc-4ba9-be2e-e0af1412d839",
                            "name": "An authentication error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, client credentials\ngrant or another access token for the purpose of downscoping a token.",
                                            "key": "grant_type",
                                            "value": "authorization_code"
                                        },
                                        {
                                            "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
                                            "key": "code",
                                            "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
                                        },
                                        {
                                            "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
                                            "key": "refresh_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
                                            "key": "assertion",
                                            "value": "xxxxx.yyyyy.zzzzz"
                                        },
                                        {
                                            "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "subject_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "subject_token_type",
                                            "value": "urn:ietf:params:oauth:token-type:access_token"
                                        },
                                        {
                                            "description": "The token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "actor_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        },
                                        {
                                            "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
                                            "key": "actor_token_type",
                                            "value": "urn:ietf:params:oauth:token-type:id_token"
                                        },
                                        {
                                            "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
                                            "key": "scope",
                                            "value": "item_upload item_preview base_explorer"
                                        },
                                        {
                                            "description": "Full URL for the file that the token should be generated for.",
                                            "key": "resource",
                                            "value": "https://api.box.com/2.0/files/123456"
                                        },
                                        {
                                            "description": "Used in combination with `client_credentials` as the `grant_type`.",
                                            "key": "box_subject_type",
                                            "value": "enterprise"
                                        },
                                        {
                                            "description": "Used in combination with `client_credentials` as the `grant_type`.\nValue is determined by `box_subject_type`. If `user` use user ID and if\n`enterprise` use enterprise ID.",
                                            "key": "box_subject_id",
                                            "value": "123456789"
                                        },
                                        {
                                            "description": "Full URL of the shared link on the file or folder\nthat the token should be generated for.",
                                            "key": "box_shared_link",
                                            "value": "https://cloud.box.com/s/123456"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/token",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "token"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"error\": \"invalid_client\",\n \"error_description\": \"The client credentials are not valid\"\n}"
                        }
                    ]
                },
                {
                    "name": "Refresh access token",
                    "id": "39cc1d44-d01b-4422-921d-9c854eada26e",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "grant_type",
                                    "value": "refresh_token",
                                    "description": "(Required) The type of request being made, in this case a refresh request."
                                },
                                {
                                    "key": "client_id",
                                    "value": "ly1nj6n11vionaie65emwzk575hnnmrk",
                                    "description": "(Required) The client ID of the application requesting to refresh the token."
                                },
                                {
                                    "key": "client_secret",
                                    "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
                                    "description": "(Required) The client secret of the application requesting to refresh the token."
                                },
                                {
                                    "key": "refresh_token",
                                    "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "description": "(Required) The refresh token to refresh."
                                }
                            ]
                        },
                        "url": {
                            "raw": "https://api.box.com/oauth2/token#refresh",
                            "protocol": "https",
                            "host": [
                                "api",
                                "box",
                                "com"
                            ],
                            "path": [
                                "oauth2",
                                "token"
                            ],
                            "hash": "refresh"
                        },
                        "description": "Refresh an Access Token using its client ID, secret, and refresh token."
                    },
                    "response": [
                        {
                            "id": "34e4d441-2a7b-41bc-afa5-3b9678fb8c25",
                            "name": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) The type of request being made, in this case a refresh request.",
                                            "key": "grant_type",
                                            "value": "refresh_token"
                                        },
                                        {
                                            "description": "(Required) The client ID of the application requesting to refresh the token.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "(Required) The client secret of the application requesting to refresh the token.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "(Required) The refresh token to refresh.",
                                            "key": "refresh_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/token#refresh",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "token"
                                    ],
                                    "hash": "refresh"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"access_token\": \"c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\",\n \"expires_in\": 3600,\n \"token_type\": \"bearer\",\n \"restricted_to\": [\n  {\n   \"scope\": \"item_download\",\n   \"object\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  },\n  {\n   \"scope\": \"item_download\",\n   \"object\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  }\n ],\n \"refresh_token\": \"c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\",\n \"issued_token_type\": \"urn:ietf:params:oauth:token-type:access_token\"\n}"
                        },
                        {
                            "id": "8fb61fd6-7b04-4c49-aa8c-0757f68f42d2",
                            "name": "An authentication error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) The type of request being made, in this case a refresh request.",
                                            "key": "grant_type",
                                            "value": "refresh_token"
                                        },
                                        {
                                            "description": "(Required) The client ID of the application requesting to refresh the token.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "(Required) The client secret of the application requesting to refresh the token.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "(Required) The refresh token to refresh.",
                                            "key": "refresh_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/token#refresh",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "token"
                                    ],
                                    "hash": "refresh"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"error\": \"invalid_client\",\n \"error_description\": \"The client credentials are not valid\"\n}"
                        },
                        {
                            "id": "3360a4cc-5444-40bc-a077-6b3e24b71a06",
                            "name": "An authentication error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) The type of request being made, in this case a refresh request.",
                                            "key": "grant_type",
                                            "value": "refresh_token"
                                        },
                                        {
                                            "description": "(Required) The client ID of the application requesting to refresh the token.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "(Required) The client secret of the application requesting to refresh the token.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "(Required) The refresh token to refresh.",
                                            "key": "refresh_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/token#refresh",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "token"
                                    ],
                                    "hash": "refresh"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"error\": \"invalid_client\",\n \"error_description\": \"The client credentials are not valid\"\n}"
                        }
                    ]
                },
                {
                    "name": "Revoke access token",
                    "id": "ce07b6f2-1f7f-41fc-8269-eeb0f95db04d",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "client_id",
                                    "value": "ly1nj6n11vionaie65emwzk575hnnmrk",
                                    "description": "The Client ID of the application requesting to revoke the\naccess token."
                                },
                                {
                                    "key": "client_secret",
                                    "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
                                    "description": "The client secret of the application requesting to revoke\nan access token."
                                },
                                {
                                    "key": "token",
                                    "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW",
                                    "description": "The access token to revoke."
                                }
                            ]
                        },
                        "url": {
                            "raw": "https://api.box.com/oauth2/revoke",
                            "protocol": "https",
                            "host": [
                                "api",
                                "box",
                                "com"
                            ],
                            "path": [
                                "oauth2",
                                "revoke"
                            ]
                        },
                        "description": "Revoke an active Access Token, effectively logging a user out\nthat has been previously authenticated."
                    },
                    "response": [
                        {
                            "id": "79af43bf-5adf-4e64-85f9-9ddcc210d882",
                            "name": "Returns an empty response when the token was successfully revoked.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "The Client ID of the application requesting to revoke the\naccess token.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "The client secret of the application requesting to revoke\nan access token.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "The access token to revoke.",
                                            "key": "token",
                                            "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/revoke",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "revoke"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "bb73bcb3-6629-4d74-9a25-c8add1a442f1",
                            "name": "An authentication error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "The Client ID of the application requesting to revoke the\naccess token.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "The client secret of the application requesting to revoke\nan access token.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "The access token to revoke.",
                                            "key": "token",
                                            "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/revoke",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "revoke"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"error\": \"invalid_client\",\n \"error_description\": \"The client credentials are not valid\"\n}"
                        },
                        {
                            "id": "7b53a651-ac95-46a8-9012-c0c13028e31e",
                            "name": "An authentication error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "The Client ID of the application requesting to revoke the\naccess token.",
                                            "key": "client_id",
                                            "value": "ly1nj6n11vionaie65emwzk575hnnmrk"
                                        },
                                        {
                                            "description": "The client secret of the application requesting to revoke\nan access token.",
                                            "key": "client_secret",
                                            "value": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
                                        },
                                        {
                                            "description": "The access token to revoke.",
                                            "key": "token",
                                            "value": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://api.box.com/oauth2/revoke",
                                    "protocol": "https",
                                    "host": [
                                        "api",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "oauth2",
                                        "revoke"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"error\": \"invalid_client\",\n \"error_description\": \"The client credentials are not valid\"\n}"
                        }
                    ]
                }
            ],
            "id": "b3a75b53-44cd-4a23-922d-7d3bccccd54d"
        },
        {
            "name": "Box Sign",
            "item": [
                {
                    "name": "Cancel sign request",
                    "id": "d1b0703c-a61a-4b76-b50f-dcd13249e4e4",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/sign_requests/:sign_request_id/cancel",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "sign_requests",
                                ":sign_request_id",
                                "cancel"
                            ],
                            "variable": [
                                {
                                    "id": "cfec5576-f957-4b81-b9c3-f35f4d6afe54",
                                    "key": "sign_request_id",
                                    "value": "33243242",
                                    "description": "(Required) The ID of the sign request"
                                }
                            ]
                        },
                        "description": "Cancels a sign request."
                    },
                    "response": [
                        {
                            "id": "81f2144f-9102-4e23-b8bc-b2a99f84b504",
                            "name": "Returns a Sign Request object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id/cancel",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id",
                                        "cancel"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"signers\": [\n  {\n   \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"is_in_person\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url_external_user_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"verification_phone_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"has_viewed_document\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signer_decision\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"inputs\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"is_in_person\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url_external_user_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"verification_phone_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"has_viewed_document\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signer_decision\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"inputs\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"source_files\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ],\n \"parent_folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"is_document_preparation_needed\": true,\n \"are_text_signatures_enabled\": true,\n \"email_subject\": \"Sign Request from Acme\",\n \"email_message\": \"Hello! Please sign the document below\",\n \"are_reminders_enabled\": true,\n \"prefill_tags\": [\n  {\n   \"document_tag_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"text_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"checkbox_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"date_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"document_tag_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"text_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"checkbox_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"date_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"days_valid\": 2,\n \"external_id\": \"123\",\n \"is_phone_verification_required_to_view\": true,\n \"type\": \"sign-request\",\n \"id\": \"12345\",\n \"prepare_url\": \"https://prepareurl.com\",\n \"signing_log\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"status\": \"converting\",\n \"sign_files\": {\n  \"files\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  ],\n  \"is_ready_for_download\": true\n },\n \"auto_expire_at\": \"2021-04-26T08:12:13.982Z\"\n}"
                        },
                        {
                            "id": "b89351ae-0a5d-4777-9edc-e7e2d09dedaf",
                            "name": "Returns an error when the sign request cannot be found or the user does\nnot have access to the sign request.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id/cancel",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id",
                                        "cancel"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "6461d74a-799d-4cba-9ae2-7bfed14e5b62",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id/cancel",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id",
                                        "cancel"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Resend sign request",
                    "id": "2288118b-df39-462b-af3c-c18907254e6f",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/sign_requests/:sign_request_id/resend",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "sign_requests",
                                ":sign_request_id",
                                "resend"
                            ],
                            "variable": [
                                {
                                    "id": "68f024b9-0e05-4c59-b1e4-204931b65aea",
                                    "key": "sign_request_id",
                                    "value": "33243242",
                                    "description": "(Required) The ID of the sign request"
                                }
                            ]
                        },
                        "description": "Resends a sign request email to all outstanding signers."
                    },
                    "response": [
                        {
                            "id": "49f84802-92bd-473b-a01c-947e4923291f",
                            "name": "Returns an empty response when the API call was successful.\nThe email notifications will be sent asynchronously.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id/resend",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id",
                                        "resend"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "336a8259-7044-4527-9b41-363b0b88881c",
                            "name": "Returns an error when the sign request cannot be found or the user does\nnot have access to the sign request.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id/resend",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id",
                                        "resend"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7ce5a991-74d1-4adc-be79-462d6bcfcc7d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id/resend",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id",
                                        "resend"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get sign request by ID",
                    "id": "262251e6-57a8-434b-8615-ce2ab4321f72",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/sign_requests/:sign_request_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "sign_requests",
                                ":sign_request_id"
                            ],
                            "variable": [
                                {
                                    "id": "4588eba7-485a-4a49-8f45-f32b4780e2ac",
                                    "key": "sign_request_id",
                                    "value": "33243242",
                                    "description": "(Required) The ID of the sign request"
                                }
                            ]
                        },
                        "description": "Gets a sign request by ID."
                    },
                    "response": [
                        {
                            "id": "2508bb40-af07-4ae8-a08e-501a54c4123a",
                            "name": "Returns a sign request",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"signers\": [\n  {\n   \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"is_in_person\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url_external_user_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"verification_phone_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"has_viewed_document\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signer_decision\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"inputs\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"is_in_person\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url_external_user_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"verification_phone_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"has_viewed_document\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signer_decision\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"inputs\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"source_files\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ],\n \"parent_folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"is_document_preparation_needed\": true,\n \"are_text_signatures_enabled\": true,\n \"email_subject\": \"Sign Request from Acme\",\n \"email_message\": \"Hello! Please sign the document below\",\n \"are_reminders_enabled\": true,\n \"prefill_tags\": [\n  {\n   \"document_tag_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"text_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"checkbox_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"date_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"document_tag_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"text_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"checkbox_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"date_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"days_valid\": 2,\n \"external_id\": \"123\",\n \"is_phone_verification_required_to_view\": true,\n \"type\": \"sign-request\",\n \"id\": \"12345\",\n \"prepare_url\": \"https://prepareurl.com\",\n \"signing_log\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"status\": \"converting\",\n \"sign_files\": {\n  \"files\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  ],\n  \"is_ready_for_download\": true\n },\n \"auto_expire_at\": \"2021-04-26T08:12:13.982Z\"\n}"
                        },
                        {
                            "id": "f3f9af9b-315b-4fba-b137-d60e04c65fc1",
                            "name": "Returns an error when the sign request cannot be found, the user does\nnot have access to the sign request, or `sign_files` and/or\n`parent_folder` is deleted.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a1ea6b17-c0ad-4bc1-9631-fd4d2640d22f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests/:sign_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests",
                                        ":sign_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "sign_request_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the sign request"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List sign requests",
                    "id": "436f3185-8ad8-4d22-9119-d05808e959a1",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/sign_requests?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "sign_requests"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Gets sign requests created by a user. If the `sign_files` and/or\n`parent_folder` are deleted, the sign request will not return in the list."
                    },
                    "response": [
                        {
                            "id": "86ad95b8-89fd-40bd-b5f8-0e053f82156b",
                            "name": "Returns a collection of sign requests",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"signers\": [\n    {\n     \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is_in_person\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"embed_url_external_user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"verification_phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is_in_person\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"embed_url_external_user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"verification_phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"source_files\": [\n    {\n     \"id\": \"12345\",\n     \"etag\": \"1\",\n     \"type\": \"file\",\n     \"sequence_id\": {\n      \"value\": \"<Error: Could not resolve allOf schema\"\n     },\n     \"name\": \"Contract.pdf\",\n     \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n     \"file_version\": {}\n    },\n    {\n     \"id\": \"12345\",\n     \"etag\": \"1\",\n     \"type\": \"file\",\n     \"sequence_id\": {\n      \"value\": \"<Error: Could not resolve allOf schema\"\n     },\n     \"name\": \"Contract.pdf\",\n     \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n     \"file_version\": {}\n    }\n   ],\n   \"parent_folder\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   \"is_document_preparation_needed\": true,\n   \"are_text_signatures_enabled\": true,\n   \"email_subject\": \"Sign Request from Acme\",\n   \"email_message\": \"Hello! Please sign the document below\",\n   \"are_reminders_enabled\": true,\n   \"prefill_tags\": [\n    {\n     \"document_tag_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"text_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"checkbox_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"date_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"document_tag_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"text_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"checkbox_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"date_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"days_valid\": 2,\n   \"external_id\": \"123\",\n   \"is_phone_verification_required_to_view\": true,\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"prepare_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signing_log\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"sign_files\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"auto_expire_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"signers\": [\n    {\n     \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is_in_person\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"embed_url_external_user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"verification_phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is_in_person\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"embed_url_external_user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"verification_phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"source_files\": [\n    {\n     \"id\": \"12345\",\n     \"etag\": \"1\",\n     \"type\": \"file\",\n     \"sequence_id\": {\n      \"value\": \"<Error: Could not resolve allOf schema\"\n     },\n     \"name\": \"Contract.pdf\",\n     \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n     \"file_version\": {}\n    },\n    {\n     \"id\": \"12345\",\n     \"etag\": \"1\",\n     \"type\": \"file\",\n     \"sequence_id\": {\n      \"value\": \"<Error: Could not resolve allOf schema\"\n     },\n     \"name\": \"Contract.pdf\",\n     \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n     \"file_version\": {}\n    }\n   ],\n   \"parent_folder\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   \"is_document_preparation_needed\": true,\n   \"are_text_signatures_enabled\": true,\n   \"email_subject\": \"Sign Request from Acme\",\n   \"email_message\": \"Hello! Please sign the document below\",\n   \"are_reminders_enabled\": true,\n   \"prefill_tags\": [\n    {\n     \"document_tag_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"text_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"checkbox_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"date_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"document_tag_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"text_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"checkbox_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"date_value\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"days_valid\": 2,\n   \"external_id\": \"123\",\n   \"is_phone_verification_required_to_view\": true,\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"prepare_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signing_log\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"sign_files\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"auto_expire_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "093b4b9f-65c4-4c9a-8aea-0ad5e89fe7dc",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create sign request",
                    "id": "46c396b0-d26e-4722-9736-11d9a5c27915",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"signers\": [\n        {\n            \"email\": \"example@gmail.com\",\n            \"role\": \"signer\",\n            \"is_in_person\": true,\n            \"order\": 2,\n            \"embed_url_external_user_id\": \"1234\",\n            \"verification_phone_number\": \"6314578901\",\n            \"password\": \"SecretPassword123\"\n        },\n        {\n            \"email\": \"example@gmail.com\",\n            \"role\": \"signer\",\n            \"is_in_person\": true,\n            \"order\": 2,\n            \"embed_url_external_user_id\": \"1234\",\n            \"verification_phone_number\": \"6314578901\",\n            \"password\": \"SecretPassword123\"\n        }\n    ],\n    \"source_files\": [\n        {\n            \"id\": \"12345\",\n            \"etag\": \"1\",\n            \"type\": \"file\",\n            \"sequence_id\": {\n                \"value\": \"<Error: Could not resolve allOf schema\"\n            },\n            \"name\": \"Contract.pdf\",\n            \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n            \"file_version\": {}\n        },\n        {\n            \"id\": \"12345\",\n            \"etag\": \"1\",\n            \"type\": \"file\",\n            \"sequence_id\": {\n                \"value\": \"<Error: Could not resolve allOf schema\"\n            },\n            \"name\": \"Contract.pdf\",\n            \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n            \"file_version\": {}\n        }\n    ],\n    \"parent_folder\": {\n        \"id\": \"12345\",\n        \"etag\": \"1\",\n        \"type\": \"folder\",\n        \"sequence_id\": {\n            \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"name\": \"Contracts\"\n    },\n    \"is_document_preparation_needed\": true,\n    \"are_text_signatures_enabled\": true,\n    \"email_subject\": \"Sign Request from Acme\",\n    \"email_message\": \"Hello! Please sign the document below\",\n    \"are_reminders_enabled\": true,\n    \"prefill_tags\": [\n        {\n            \"document_tag_id\": \"1234\",\n            \"text_value\": \"text\",\n            \"checkbox_value\": true,\n            \"date_value\": \"2021-04-26T08:12:13.982Z\"\n        },\n        {\n            \"document_tag_id\": \"1234\",\n            \"text_value\": \"text\",\n            \"checkbox_value\": true,\n            \"date_value\": \"2021-04-26T08:12:13.982Z\"\n        }\n    ],\n    \"days_valid\": 2,\n    \"external_id\": \"123\",\n    \"is_phone_verification_required_to_view\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/sign_requests",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "sign_requests"
                            ]
                        },
                        "description": "Creates a sign request. This involves preparing a document for signing and\nsending the sign request to signers."
                    },
                    "response": [
                        {
                            "id": "eb8e8c4a-173e-4346-bfef-27992fd847f8",
                            "name": "Returns a Sign Request object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"signers\": [\n        {\n            \"email\": \"example@gmail.com\",\n            \"role\": \"signer\",\n            \"is_in_person\": true,\n            \"order\": 2,\n            \"embed_url_external_user_id\": \"1234\",\n            \"verification_phone_number\": \"6314578901\",\n            \"password\": \"SecretPassword123\"\n        },\n        {\n            \"email\": \"example@gmail.com\",\n            \"role\": \"signer\",\n            \"is_in_person\": true,\n            \"order\": 2,\n            \"embed_url_external_user_id\": \"1234\",\n            \"verification_phone_number\": \"6314578901\",\n            \"password\": \"SecretPassword123\"\n        }\n    ],\n    \"source_files\": [\n        {\n            \"id\": \"12345\",\n            \"etag\": \"1\",\n            \"type\": \"file\",\n            \"sequence_id\": {\n                \"value\": \"<Error: Could not resolve allOf schema\"\n            },\n            \"name\": \"Contract.pdf\",\n            \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n            \"file_version\": {}\n        },\n        {\n            \"id\": \"12345\",\n            \"etag\": \"1\",\n            \"type\": \"file\",\n            \"sequence_id\": {\n                \"value\": \"<Error: Could not resolve allOf schema\"\n            },\n            \"name\": \"Contract.pdf\",\n            \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n            \"file_version\": {}\n        }\n    ],\n    \"parent_folder\": {\n        \"id\": \"12345\",\n        \"etag\": \"1\",\n        \"type\": \"folder\",\n        \"sequence_id\": {\n            \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"name\": \"Contracts\"\n    },\n    \"is_document_preparation_needed\": true,\n    \"are_text_signatures_enabled\": true,\n    \"email_subject\": \"Sign Request from Acme\",\n    \"email_message\": \"Hello! Please sign the document below\",\n    \"are_reminders_enabled\": true,\n    \"prefill_tags\": [\n        {\n            \"document_tag_id\": \"1234\",\n            \"text_value\": \"text\",\n            \"checkbox_value\": true,\n            \"date_value\": \"2021-04-26T08:12:13.982Z\"\n        },\n        {\n            \"document_tag_id\": \"1234\",\n            \"text_value\": \"text\",\n            \"checkbox_value\": true,\n            \"date_value\": \"2021-04-26T08:12:13.982Z\"\n        }\n    ],\n    \"days_valid\": 2,\n    \"external_id\": \"123\",\n    \"is_phone_verification_required_to_view\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"signers\": [\n  {\n   \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"is_in_person\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url_external_user_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"verification_phone_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"has_viewed_document\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signer_decision\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"inputs\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"is_in_person\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url_external_user_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"verification_phone_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"has_viewed_document\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"signer_decision\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"inputs\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"embed_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"source_files\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ],\n \"parent_folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"is_document_preparation_needed\": true,\n \"are_text_signatures_enabled\": true,\n \"email_subject\": \"Sign Request from Acme\",\n \"email_message\": \"Hello! Please sign the document below\",\n \"are_reminders_enabled\": true,\n \"prefill_tags\": [\n  {\n   \"document_tag_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"text_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"checkbox_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"date_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"document_tag_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"text_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"checkbox_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"date_value\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"days_valid\": 2,\n \"external_id\": \"123\",\n \"is_phone_verification_required_to_view\": true,\n \"type\": \"sign-request\",\n \"id\": \"12345\",\n \"prepare_url\": \"https://prepareurl.com\",\n \"signing_log\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"status\": \"converting\",\n \"sign_files\": {\n  \"files\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   }\n  ],\n  \"is_ready_for_download\": true\n },\n \"auto_expire_at\": \"2021-04-26T08:12:13.982Z\"\n}"
                        },
                        {
                            "id": "c946e084-65ee-4e1d-a2b9-1b1108bcc272",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"signers\": [\n        {\n            \"email\": \"example@gmail.com\",\n            \"role\": \"signer\",\n            \"is_in_person\": true,\n            \"order\": 2,\n            \"embed_url_external_user_id\": \"1234\",\n            \"verification_phone_number\": \"6314578901\",\n            \"password\": \"SecretPassword123\"\n        },\n        {\n            \"email\": \"example@gmail.com\",\n            \"role\": \"signer\",\n            \"is_in_person\": true,\n            \"order\": 2,\n            \"embed_url_external_user_id\": \"1234\",\n            \"verification_phone_number\": \"6314578901\",\n            \"password\": \"SecretPassword123\"\n        }\n    ],\n    \"source_files\": [\n        {\n            \"id\": \"12345\",\n            \"etag\": \"1\",\n            \"type\": \"file\",\n            \"sequence_id\": {\n                \"value\": \"<Error: Could not resolve allOf schema\"\n            },\n            \"name\": \"Contract.pdf\",\n            \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n            \"file_version\": {}\n        },\n        {\n            \"id\": \"12345\",\n            \"etag\": \"1\",\n            \"type\": \"file\",\n            \"sequence_id\": {\n                \"value\": \"<Error: Could not resolve allOf schema\"\n            },\n            \"name\": \"Contract.pdf\",\n            \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n            \"file_version\": {}\n        }\n    ],\n    \"parent_folder\": {\n        \"id\": \"12345\",\n        \"etag\": \"1\",\n        \"type\": \"folder\",\n        \"sequence_id\": {\n            \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"name\": \"Contracts\"\n    },\n    \"is_document_preparation_needed\": true,\n    \"are_text_signatures_enabled\": true,\n    \"email_subject\": \"Sign Request from Acme\",\n    \"email_message\": \"Hello! Please sign the document below\",\n    \"are_reminders_enabled\": true,\n    \"prefill_tags\": [\n        {\n            \"document_tag_id\": \"1234\",\n            \"text_value\": \"text\",\n            \"checkbox_value\": true,\n            \"date_value\": \"2021-04-26T08:12:13.982Z\"\n        },\n        {\n            \"document_tag_id\": \"1234\",\n            \"text_value\": \"text\",\n            \"checkbox_value\": true,\n            \"date_value\": \"2021-04-26T08:12:13.982Z\"\n        }\n    ],\n    \"days_valid\": 2,\n    \"external_id\": \"123\",\n    \"is_phone_verification_required_to_view\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/sign_requests",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "sign_requests"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "5ebaecec-8199-4a8e-9123-3dd9cb87518a"
        },
        {
            "name": "Classifications",
            "item": [
                {
                    "name": "List all classifications",
                    "id": "81d2ce91-bf9b-43d8-bfa0-529691a8c54b",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "enterprise",
                                "securityClassification-6VMVochwUWo",
                                "schema"
                            ]
                        },
                        "description": "Retrieves the classification metadata template and lists all the\nclassifications available to this enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`."
                    },
                    "response": [
                        {
                            "id": "57e9fca8-e0b7-4442-95c2-ddcb14f57997",
                            "name": "Returns the `securityClassification` metadata template, which contains\na `Box__Security__Classification__Key` field that lists all the\nclassifications available to this enterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"securityClassification-6VMVochwUWo\",\n \"displayName\": \"Classification\",\n \"hidden\": false,\n \"copyInstanceOnItemCopy\": true,\n \"fields\": [\n  {\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\",\n   \"type\": \"enum\",\n   \"key\": \"Box__Security__Classification__Key\",\n   \"displayName\": \"Classification\",\n   \"hidden\": false,\n   \"options\": [\n    {\n     \"id\": \"46aea176-3483-4431-856c-6b5b13d1cc50\",\n     \"key\": \"Sensitive\",\n     \"staticConfig\": {\n      \"classification\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "9ff4b6e9-a530-44ba-82df-0b3a89db9ac0",
                            "name": "Returned if any of the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "73c8dcb1-ee87-4894-9e58-53e939f7c581",
                            "name": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3463eec8-b29a-4c63-a346-b9bf183156f1",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete all classifications",
                    "id": "f76e3aae-b25e-4d49-94cb-644bc3018586",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "enterprise",
                                "securityClassification-6VMVochwUWo",
                                "schema"
                            ]
                        },
                        "description": "Delete all classifications by deleting the classification\nmetadata template."
                    },
                    "response": [
                        {
                            "id": "5ea3de8d-bf7a-45ad-9526-fc0f177b90a2",
                            "name": "Returns an empty response when the metadata\ntemplate for classifications is successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "1336f9a4-6706-4e77-a8b8-a9d6a60ae731",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add classification",
                    "id": "e8b86e12-eb5f-4877-8233-d852e0673c61",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "enterprise",
                                "securityClassification-6VMVochwUWo",
                                "schema"
                            ],
                            "hash": "add"
                        },
                        "description": "Adds one or more new classifications to the list of classifications\navailable to the enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`."
                    },
                    "response": [
                        {
                            "id": "b1e61d65-e92d-4dc5-8d48-114258437830",
                            "name": "Returns the updated `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "add"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"securityClassification-6VMVochwUWo\",\n \"displayName\": \"Classification\",\n \"hidden\": false,\n \"copyInstanceOnItemCopy\": true,\n \"fields\": [\n  {\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\",\n   \"type\": \"enum\",\n   \"key\": \"Box__Security__Classification__Key\",\n   \"displayName\": \"Classification\",\n   \"hidden\": false,\n   \"options\": [\n    {\n     \"id\": \"46aea176-3483-4431-856c-6b5b13d1cc50\",\n     \"key\": \"Sensitive\",\n     \"staticConfig\": {\n      \"classification\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "0fd000cb-c604-43e9-965b-7b1db9d11138",
                            "name": "Returned if any of the request parameters are not valid.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "add"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "31e0aabf-8dc3-4446-8f0e-cf893cb94f0b",
                            "name": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "add"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c931d267-d77e-42fe-9ac4-35716467d7f7",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"data\": {\n            \"key\": \"Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "add"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update classification",
                    "id": "a46ef1c6-2236-4e77-8a7f-74b726eacdbb",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "enterprise",
                                "securityClassification-6VMVochwUWo",
                                "schema"
                            ],
                            "hash": "update"
                        },
                        "description": "Updates the labels and descriptions of one or more classifications\navailable to the enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`."
                    },
                    "response": [
                        {
                            "id": "95e64dc8-5513-4073-b539-48e92b4db8eb",
                            "name": "Returns the updated `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "update"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"securityClassification-6VMVochwUWo\",\n \"displayName\": \"Classification\",\n \"hidden\": false,\n \"copyInstanceOnItemCopy\": true,\n \"fields\": [\n  {\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\",\n   \"type\": \"enum\",\n   \"key\": \"Box__Security__Classification__Key\",\n   \"displayName\": \"Classification\",\n   \"hidden\": false,\n   \"options\": [\n    {\n     \"id\": \"46aea176-3483-4431-856c-6b5b13d1cc50\",\n     \"key\": \"Sensitive\",\n     \"staticConfig\": {\n      \"classification\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "e0b22617-c190-4a84-ba60-b3f31138196d",
                            "name": "Returned if any of the request parameters are not valid.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "update"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "733d89ae-df78-474b-bed7-089fcb184c13",
                            "name": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "update"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5fc92595-5f43-4714-86e7-ad199ccd26da",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    },\n    {\n        \"op\": \"editEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\",\n        \"data\": {\n            \"key\": \"Very Sensitive\",\n            \"classification\": {\n                \"classificationDefinition\": \"Sensitive information that must not be shared.\",\n                \"colorID\": 4\n            }\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "update"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete classification",
                    "id": "4dd13c32-a209-4007-8d03-6d480d725cd8",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    },\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "enterprise",
                                "securityClassification-6VMVochwUWo",
                                "schema"
                            ],
                            "hash": "delete"
                        },
                        "description": "Removes a classification from the list of classifications\navailable to the enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`."
                    },
                    "response": [
                        {
                            "id": "f9c6b4c6-4949-4e22-9053-276b1ba77d5a",
                            "name": "Returns the updated `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    },\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "delete"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"securityClassification-6VMVochwUWo\",\n \"displayName\": \"Classification\",\n \"hidden\": false,\n \"copyInstanceOnItemCopy\": true,\n \"fields\": [\n  {\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\",\n   \"type\": \"enum\",\n   \"key\": \"Box__Security__Classification__Key\",\n   \"displayName\": \"Classification\",\n   \"hidden\": false,\n   \"options\": [\n    {\n     \"id\": \"46aea176-3483-4431-856c-6b5b13d1cc50\",\n     \"key\": \"Sensitive\",\n     \"staticConfig\": {\n      \"classification\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "8433705b-884b-4723-8708-12e55d17ab23",
                            "name": "Returned if any of the request parameters are not valid.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    },\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "delete"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "049141fc-ec3c-4518-99b2-6f1d96c0419d",
                            "name": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    },\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "delete"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "fb8e4738-ac65-42a5-afde-51a8ca77d1e7",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    },\n    {\n        \"op\": \"removeEnumOption\",\n        \"fieldKey\": \"Box__Security__Classification__Key\",\n        \"enumOptionKey\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo",
                                        "schema"
                                    ],
                                    "hash": "delete"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add initial classifications",
                    "id": "9d279b3a-a9e4-4e40-a1f8-489c1a2b6dc1",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Classification\",\n    \"templateKey\": \"securityClassification-6VMVochwUWo\",\n    \"hidden\": false,\n    \"copyInstanceOnItemCopy\": false,\n    \"fields\": [\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/schema#classifications",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "schema"
                            ],
                            "hash": "classifications"
                        },
                        "description": "When an enterprise does not yet have any classifications, this API call\ninitializes the classification template with an initial set of\nclassifications.\n\nIf an enterprise already has a classification, the template will already\nexist and instead an API call should be made to add additional\nclassifications."
                    },
                    "response": [
                        {
                            "id": "923c4aab-899e-473b-a6e0-8e1a00a14068",
                            "name": "Returns a new `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Classification\",\n    \"templateKey\": \"securityClassification-6VMVochwUWo\",\n    \"hidden\": false,\n    \"copyInstanceOnItemCopy\": false,\n    \"fields\": [\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema#classifications",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ],
                                    "hash": "classifications"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"securityClassification-6VMVochwUWo\",\n \"displayName\": \"Classification\",\n \"hidden\": false,\n \"copyInstanceOnItemCopy\": true,\n \"fields\": [\n  {\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\",\n   \"type\": \"enum\",\n   \"key\": \"Box__Security__Classification__Key\",\n   \"displayName\": \"Classification\",\n   \"hidden\": false,\n   \"options\": [\n    {\n     \"id\": \"46aea176-3483-4431-856c-6b5b13d1cc50\",\n     \"key\": \"Sensitive\",\n     \"staticConfig\": {\n      \"classification\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "7b2d3724-806d-492e-87d9-412fdddda37d",
                            "name": "Returned if any of the request parameters are not valid.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Classification\",\n    \"templateKey\": \"securityClassification-6VMVochwUWo\",\n    \"hidden\": false,\n    \"copyInstanceOnItemCopy\": false,\n    \"fields\": [\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema#classifications",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ],
                                    "hash": "classifications"
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3392ead8-056d-4a62-aa61-c5b4ddc0c590",
                            "name": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Classification\",\n    \"templateKey\": \"securityClassification-6VMVochwUWo\",\n    \"hidden\": false,\n    \"copyInstanceOnItemCopy\": false,\n    \"fields\": [\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema#classifications",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ],
                                    "hash": "classifications"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b3ade106-530c-4db5-8cb8-a64251425098",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Classification\",\n    \"templateKey\": \"securityClassification-6VMVochwUWo\",\n    \"hidden\": false,\n    \"copyInstanceOnItemCopy\": false,\n    \"fields\": [\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"enum\",\n            \"key\": \"Box__Security__Classification__Key\",\n            \"displayName\": \"Classification\",\n            \"hidden\": false,\n            \"options\": [\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                },\n                {\n                    \"key\": \"Sensitive\",\n                    \"staticConfig\": {\n                        \"classification\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema#classifications",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ],
                                    "hash": "classifications"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "ed02a038-e665-4f1e-878b-f8ad84f1b56a"
        },
        {
            "name": "Classifications on files",
            "item": [
                {
                    "name": "Get classification on file",
                    "id": "2b913fa4-fe39-4c6c-a174-3a5a2288108a",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "a432cd08-7d4a-453a-88dd-4cef3d04042d",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves the classification metadata instance that\nhas been applied to a file.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`."
                    },
                    "response": [
                        {
                            "id": "dfb085a5-3c6c-4577-bb47-bb9d0bcb1a1a",
                            "name": "Returns an instance of the `securityClassification` metadata\ntemplate, which contains a `Box__Security__Classification__Key`\nfield that lists all the classifications available to this\nenterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Box__Security__Classification__Key\": \"Sensitive\",\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"securityClassification-6VMVochwUWo\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1,\n \"$type\": \"securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8\",\n \"$typeVersion\": 5,\n \"$canEdit\": true\n}"
                        },
                        {
                            "id": "b13292dd-574a-4570-a109-114884ebd423",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ad99abd0-ec36-44b4-a563-3d71cebd5d5a",
                            "name": "Returned if the metadata template specified\nwas not applied to this file or the user does not have access to the\nfile.\n\n* `instance_not_found` - The metadata template was not applied to the\nfile.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "aa9cc3c7-07b5-44b0-aa98-ee8041aeb518",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "29c73167-ac4d-4719-afe1-6a68c9bd5887",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add classification to file",
                    "id": "cea9e9ee-7488-4294-8c7c-331f183b2356",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "d2e50034-1bc6-4486-b05c-cb8d5aaf4138",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Adds a classification to a file by specifying the label of the\nclassification to add.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`."
                    },
                    "response": [
                        {
                            "id": "40e73dfb-b4de-4b9a-8816-691c136c03dd",
                            "name": "Returns the classification template instance\nthat was applied to the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Box__Security__Classification__Key\": \"Sensitive\",\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"securityClassification-6VMVochwUWo\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1,\n \"$type\": \"securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8\",\n \"$typeVersion\": 5,\n \"$canEdit\": true\n}"
                        },
                        {
                            "id": "94c0a784-2034-4120-b855-859ee36628d8",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5bac0677-e39e-412f-b961-ceebe079ad2e",
                            "name": "Returns an error when the file or metadata template could not be found.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.\n* `instance_tuple_not_found` - The metadata template could not be found.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5c7d2ada-8907-43d5-82bb-10f432a5f4e5",
                            "name": "Returns an error when an instance of this metadata template is already\npresent on the file.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a637408a-653e-450f-a7ff-2e30ed4a31df",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update classification on file",
                    "id": "eb204936-9be2-43e6-a40c-6c8ca5adc72e",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "c93ebc8e-0e3b-44b8-85d2-40b0f41d1a45",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Updates a classification on a file.\n\nThe classification can only be updated if a classification has already been\napplied to the file before. When editing classifications, only values are\ndefined for the enterprise will be accepted."
                    },
                    "response": [
                        {
                            "id": "86a27053-6f52-492a-9ac9-cc806fb6805b",
                            "name": "Returns the updated classification metadata template instance.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Box__Security__Classification__Key\": \"Sensitive\",\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"securityClassification-6VMVochwUWo\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1,\n \"$type\": \"securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8\",\n \"$typeVersion\": 5,\n \"$canEdit\": true\n}"
                        },
                        {
                            "id": "20235fe2-6422-4a86-9731-fc91c7aa15f7",
                            "name": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch operations.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "88fd16f2-0912-4ff1-a3ca-00b8611b3ece",
                            "name": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e9f95781-eac4-49c5-b816-7bc9164390b6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove classification from file",
                    "id": "29968477-5601-4a43-a946-fe2c40f7c2b8",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "d415727e-c429-4fb7-8a9c-87c23b35c828",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Removes any classifications from a file.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`."
                    },
                    "response": [
                        {
                            "id": "6055fcb0-43b5-44cc-9427-75960aa93244",
                            "name": "Returns an empty response when the classification is\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "0da00fa4-cbd5-43a4-a2a2-d72975c0f1d8",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ac4fbeb6-b3a5-489f-90c7-d8407001c265",
                            "name": "Returns an error when the file does not have any classification applied\nto it, or when the user does not have access to the\nfile.\n\n* `instance_not_found` - An instance of the classification metadata\ntemplate with the was not found on this file.\n* `not_fou",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "2a60625d-e627-47dd-b2c7-4a74bf08d090",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "62a6d586-50eb-4d71-b014-7b582497d091",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "ceaa8641-ba95-4eaa-bcb8-6a8cd83db6eb"
        },
        {
            "name": "Classifications on folders",
            "item": [
                {
                    "name": "Get classification on folder",
                    "id": "5419b143-2499-468c-8b29-37f5f9b9491a",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "b69b7117-89de-4bad-93a6-d0055828e29c",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieves the classification metadata instance that\nhas been applied to a folder.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`."
                    },
                    "response": [
                        {
                            "id": "17f622a6-4238-4ba4-b4cc-90d8a6ac19a9",
                            "name": "Returns an instance of the `securityClassification` metadata\ntemplate, which contains a `Box__Security__Classification__Key`\nfield that lists all the classifications available to this\nenterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Box__Security__Classification__Key\": \"Sensitive\",\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"securityClassification-6VMVochwUWo\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1,\n \"$type\": \"securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8\",\n \"$typeVersion\": 5,\n \"$canEdit\": true\n}"
                        },
                        {
                            "id": "f9d3c745-500b-4870-942b-77ed2ff18f54",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c0389b06-8777-419a-b369-137bf13fc25c",
                            "name": "Returned if the metadata template specified\nwas not applied to this folder or the user does not have access to the\nfolder.\n\n* `instance_not_found` - The metadata template was not applied to the\nfolder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "221a7b57-f3e3-417e-81a8-f9894edbef6b",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "40358a0a-b748-49cf-8da2-e24eea617888",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add classification to folder",
                    "id": "6b7352f0-863f-49b2-bbe1-5fcf439c1249",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "0dcb5c9c-c1b8-4dbd-be45-4d95de294345",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Adds a classification to a folder by specifying the label of the\nclassification to add.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`."
                    },
                    "response": [
                        {
                            "id": "3d9e2526-0906-4f7a-ad92-78bcbb0c0803",
                            "name": "Returns the classification template instance\nthat was applied to the folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Box__Security__Classification__Key\": \"Sensitive\",\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"securityClassification-6VMVochwUWo\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1,\n \"$type\": \"securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8\",\n \"$typeVersion\": 5,\n \"$canEdit\": true\n}"
                        },
                        {
                            "id": "60e0e00f-9415-45e7-a966-dfa2f6a6eaf7",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3a61b7d7-0c77-4a8d-bbe3-e05a30ff438d",
                            "name": "Returns an error when the folder or metadata template could not be found.\n\n* `not_found` - The folder could not be found, or the user does not have\naccess to the folder.\n* `instance_tuple_not_found` - The metadata template could not be found.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b6a85f40-6dd6-4f3f-a52c-556675f86068",
                            "name": "Returns an error when an instance of this metadata template is already\npresent on the folder.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1462c02e-1767-4a4f-befa-3c9ee4bd0fae",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"Box__Security__Classification__Key\": \"Sensitive\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update classification on folder",
                    "id": "859659ff-f1be-4f60-960d-3a5c9aadfb61",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "e3366fe2-5295-436a-a9bd-2925f2a4817d",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Updates a classification on a folder.\n\nThe classification can only be updated if a classification has already been\napplied to the folder before. When editing classifications, only values are\ndefined for the enterprise will be accepted."
                    },
                    "response": [
                        {
                            "id": "ace4fc38-349d-4d55-a285-8afd9086fac8",
                            "name": "Returns the updated classification metadata template instance.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"Box__Security__Classification__Key\": \"Sensitive\",\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"securityClassification-6VMVochwUWo\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1,\n \"$type\": \"securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8\",\n \"$typeVersion\": 5,\n \"$canEdit\": true\n}"
                        },
                        {
                            "id": "b970bfc8-c64f-4554-8e7b-f0fa177169ad",
                            "name": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch operations.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8a3813bc-31e1-4e5e-a369-587702083aca",
                            "name": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d88f7482-6efa-43f2-be5e-5efcdf5ab365",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/Box__Security__Classification__Key\",\n        \"value\": \"Sensitive\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove classification from folder",
                    "id": "bf49dbf8-6825-49b9-9bb8-aac5e547a2d2",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                "enterprise",
                                "securityClassification-6VMVochwUWo"
                            ],
                            "variable": [
                                {
                                    "id": "844ddc67-c83a-4cb0-b530-12ba77b6341a",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Removes any classifications from a folder.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`."
                    },
                    "response": [
                        {
                            "id": "027c969a-ae6a-4caa-996d-f38da1f0a619",
                            "name": "Returns an empty response when the classification is\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "bbd62961-0c68-4194-a661-077a7d001429",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "52b0533a-b43b-410c-89a3-faf67826f1e5",
                            "name": "Returns an error when the folder does not have any classification applied\nto it, or when the user does not have access to the\nfolder.\n\n* `instance_not_found` - An instance of the classification metadata\ntemplate with the was not found on this folder.\n* `n",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "6c847c15-12dc-450d-b72b-fa42948c20d8",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "042ef683-4b31-4b1b-ad7b-5d4683b37b04",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/enterprise/securityClassification-6VMVochwUWo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        "enterprise",
                                        "securityClassification-6VMVochwUWo"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "b655201f-8f0f-4920-b320-c5305f51f226"
        },
        {
            "name": "Collaborations",
            "item": [
                {
                    "name": "Get collaboration",
                    "id": "aaacc1f4-f3e8-4eba-ad59-b952a14ab1d5",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaborations/:collaboration_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaborations",
                                ":collaboration_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "8af44b1e-b761-4737-9d47-d851e19d0c41",
                                    "key": "collaboration_id",
                                    "value": "1234",
                                    "description": "(Required) The ID of the collaboration"
                                }
                            ]
                        },
                        "description": "Retrieves a single collaboration."
                    },
                    "response": [
                        {
                            "id": "f09250a2-ddbf-4700-a32a-675c0524bc10",
                            "name": "Returns a collaboration object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345678\",\n \"type\": \"collaboration\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {},\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"size\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path_collection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trashed_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purged_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owned_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shared_link\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"item_status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"accessible_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"invite_email\": \"john@example.com\",\n \"role\": \"editor\",\n \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n \"status\": \"accepted\",\n \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"acceptance_requirements_status\": {\n  \"terms_of_service_requirement\": {\n   \"is_accepted\": true,\n   \"terms_of_service\": {\n    \"id\": \"11446498\",\n    \"type\": \"terms_of_service\"\n   }\n  },\n  \"strong_password_requirement\": {\n   \"enterprise_has_strong_password_required_for_external_users\": true,\n   \"user_has_strong_password\": true\n  },\n  \"two_factor_authentication_requirement\": {\n   \"enterprise_has_two_factor_auth_enabled\": true,\n   \"user_has_two_factor_authentication_enabled\": true\n  }\n }\n}"
                        },
                        {
                            "id": "a70a6ac6-0c5e-4437-89f2-65a657704446",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update collaboration",
                    "id": "a2277c9d-007a-47e2-bc92-fb84d83754eb",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"role\": \"editor\",\n    \"status\": \"accepted\",\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\",\n    \"can_view_path\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaborations",
                                ":collaboration_id"
                            ],
                            "variable": [
                                {
                                    "id": "c800078a-5e2d-4552-af80-7ae2cc4ffed7",
                                    "key": "collaboration_id",
                                    "value": "1234",
                                    "description": "(Required) The ID of the collaboration"
                                }
                            ]
                        },
                        "description": "Updates a collaboration.\n\nCan be used to change the owner of an item, or to\naccept collaboration invites."
                    },
                    "response": [
                        {
                            "id": "dbca9d27-5c97-4c74-be74-ead22f7609e1",
                            "name": "Returns an updated collaboration object unless the owner has changed.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"role\": \"editor\",\n    \"status\": \"accepted\",\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\",\n    \"can_view_path\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345678\",\n \"type\": \"collaboration\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {},\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"size\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path_collection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trashed_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purged_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owned_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shared_link\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"item_status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"accessible_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"invite_email\": \"john@example.com\",\n \"role\": \"editor\",\n \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n \"status\": \"accepted\",\n \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"acceptance_requirements_status\": {\n  \"terms_of_service_requirement\": {\n   \"is_accepted\": true,\n   \"terms_of_service\": {\n    \"id\": \"11446498\",\n    \"type\": \"terms_of_service\"\n   }\n  },\n  \"strong_password_requirement\": {\n   \"enterprise_has_strong_password_required_for_external_users\": true,\n   \"user_has_strong_password\": true\n  },\n  \"two_factor_authentication_requirement\": {\n   \"enterprise_has_two_factor_auth_enabled\": true,\n   \"user_has_two_factor_authentication_enabled\": true\n  }\n }\n}"
                        },
                        {
                            "id": "eca4e625-d14d-4fca-88e7-c34d609d9c63",
                            "name": "If the role is changed to `owner`, the collaboration is deleted\nand a new collaboration is created. The previous `owner` of\nthe old collaboration will be a `co-owner` on the new collaboration.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"role\": \"editor\",\n    \"status\": \"accepted\",\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\",\n    \"can_view_path\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345678\",\n \"type\": \"collaboration\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {},\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"size\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path_collection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trashed_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purged_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owned_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shared_link\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"item_status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"accessible_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"invite_email\": \"john@example.com\",\n \"role\": \"editor\",\n \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n \"status\": \"accepted\",\n \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"acceptance_requirements_status\": {\n  \"terms_of_service_requirement\": {\n   \"is_accepted\": true,\n   \"terms_of_service\": {\n    \"id\": \"11446498\",\n    \"type\": \"terms_of_service\"\n   }\n  },\n  \"strong_password_requirement\": {\n   \"enterprise_has_strong_password_required_for_external_users\": true,\n   \"user_has_strong_password\": true\n  },\n  \"two_factor_authentication_requirement\": {\n   \"enterprise_has_two_factor_auth_enabled\": true,\n   \"user_has_two_factor_authentication_enabled\": true\n  }\n }\n}"
                        },
                        {
                            "id": "168b4cc1-bf81-491d-9c53-7b9766e454ee",
                            "name": "Returns an error if the authenticated user does not have the right\npermissions to update the collaboration.\n\nAdditionally, this error may occur when attempting to update the\n`expires_at` field for the collaboration without the **Automatically\nremove invit",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"role\": \"editor\",\n    \"status\": \"accepted\",\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\",\n    \"can_view_path\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d7a21933-9ea3-4bd9-aa00-e90381d686e6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"role\": \"editor\",\n    \"status\": \"accepted\",\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\",\n    \"can_view_path\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove collaboration",
                    "id": "5f0424a3-49e8-4c1a-8d25-2f652bdf4588",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaborations",
                                ":collaboration_id"
                            ],
                            "variable": [
                                {
                                    "id": "16b2dc90-8749-4f62-ad82-a1bae18d67c0",
                                    "key": "collaboration_id",
                                    "value": "1234",
                                    "description": "(Required) The ID of the collaboration"
                                }
                            ]
                        },
                        "description": "Deletes a single collaboration."
                    },
                    "response": [
                        {
                            "id": "db89e6ba-eedf-4901-a9d0-2ff39122fe8c",
                            "name": "A blank response is returned if the collaboration was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "f009b7d7-4fd5-4a37-a99b-233b470bdec4",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations/:collaboration_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations",
                                        ":collaboration_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the collaboration"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create collaboration",
                    "id": "c84d16ba-590f-41c5-8ba9-dd5b38d67350",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"accessible_by\": {\n        \"type\": \"user\",\n        \"id\": \"23522323\",\n        \"login\": \"john@example.com\"\n    },\n    \"role\": \"editor\",\n    \"can_view_path\": true,\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/collaborations?fields=id,type,name&notify=true",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaborations"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "notify",
                                    "value": "true",
                                    "description": "Determines if users should receive email notification\nfor the action performed."
                                }
                            ]
                        },
                        "description": "Adds a collaboration for a single user or a single group to a file\nor folder.\n\nCollaborations can be created using email address, user IDs, or a\ngroup IDs.\n\nIf a collaboration is being created with a group, access to\nthis endpoint is dependent on the group's ability to be invited."
                    },
                    "response": [
                        {
                            "id": "b68d6655-a586-4332-bad7-e1482d12cc0a",
                            "name": "Returns a new collaboration object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"accessible_by\": {\n        \"type\": \"user\",\n        \"id\": \"23522323\",\n        \"login\": \"john@example.com\"\n    },\n    \"role\": \"editor\",\n    \"can_view_path\": true,\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations?fields=id,type,name&notify=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "notify",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345678\",\n \"type\": \"collaboration\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {},\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"size\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path_collection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trashed_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purged_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owned_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shared_link\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"item_status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"accessible_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"invite_email\": \"john@example.com\",\n \"role\": \"editor\",\n \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n \"status\": \"accepted\",\n \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"acceptance_requirements_status\": {\n  \"terms_of_service_requirement\": {\n   \"is_accepted\": true,\n   \"terms_of_service\": {\n    \"id\": \"11446498\",\n    \"type\": \"terms_of_service\"\n   }\n  },\n  \"strong_password_requirement\": {\n   \"enterprise_has_strong_password_required_for_external_users\": true,\n   \"user_has_strong_password\": true\n  },\n  \"two_factor_authentication_requirement\": {\n   \"enterprise_has_two_factor_auth_enabled\": true,\n   \"user_has_two_factor_authentication_enabled\": true\n  }\n }\n}"
                        },
                        {
                            "id": "75e7fbec-4d1c-4c98-9d0f-7e449c374440",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"accessible_by\": {\n        \"type\": \"user\",\n        \"id\": \"23522323\",\n        \"login\": \"john@example.com\"\n    },\n    \"role\": \"editor\",\n    \"can_view_path\": true,\n    \"expires_at\": \"2019-08-29T23:59:00-07:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations?fields=id,type,name&notify=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "notify",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "3a6d083b-aec3-47c0-adfd-d11a84ad97ea"
        },
        {
            "name": "Collaborations (List)",
            "item": [
                {
                    "name": "List file collaborations",
                    "id": "0c1d267c-003c-4129-b016-968db2187963",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/collaborations?fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "collaborations"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "d139fd33-1786-4b6f-bf9c-586b6bbdc1cf",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves a list of pending and active collaborations for a\nfile. This returns all the users that have access to the file\nor have been invited to the file."
                    },
                    "response": [
                        {
                            "id": "fb95dc8a-6280-44d4-b1be-7a908797194b",
                            "name": "Returns a collection of collaboration objects. If there are no\ncollaborations on this file an empty collection will be returned.\n\nThis list includes pending collaborations, for which the `status`\nis set to `pending`, indicating invitations that have been ",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/collaborations?fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "06e7bba6-c951-421d-a785-070a28da6b98",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/collaborations?fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List folder collaborations",
                    "id": "0b8154b0-f541-4380-84cd-d2c6719d1bab",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/collaborations?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "collaborations"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "a2d4785b-2a76-4574-8e6f-9eb76b27bf6c",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves a list of pending and active collaborations for a\nfolder. This returns all the users that have access to the folder\nor have been invited to the folder."
                    },
                    "response": [
                        {
                            "id": "461172b7-eff7-4ee2-aa4d-33ef483f3fd0",
                            "name": "Returns a collection of collaboration objects. If there are no\ncollaborations on this folder an empty collection will be returned.\n\nThis list includes pending collaborations, for which the `status`\nis set to `pending`, indicating invitations that have bee",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/collaborations?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "e5397e39-70c6-4005-bc62-e9dc98d3967a",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/collaborations?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List pending collaborations",
                    "id": "0c76366a-8ccb-4534-b744-046b3d1531c0",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaborations?status=pending&fields=id,type,name&offset=1000&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaborations"
                            ],
                            "query": [
                                {
                                    "key": "status",
                                    "value": "pending",
                                    "description": "(Required) The status of the collaborations to retrieve"
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Retrieves all pending collaboration invites for this user."
                    },
                    "response": [
                        {
                            "id": "3de87935-0153-497d-a031-0dc390ea0e31",
                            "name": "Returns a collection of pending collaboration objects.\n\nIf the user has no pending collaborations, the collection\nwill be empty.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations?status=pending&fields=id,type,name&offset=1000&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "pending"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "7c0fc93e-5930-47cf-b65e-4a06c34ef1c4",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaborations?status=pending&fields=id,type,name&offset=1000&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "pending"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List group collaborations",
                    "id": "886f5907-3b64-4b78-8067-12b6314228a6",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/groups/:group_id/collaborations?limit=1000&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups",
                                ":group_id",
                                "collaborations"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "73cf19e4-6e63-48e1-b2cc-2951b086786f",
                                    "key": "group_id",
                                    "value": "57645",
                                    "description": "(Required) The ID of the group."
                                }
                            ]
                        },
                        "description": "Retrieves all the collaborations for a group. The user\nmust have admin permissions to inspect enterprise's groups.\n\nEach collaboration object has details on which files or\nfolders the group has access to and with what role."
                    },
                    "response": [
                        {
                            "id": "2738bf81-bf6e-4ec8-ba2a-0e99289da8ce",
                            "name": "Returns a collection of collaboration objects. If there are no\ncollaborations, an empty collection will be returned.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id/collaborations?limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id",
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  {\n   \"id\": \"12345678\",\n   \"type\": \"collaboration\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"accessible_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"invite_email\": \"john@example.com\",\n   \"role\": \"editor\",\n   \"expires_at\": \"2012-12-26T10:53:43-08:00\",\n   \"status\": \"accepted\",\n   \"acknowledged_at\": \"2012-12-12T10:55:20-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"acceptance_requirements_status\": {\n    \"terms_of_service_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"strong_password_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"two_factor_authentication_requirement\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "b89575f2-dc1a-43b9-9610-38e96fdc63c6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id/collaborations?limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id",
                                        "collaborations"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "6a4ba6c2-3d32-4e5f-aadc-6c2dd42288db"
        },
        {
            "name": "Collections",
            "item": [
                {
                    "name": "List all collections",
                    "id": "b4e62c09-f775-49f2-b569-9767194aa8a7",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collections?fields=id,type,name&offset=1000&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collections"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Retrieves all collections for a given user.\n\nCurrently, only the `favorites` collection\nis supported."
                    },
                    "response": [
                        {
                            "id": "5a09bca8-db4c-4ee0-8bcd-1a4a3e18e5a0",
                            "name": "Returns all collections for the given user",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collections?fields=id,type,name&offset=1000&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collections"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"collection\",\n   \"name\": \"Favorites\",\n   \"collection_type\": \"favorites\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"collection\",\n   \"name\": \"Favorites\",\n   \"collection_type\": \"favorites\"\n  }\n ]\n}"
                        },
                        {
                            "id": "2a1d48ec-fbd9-4eb5-adec-5cf145dbcbe4",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collections?fields=id,type,name&offset=1000&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collections"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List collection items",
                    "id": "bb4eb3ea-b09e-45e4-941a-fb42b37c8403",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collections/:collection_id/items?fields=id,type,name&offset=1000&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collections",
                                ":collection_id",
                                "items"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "30646cbc-56d2-44f3-a8fa-1ca52f386521",
                                    "key": "collection_id",
                                    "value": "926489",
                                    "description": "(Required) The ID of the collection."
                                }
                            ]
                        },
                        "description": "Retrieves the files and/or folders contained within\nthis collection."
                    },
                    "response": [
                        {
                            "id": "601d8fd3-2389-4ad1-becb-4493c8c609f2",
                            "name": "Returns an array of items in the collection.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collections/:collection_id/items?fields=id,type,name&offset=1000&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collections",
                                        ":collection_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "collection_id",
                                            "value": "926489",
                                            "description": "(Required) The ID of the collection."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ]\n}"
                        },
                        {
                            "id": "6693d234-bee3-4cad-8879-3a48c7265175",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collections/:collection_id/items?fields=id,type,name&offset=1000&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collections",
                                        ":collection_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "collection_id",
                                            "value": "926489",
                                            "description": "(Required) The ID of the collection."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "c9cb0cdc-3f63-4ab9-b3ef-6b637fc2604c"
        },
        {
            "name": "Comments",
            "item": [
                {
                    "name": "List file comments",
                    "id": "02bb6fc1-df3d-4598-9d74-9eb70b01fdb2",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/comments?fields=id,type,name&limit=1000&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "comments"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "645bd1e4-e5c6-450f-8885-2fe7dbbf1ac2",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves a list of comments for a file."
                    },
                    "response": [
                        {
                            "id": "c68e0a2a-3204-410c-8c54-c5a29412498e",
                            "name": "Returns a collection of comment objects. If there are no\ncomments on this file an empty collection will be returned.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/comments?fields=id,type,name&limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "comments"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"is_reply_comment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"message\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"is_reply_comment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"message\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "159f1329-402d-421f-9195-012cbc16d567",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/comments?fields=id,type,name&limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "comments"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get comment",
                    "id": "781d5e49-7976-4ab5-be1f-b49f36f9652c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/comments/:comment_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "comments",
                                ":comment_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "62693b46-bc3f-47ed-8c74-90b7b412aebf",
                                    "key": "comment_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the comment."
                                }
                            ]
                        },
                        "description": "Retrieves the message and metadata for a specific comment, as well\nas information on the user who created the comment."
                    },
                    "response": [
                        {
                            "id": "4b79af1b-6087-47ae-9634-699632bbe3ad",
                            "name": "Returns a full comment object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/comments/:comment_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments",
                                        ":comment_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "comment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the comment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"comment\",\n \"is_reply_comment\": true,\n \"message\": \"@Aaron Levie these tigers are cool!\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"item\": {\n  \"id\": \"11446498\",\n  \"type\": \"file\"\n }\n}"
                        },
                        {
                            "id": "f347c871-2443-4079-80af-52c1f839c6e6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/comments/:comment_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments",
                                        ":comment_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "comment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the comment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update comment",
                    "id": "b3e6854d-a250-4022-9492-d659d2404190",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"message\": \"Review completed!\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/comments/:comment_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "comments",
                                ":comment_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "14712153-d8f1-449c-aa9f-9d22bb4f1cf5",
                                    "key": "comment_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the comment."
                                }
                            ]
                        },
                        "description": "Update the message of a comment."
                    },
                    "response": [
                        {
                            "id": "695b6c89-3694-4ff7-b0fb-90733b320eac",
                            "name": "Returns the updated comment object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Review completed!\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/comments/:comment_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments",
                                        ":comment_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "comment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the comment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"comment\",\n \"is_reply_comment\": true,\n \"message\": \"@Aaron Levie these tigers are cool!\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"item\": {\n  \"id\": \"11446498\",\n  \"type\": \"file\"\n }\n}"
                        },
                        {
                            "id": "676deb40-9d98-4152-894e-910d4f6d0daa",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Review completed!\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/comments/:comment_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments",
                                        ":comment_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "comment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the comment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove comment",
                    "id": "7080f59b-b069-44f7-8f24-ce0ad1fc54bd",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/comments/:comment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "comments",
                                ":comment_id"
                            ],
                            "variable": [
                                {
                                    "id": "d6ebae9e-3528-4f24-97b7-9a5380ce4b83",
                                    "key": "comment_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the comment."
                                }
                            ]
                        },
                        "description": "Permanently deletes a comment."
                    },
                    "response": [
                        {
                            "id": "5bf03d32-56c1-457a-9983-ce918da95d82",
                            "name": "Returns an empty response when the comment has been deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/comments/:comment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments",
                                        ":comment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "comment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the comment."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "94a60f90-171a-4e80-a7ab-0d26a6348704",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/comments/:comment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments",
                                        ":comment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "comment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the comment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create comment",
                    "id": "3f98308e-3c9c-42e3-979a-d43c5ef2c20b",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"message\": \"Review completed!\",\n    \"tagged_message\": \"@[1234:John] Review completed!\",\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/comments?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "comments"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Adds a comment by the user to a specific file, or\nas a reply to an other comment."
                    },
                    "response": [
                        {
                            "id": "e2319211-7abe-4c40-a57d-0412674d53ce",
                            "name": "Returns the newly created comment object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Review completed!\",\n    \"tagged_message\": \"@[1234:John] Review completed!\",\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/comments?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"comment\",\n \"is_reply_comment\": true,\n \"message\": \"@Aaron Levie these tigers are cool!\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"item\": {\n  \"id\": \"11446498\",\n  \"type\": \"file\"\n }\n}"
                        },
                        {
                            "id": "10dc8521-2cdc-4a52-b4cb-ce6ea9e5a776",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Review completed!\",\n    \"tagged_message\": \"@[1234:John] Review completed!\",\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/comments?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "comments"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "36e6b390-ac68-4bcb-9760-a79cd212daf5"
        },
        {
            "name": "Device pinners",
            "item": [
                {
                    "name": "Get device pin",
                    "id": "eaa53d5d-29d9-42a3-a74d-9be5ed667796",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/device_pinners/:device_pinner_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "device_pinners",
                                ":device_pinner_id"
                            ],
                            "variable": [
                                {
                                    "id": "5b879752-2af1-4b61-b63a-35c0910e3449",
                                    "key": "device_pinner_id",
                                    "value": "2324234",
                                    "description": "(Required) The ID of the device pin"
                                }
                            ]
                        },
                        "description": "Retrieves information about an individual device pin."
                    },
                    "response": [
                        {
                            "id": "cafa0513-b97e-40e5-bf68-b3261403d3ab",
                            "name": "Returns information about a single device pin.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/device_pinners/:device_pinner_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "device_pinners",
                                        ":device_pinner_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "device_pinner_id",
                                            "value": "2324234",
                                            "description": "(Required) The ID of the device pin"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"device_pinner\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"product_name\": \"iPad\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "a3eb7029-f3e3-4d60-8d91-6d3d4e8e58bf",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/device_pinners/:device_pinner_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "device_pinners",
                                        ":device_pinner_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "device_pinner_id",
                                            "value": "2324234",
                                            "description": "(Required) The ID of the device pin"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove device pin",
                    "id": "a52317a9-827f-409c-a373-fee215f21a52",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/device_pinners/:device_pinner_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "device_pinners",
                                ":device_pinner_id"
                            ],
                            "variable": [
                                {
                                    "id": "df1676bf-3d0a-4326-91d5-20ee49302c51",
                                    "key": "device_pinner_id",
                                    "value": "2324234",
                                    "description": "(Required) The ID of the device pin"
                                }
                            ]
                        },
                        "description": "Deletes an individual device pin."
                    },
                    "response": [
                        {
                            "id": "c6d8c9c9-e341-4e44-93c3-4ac963a254b0",
                            "name": "Returns an empty response when the pin has been deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/device_pinners/:device_pinner_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "device_pinners",
                                        ":device_pinner_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "device_pinner_id",
                                            "value": "2324234",
                                            "description": "(Required) The ID of the device pin"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "7d1658da-7c6c-43cc-aa86-968120f9f716",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/device_pinners/:device_pinner_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "device_pinners",
                                        ":device_pinner_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "device_pinner_id",
                                            "value": "2324234",
                                            "description": "(Required) The ID of the device pin"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List enterprise device pins",
                    "id": "4bb285dc-15e1-4f39-828d-9408fb50002d",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/enterprises/:enterprise_id/device_pinners?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&direction=ASC",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "enterprises",
                                ":enterprise_id",
                                "device_pinners"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "direction",
                                    "value": "ASC",
                                    "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "8c62f195-2028-47a1-b7de-9ebb3c8b5a28",
                                    "key": "enterprise_id",
                                    "value": "3442311",
                                    "description": "(Required) The ID of the enterprise"
                                }
                            ]
                        },
                        "description": "Retrieves all the device pins within an enterprise.\n\nThe user must have admin privileges, and the application\nneeds the \"manage enterprise\" scope to make this call."
                    },
                    "response": [
                        {
                            "id": "adf33b8e-1b25-4106-ad18-49616263fcd6",
                            "name": "Returns a list of device pins for a given enterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/enterprises/:enterprise_id/device_pinners?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "enterprises",
                                        ":enterprise_id",
                                        "device_pinners"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "enterprise_id",
                                            "value": "3442311",
                                            "description": "(Required) The ID of the enterprise"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"device_pinner\",\n   \"owned_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"product_name\": \"iPad\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"device_pinner\",\n   \"owned_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"product_name\": \"iPad\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ],\n \"limit\": 200,\n \"next_marker\": 3000,\n \"order\": [\n  {\n   \"by\": \"id\",\n   \"direction\": \"asc\"\n  },\n  {\n   \"by\": \"id\",\n   \"direction\": \"asc\"\n  }\n ]\n}"
                        },
                        {
                            "id": "df719bce-f513-48e5-93cd-7addc007b95c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/enterprises/:enterprise_id/device_pinners?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "enterprises",
                                        ":enterprise_id",
                                        "device_pinners"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "enterprise_id",
                                            "value": "3442311",
                                            "description": "(Required) The ID of the enterprise"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "ba0bc2f7-33b0-47bc-91dc-0d305d44b274"
        },
        {
            "name": "Domain restrictions (User exemptions)",
            "item": [
                {
                    "name": "List users exempt from collaboration domain restrictions",
                    "id": "e5e43524-6f52-4c9d-a9e3-454a7bb7766b",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_exempt_targets"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Returns a list of users who have been exempt from the collaboration\ndomain restrictions."
                    },
                    "response": [
                        {
                            "id": "8667796f-b4a5-4c56-a59c-ba07fb9eda5c",
                            "name": "Returns a collection of user exemptions.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"collaboration_whitelist\",\n   \"enterprise\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"collaboration_whitelist\",\n   \"enterprise\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "79907099-e3ce-46ab-bd07-771d1601c17b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create user exemption from collaboration domain restrictions",
                    "id": "626f4c56-da0d-49b6-ba73-cb96463b21b3",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user\": {\n        \"id\": \"23522323\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_exempt_targets"
                            ]
                        },
                        "description": "Exempts a user from the restrictions set out by the allowed list of domains\nfor collaborations."
                    },
                    "response": [
                        {
                            "id": "0b41d842-5720-4ead-ac9b-1a20e88a0abf",
                            "name": "Returns a new exemption entry.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"user\": {\n        \"id\": \"23522323\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"collaboration_whitelist\",\n \"enterprise\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "61e21cd3-2d83-466e-9a6c-cd1f207cb3d3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"user\": {\n        \"id\": \"23522323\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get user exempt from collaboration domain restrictions",
                    "id": "c2e945a3-867c-40ec-a7a1-ddb29437d7ae",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets/:collaboration_whitelist_exempt_target_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_exempt_targets",
                                ":collaboration_whitelist_exempt_target_id"
                            ],
                            "variable": [
                                {
                                    "id": "cdd41c87-1a87-4435-b847-b4139a48b1de",
                                    "key": "collaboration_whitelist_exempt_target_id",
                                    "value": "984923",
                                    "description": "(Required) The ID of the exemption to the list."
                                }
                            ]
                        },
                        "description": "Returns a users who has been exempt from the collaboration\ndomain restrictions."
                    },
                    "response": [
                        {
                            "id": "0452e86c-b3aa-4bcc-8b9c-d89f0deaca0f",
                            "name": "Returns the user's exempted from the list of collaboration domains.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets/:collaboration_whitelist_exempt_target_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets",
                                        ":collaboration_whitelist_exempt_target_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_exempt_target_id",
                                            "value": "984923",
                                            "description": "(Required) The ID of the exemption to the list."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"collaboration_whitelist\",\n \"enterprise\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "4f2ee188-9747-4e78-9205-769c6c21591c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets/:collaboration_whitelist_exempt_target_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets",
                                        ":collaboration_whitelist_exempt_target_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_exempt_target_id",
                                            "value": "984923",
                                            "description": "(Required) The ID of the exemption to the list."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove user from list of users exempt from domain restrictions",
                    "id": "f4256abc-b913-4d48-aa6a-2e7cb6785977",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets/:collaboration_whitelist_exempt_target_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_exempt_targets",
                                ":collaboration_whitelist_exempt_target_id"
                            ],
                            "variable": [
                                {
                                    "id": "aa7a27e7-01a3-4339-b608-ba55b374a250",
                                    "key": "collaboration_whitelist_exempt_target_id",
                                    "value": "984923",
                                    "description": "(Required) The ID of the exemption to the list."
                                }
                            ]
                        },
                        "description": "Removes a user's exemption from the restrictions set out by the allowed list\nof domains for collaborations."
                    },
                    "response": [
                        {
                            "id": "d3d1c183-a48f-4ab1-b019-c0a91d81d409",
                            "name": "A blank response is returned if the exemption was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets/:collaboration_whitelist_exempt_target_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets",
                                        ":collaboration_whitelist_exempt_target_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_exempt_target_id",
                                            "value": "984923",
                                            "description": "(Required) The ID of the exemption to the list."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "6b64b4f4-8172-4d6c-85f8-bf37746ae384",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_exempt_targets/:collaboration_whitelist_exempt_target_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_exempt_targets",
                                        ":collaboration_whitelist_exempt_target_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_exempt_target_id",
                                            "value": "984923",
                                            "description": "(Required) The ID of the exemption to the list."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "56e37e0f-246b-40c4-af2f-ca00118f98b5"
        },
        {
            "name": "Domain restrictions for collaborations",
            "item": [
                {
                    "name": "List allowed collaboration domains",
                    "id": "13b8749e-cbd8-4bf3-a0e9-dbb21dba928c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_entries?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_entries"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Returns the list domains that have been deemed safe to create collaborations\nfor within the current enterprise."
                    },
                    "response": [
                        {
                            "id": "8f9416c0-baaa-428b-9374-c038702d0e4f",
                            "name": "Returns a collection of domains that are allowed for collaboration.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"collaboration_whitelist_entry\",\n   \"domain\": \"example.com\",\n   \"direction\": \"both\",\n   \"enterprise\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"collaboration_whitelist_entry\",\n   \"domain\": \"example.com\",\n   \"direction\": \"both\",\n   \"enterprise\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "7250c054-5dff-467c-a5c7-badd809be173",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add domain to list of allowed collaboration domains",
                    "id": "2f4e48a8-d77e-420a-8df0-b8ac3dc90be8",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"domain\": \"example.com\",\n    \"direction\": \"inbound\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_entries",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_entries"
                            ]
                        },
                        "description": "Creates a new entry in the list of allowed domains to allow\ncollaboration for."
                    },
                    "response": [
                        {
                            "id": "0f6a4e30-ac61-4069-9754-f6a7dbbc3c4f",
                            "name": "Returns a new entry on the list of allowed domains.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"domain\": \"example.com\",\n    \"direction\": \"inbound\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"collaboration_whitelist_entry\",\n \"domain\": \"example.com\",\n \"direction\": \"both\",\n \"enterprise\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "76a61fd0-81b0-44e2-a2dd-5d8e0c61946b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"domain\": \"example.com\",\n    \"direction\": \"inbound\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get allowed collaboration domain",
                    "id": "140a4280-28c4-4bb9-8bd5-116d4f3d3330",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_entries/:collaboration_whitelist_entry_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_entries",
                                ":collaboration_whitelist_entry_id"
                            ],
                            "variable": [
                                {
                                    "id": "57b68cbb-c4d1-4889-913f-f2a37fe069b1",
                                    "key": "collaboration_whitelist_entry_id",
                                    "value": "213123",
                                    "description": "(Required) The ID of the entry in the list."
                                }
                            ]
                        },
                        "description": "Returns a domain that has been deemed safe to create collaborations\nfor within the current enterprise."
                    },
                    "response": [
                        {
                            "id": "0d7ba205-11ae-478e-96b6-d7feb938fad6",
                            "name": "Returns an entry on the list of allowed domains.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries/:collaboration_whitelist_entry_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries",
                                        ":collaboration_whitelist_entry_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_entry_id",
                                            "value": "213123",
                                            "description": "(Required) The ID of the entry in the list."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"collaboration_whitelist_entry\",\n \"domain\": \"example.com\",\n \"direction\": \"both\",\n \"enterprise\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "b608898a-903e-4710-930b-862b243ba080",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries/:collaboration_whitelist_entry_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries",
                                        ":collaboration_whitelist_entry_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_entry_id",
                                            "value": "213123",
                                            "description": "(Required) The ID of the entry in the list."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove domain from list of allowed collaboration domains",
                    "id": "093949ae-f961-4189-9c12-dd240ef06ad2",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/collaboration_whitelist_entries/:collaboration_whitelist_entry_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "collaboration_whitelist_entries",
                                ":collaboration_whitelist_entry_id"
                            ],
                            "variable": [
                                {
                                    "id": "c443fb8f-97a2-4168-ab5e-e6a7aa6f8327",
                                    "key": "collaboration_whitelist_entry_id",
                                    "value": "213123",
                                    "description": "(Required) The ID of the entry in the list."
                                }
                            ]
                        },
                        "description": "Removes a domain from the list of domains that have been deemed safe to create\ncollaborations for within the current enterprise."
                    },
                    "response": [
                        {
                            "id": "303fcf13-e28b-4576-8ca5-e27217717ab0",
                            "name": "A blank response is returned if the entry was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries/:collaboration_whitelist_entry_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries",
                                        ":collaboration_whitelist_entry_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_entry_id",
                                            "value": "213123",
                                            "description": "(Required) The ID of the entry in the list."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "8587e213-9a77-400a-96c6-383d2669d2a6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/collaboration_whitelist_entries/:collaboration_whitelist_entry_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "collaboration_whitelist_entries",
                                        ":collaboration_whitelist_entry_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "collaboration_whitelist_entry_id",
                                            "value": "213123",
                                            "description": "(Required) The ID of the entry in the list."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "af6f5965-506a-4334-9128-3927870c65ab"
        },
        {
            "name": "Downloads",
            "item": [
                {
                    "name": "Download file",
                    "id": "5ecb2a31-f01a-44e3-93af-fe73a6d1cb0b",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "The byte range of the content to download.\n\nThe format `bytes={start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
                                "key": "range",
                                "value": "bytes=0-1024"
                            },
                            {
                                "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/content?version=4&access_token=c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "content"
                            ],
                            "query": [
                                {
                                    "key": "version",
                                    "value": "4",
                                    "description": "The file version to download"
                                },
                                {
                                    "key": "access_token",
                                    "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "description": "An optional access token that can be used to pre-authenticate this request, which means that a download link can be shared with a browser or a third party service without them needing to know how to handle the authentication.\nWhen using this parameter, please make sure that the access token is sufficiently scoped down to only allow read access to that file and no other files or folders."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "8b194939-976c-4b6c-b446-952930fff8e9",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Returns the contents of a file in binary format."
                    },
                    "response": [
                        {
                            "id": "99f3d5ec-17d5-44a3-8af2-0bef5fb35605",
                            "name": "If the file is not ready to be downloaded yet `Retry-After` header will\nbe returned indicating the time in seconds after which the file will\nbe available for the client to download.\n\nThis response can occur when the file was uploaded immediately before th",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The byte range of the content to download.\n\nThe format `bytes={start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
                                        "key": "range",
                                        "value": "bytes=0-1024"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/content?version=4&access_token=c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "version",
                                            "value": "4"
                                        },
                                        {
                                            "key": "access_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "The time in seconds after which to retry the download",
                                    "key": "Retry-After",
                                    "value": "-41632854"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "b7e4737e-862a-46e9-b5b2-9084f2036067",
                            "name": "If the file is available to be downloaded the response will include a\n`Location` header for the file on `dl.boxcloud.com`.\n\nThe `dl.boxcloud.com` URL is not persistent and clients will need\nto follow the redirect in order to actually download the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The byte range of the content to download.\n\nThe format `bytes={start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
                                        "key": "range",
                                        "value": "bytes=0-1024"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/content?version=4&access_token=c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "version",
                                            "value": "4"
                                        },
                                        {
                                            "key": "access_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Found",
                            "code": 302,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "A pointer to the download URL",
                                    "key": "Location",
                                    "value": "cupidatat mollit"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "18e96fac-d1d5-4b6b-8951-d49dc04cdddb",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The byte range of the content to download.\n\nThe format `bytes={start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
                                        "key": "range",
                                        "value": "bytes=0-1024"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/content?version=4&access_token=c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "version",
                                            "value": "4"
                                        },
                                        {
                                            "key": "access_token",
                                            "value": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "3be94567-451f-4de6-a272-e22ace56d27c"
        },
        {
            "name": "Email aliases",
            "item": [
                {
                    "name": "List user's email aliases",
                    "id": "16b43679-d7f2-422b-ac87-03de2d4c20e2",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id/email_aliases",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id",
                                "email_aliases"
                            ],
                            "variable": [
                                {
                                    "id": "ff0c77a6-2664-41f6-9513-ad25cd64b352",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Retrieves all email aliases for a user. The collection\ndoes not include the primary login for the user."
                    },
                    "response": [
                        {
                            "id": "00fa7ff9-8242-4f9f-97fa-944e8000b66f",
                            "name": "Returns a collection of email aliases.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/email_aliases",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "email_aliases"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"email_alias\",\n   \"email\": \"alias@example.com\",\n   \"is_confirmed\": true\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"email_alias\",\n   \"email\": \"alias@example.com\",\n   \"is_confirmed\": true\n  }\n ]\n}"
                        },
                        {
                            "id": "c07a096a-e40c-4ee1-a637-6d8182e9993f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/email_aliases",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "email_aliases"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create email alias",
                    "id": "946e1761-0952-4552-8289-b425a3b17d89",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"alias@example.com\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id/email_aliases",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id",
                                "email_aliases"
                            ],
                            "variable": [
                                {
                                    "id": "3aec7e8c-e5d8-4d0b-ae3d-cc5393ccae32",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Adds a new email alias to a user account.."
                    },
                    "response": [
                        {
                            "id": "97efba84-70e1-4f2e-9fcc-f68042abfc19",
                            "name": "Returns the newly created email alias object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"alias@example.com\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/email_aliases",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "email_aliases"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"email_alias\",\n \"email\": \"alias@example.com\",\n \"is_confirmed\": true\n}"
                        },
                        {
                            "id": "dd41d6e5-a550-49df-82e5-12986ad8ed89",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"email\": \"alias@example.com\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/email_aliases",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "email_aliases"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove email alias",
                    "id": "102240a7-edd7-4284-94d8-453758879d43",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id/email_aliases/:email_alias_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id",
                                "email_aliases",
                                ":email_alias_id"
                            ],
                            "variable": [
                                {
                                    "id": "ca9892ad-b654-4daf-b6d2-1b5644d339ce",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                },
                                {
                                    "id": "e8618586-f883-432d-b84b-ad3a0ddda0d1",
                                    "key": "email_alias_id",
                                    "value": "23432",
                                    "description": "(Required) The ID of the email alias."
                                }
                            ]
                        },
                        "description": "Removes an email alias from a user."
                    },
                    "response": [
                        {
                            "id": "b4b2de38-bd0b-4a92-b581-7eca76474b08",
                            "name": "Removes the alias and returns an empty response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/email_aliases/:email_alias_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "email_aliases",
                                        ":email_alias_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        },
                                        {
                                            "key": "email_alias_id",
                                            "value": "23432",
                                            "description": "(Required) The ID of the email alias."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "46ed8eeb-c5a9-489e-93a2-73753c66820c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/email_aliases/:email_alias_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "email_aliases",
                                        ":email_alias_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        },
                                        {
                                            "key": "email_alias_id",
                                            "value": "23432",
                                            "description": "(Required) The ID of the email alias."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "4079e376-7dfe-40c4-8b62-64d08156392b"
        },
        {
            "name": "Events",
            "item": [
                {
                    "name": "Get events long poll endpoint",
                    "id": "080c9980-2cbe-423f-bb83-91bdac7faf81",
                    "request": {
                        "method": "OPTIONS",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/events",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "events"
                            ]
                        },
                        "description": "Returns a list of real-time servers that can be used for long-polling updates\nto the [event stream](#get-events).\n\nLong polling is the concept where a HTTP request is kept open until the\nserver sends a response, then repeating the process over and over to receive\nupdated responses.\n\nLong polling the event stream can only be used for user events, not for\nenterprise events.\n\nTo use long polling, first use this endpoint to retrieve a list of long poll\nURLs. Next, make a long poll request to any of the provided URLs.\n\nWhen an event occurs in monitored account a response with the value\n`new_change` will be sent. The response contains no other details as\nit only serves as a prompt to take further action such as sending a\nrequest to the [events endpoint](#get-events) with the last known\n`stream_position`.\n\nAfter the server sends this response it closes the connection. You must now\nrepeat the long poll process to begin listening for events again.\n\nIf no events occur for a while and the connection times out you will\nreceive a response with the value `reconnect`. When you receive this response\nyou’ll make another call to this endpoint to restart the process.\n\nIf you receive no events in `retry_timeout` seconds then you will need to\nmake another request to the real-time server (one of the URLs in the response\nfor this endpoint). This might be necessary due to network errors.\n\nFinally, if you receive a `max_retries` error when making a request to the\nreal-time server, you should start over by making a call to this endpoint\nfirst."
                    },
                    "response": [
                        {
                            "id": "90f355b1-b30b-46c6-b4db-5db9987c1502",
                            "name": "Returns a paginated array of servers that can be used\ninstead of the regular endpoints for long-polling events.",
                            "originalRequest": {
                                "method": "OPTIONS",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/events",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "events"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"chunk_size\": 1,\n \"entries\": [\n  {\n   \"type\": \"realtime_server\",\n   \"url\": \"http://2.realtime.services.box.net/subscribe?channel=cc807c9c4869ffb1c81a&stream_type=all\",\n   \"ttl\": 10,\n   \"max_retries\": 10,\n   \"retry_timeout\": 610\n  },\n  {\n   \"type\": \"realtime_server\",\n   \"url\": \"http://2.realtime.services.box.net/subscribe?channel=cc807c9c4869ffb1c81a&stream_type=all\",\n   \"ttl\": 10,\n   \"max_retries\": 10,\n   \"retry_timeout\": 610\n  }\n ]\n}"
                        },
                        {
                            "id": "bd518585-bc6b-414d-8a00-9e58eed97ca3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "OPTIONS",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/events",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "events"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List user and enterprise events",
                    "id": "3ac6d986-b8ae-4123-a070-8f3a4414041f",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/events?stream_type=all&stream_position=1348790499819&limit=50&event_type=ACCESS_GRANTED&created_after=2012-12-12T10:53:43-08:00&created_before=2013-12-12T10:53:43-08:00",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "events"
                            ],
                            "query": [
                                {
                                    "key": "stream_type",
                                    "value": "all",
                                    "description": "Defines the type of events that are returned\n\n* `all` returns everything for a user and is the default\n* `changes` returns events that may cause file tree changes\n  such as file updates or collaborations.\n* `sync` is similar to `changes` but only applies to synced folders\n* `admin_logs` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions. This\n  stream type is for programmatically pulling from a 1 year history of\n  events across all users within the enterprise and within a\n  `created_after` and `created_before` time frame. The complete history\n  of events will be returned in chronological order based on the event\n  time, but latency will be much higher than `admin_logs_streaming`.\n* `admin_logs_streaming` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions. This\n  stream type is for polling for recent events across all users within\n  the enterprise. Latency will be much lower than `admin_logs`, but\n  events will not be returned in chronological order and may\n  contain duplicates."
                                },
                                {
                                    "key": "stream_position",
                                    "value": "1348790499819",
                                    "description": "The location in the event stream to start receiving events from.\n\n* `now` will return an empty list events and\nthe latest stream position for initialization.\n* `0` or `null` will return all events."
                                },
                                {
                                    "key": "limit",
                                    "value": "50",
                                    "description": "Limits the number of events returned"
                                },
                                {
                                    "key": "event_type",
                                    "value": "ACCESS_GRANTED",
                                    "description": "A comma-separated list of events to filter by. This can only be used when\nrequesting the events with a `stream_type` of `admin_logs` or\n`adming_logs_streaming`. For any other `stream_type` this value will be\nignored."
                                },
                                {
                                    "key": "created_after",
                                    "value": "2012-12-12T10:53:43-08:00",
                                    "description": "The lower bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored."
                                },
                                {
                                    "key": "created_before",
                                    "value": "2013-12-12T10:53:43-08:00",
                                    "description": "The upper bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored."
                                }
                            ]
                        },
                        "description": "Returns up to a year of past events for a given user\nor for the entire enterprise.\n\nBy default this returns events for the authenticated user. To retrieve events\nfor the entire enterprise, set the `stream_type` to `admin_logs_streaming`\nfor live monitoring of new events, or `admin_logs` for querying across\nhistorical events. The user making the API call will\nneed to have admin privileges, and the application will need to have the\nscope `manage enterprise properties` checked."
                    },
                    "response": [
                        {
                            "id": "92869266-522c-4ba7-87bb-ed21cfd12879",
                            "name": "Returns a list of event objects.\n\nEvents objects are returned in pages, with each page (chunk)\nincluding a list of event objects. The response includes a\n`chunk_size` parameter indicating how many events were returned in this\nchunk, as well as the next `s",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/events?stream_type=all&stream_position=1348790499819&limit=50&event_type=ACCESS_GRANTED&created_after=2012-12-12T10:53:43-08:00&created_before=2013-12-12T10:53:43-08:00",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "events"
                                    ],
                                    "query": [
                                        {
                                            "key": "stream_type",
                                            "value": "all"
                                        },
                                        {
                                            "key": "stream_position",
                                            "value": "1348790499819"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "50"
                                        },
                                        {
                                            "key": "event_type",
                                            "value": "ACCESS_GRANTED"
                                        },
                                        {
                                            "key": "created_after",
                                            "value": "2012-12-12T10:53:43-08:00"
                                        },
                                        {
                                            "key": "created_before",
                                            "value": "2013-12-12T10:53:43-08:00"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"chunk_size\": 2,\n \"next_stream_position\": \"1152922976252290886\",\n \"entries\": [\n  {\n   \"type\": \"event\",\n   \"event_id\": \"f82c3ba03e41f7e8a7608363cc6c0390183c3f83\",\n   \"created_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"event_type\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"session_id\": \"70090280850c8d2a1933c1\",\n   \"source\": {},\n   \"additional_details\": {\n    \"key\": \"value\"\n   }\n  },\n  {\n   \"type\": \"event\",\n   \"event_id\": \"f82c3ba03e41f7e8a7608363cc6c0390183c3f83\",\n   \"created_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"event_type\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"session_id\": \"70090280850c8d2a1933c1\",\n   \"source\": {},\n   \"additional_details\": {\n    \"key\": \"value\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "a1b7a6bf-5ebf-4da4-8f90-1c2e41e479ba",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/events?stream_type=all&stream_position=1348790499819&limit=50&event_type=ACCESS_GRANTED&created_after=2012-12-12T10:53:43-08:00&created_before=2013-12-12T10:53:43-08:00",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "events"
                                    ],
                                    "query": [
                                        {
                                            "key": "stream_type",
                                            "value": "all"
                                        },
                                        {
                                            "key": "stream_position",
                                            "value": "1348790499819"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "50"
                                        },
                                        {
                                            "key": "event_type",
                                            "value": "ACCESS_GRANTED"
                                        },
                                        {
                                            "key": "created_after",
                                            "value": "2012-12-12T10:53:43-08:00"
                                        },
                                        {
                                            "key": "created_before",
                                            "value": "2013-12-12T10:53:43-08:00"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "58f469ca-d447-48d8-a8b7-31465254fb36"
        },
        {
            "name": "File requests",
            "item": [
                {
                    "name": "Get file request",
                    "id": "39751d9b-79b7-4dbc-9683-59351314832d",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/file_requests/:file_request_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_requests",
                                ":file_request_id"
                            ],
                            "variable": [
                                {
                                    "id": "b2dcc332-1ddb-4715-9c57-9b1a57f77a25",
                                    "key": "file_request_id",
                                    "value": "123",
                                    "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves the information about a file request."
                    },
                    "response": [
                        {
                            "id": "d1df8a60-d539-46c4-be64-a776cb4ad5c2",
                            "name": "Returns a file request object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"42037322\",\n \"type\": \"file_request\",\n \"title\": \"Please upload documents\",\n \"description\": \"Following documents are requested for your process\",\n \"status\": \"active\",\n \"is_email_required\": true,\n \"is_description_required\": true,\n \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n \"folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"url\": \"/f/19e57f40ace247278a8e3d336678c64a\",\n \"etag\": \"1\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2020-09-28T10:53:43-08:00\",\n \"updated_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"updated_at\": \"2020-09-28T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "97b984fc-93c6-48aa-95c5-80aa1bb30298",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "58e18200-8683-45e1-a798-a77e683f8bc1",
                            "name": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7009bcd2-6533-41a6-8421-439c867a5af0",
                            "name": "Returned if the `file_request_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "6466ce65-9795-4e75-bb0f-fcf2b309365d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update file request",
                    "id": "7d950477-c706-4d35-9213-6c3b28d163dc",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/file_requests/:file_request_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_requests",
                                ":file_request_id"
                            ],
                            "variable": [
                                {
                                    "id": "0e55ebb4-4609-48a3-bbbe-9dc215ba9cef",
                                    "key": "file_request_id",
                                    "value": "123",
                                    "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                }
                            ]
                        },
                        "description": "Updates a file request. This can be used to activate or\ndeactivate a file request."
                    },
                    "response": [
                        {
                            "id": "7184e823-cc73-42b3-a2d9-a98e03670a70",
                            "name": "Returns the updated file request object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"42037322\",\n \"type\": \"file_request\",\n \"title\": \"Please upload documents\",\n \"description\": \"Following documents are requested for your process\",\n \"status\": \"active\",\n \"is_email_required\": true,\n \"is_description_required\": true,\n \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n \"folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"url\": \"/f/19e57f40ace247278a8e3d336678c64a\",\n \"etag\": \"1\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2020-09-28T10:53:43-08:00\",\n \"updated_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"updated_at\": \"2020-09-28T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "2b67809f-9d8e-4004-9e30-7a2a997dd35c",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c2c5a3c5-267f-4ab6-aacb-b4eca2e8cc74",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access to update the file request.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3628413b-ada0-4e18-a4a9-668badba991e",
                            "name": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f6d31f02-d6f3-4175-bf86-e14338c22457",
                            "name": "Returned if the `file_request_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "6e2b42d6-b208-4ed3-9fd4-adbbb46ae8e6",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file request. This indicates that the\nfile request has changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f18045c1-74df-48df-8049-24b14d152d95",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete file request",
                    "id": "837f3a88-b278-495f-ba1e-ea285cdc96e1",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/file_requests/:file_request_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_requests",
                                ":file_request_id"
                            ],
                            "variable": [
                                {
                                    "id": "fec2def3-eaef-4a63-93ed-7fc799bba7bb",
                                    "key": "file_request_id",
                                    "value": "123",
                                    "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                }
                            ]
                        },
                        "description": "Deletes a file request permanently."
                    },
                    "response": [
                        {
                            "id": "0e2264a9-f68d-4366-81ed-df8acd349729",
                            "name": "Returns an empty response when the file request has been successfully\ndeleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "2f60d13a-e81e-46cc-9f0a-8dab2b1af192",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "131cb7db-24e9-4af3-b8e6-be454e39f83f",
                            "name": "Returned if the file request is not found or has already been deleted,\nor the user does not have access to the associated folder.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "64f2a60d-8192-4dac-a5e2-566524e8e9e6",
                            "name": "Returned if the `file_request_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "72e5bd40-3446-4c88-9605-7a6e8daf43bd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Copy file request",
                    "id": "cceef2d4-825e-4b85-8577-7dcbad5acef0",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_requests",
                                ":file_request_id",
                                "copy"
                            ],
                            "variable": [
                                {
                                    "id": "5b2e294b-a3e5-470b-9e77-73c4ef2db290",
                                    "key": "file_request_id",
                                    "value": "123",
                                    "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                }
                            ]
                        },
                        "description": "Copies an existing file request that is already present on one folder,\nand applies it to another folder."
                    },
                    "response": [
                        {
                            "id": "7bf4a5a0-7aa2-45a5-9a39-b4dae1fa70a7",
                            "name": "Returns updated file request object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id",
                                        "copy"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"42037322\",\n \"type\": \"file_request\",\n \"title\": \"Please upload documents\",\n \"description\": \"Following documents are requested for your process\",\n \"status\": \"active\",\n \"is_email_required\": true,\n \"is_description_required\": true,\n \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n \"folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"url\": \"/f/19e57f40ace247278a8e3d336678c64a\",\n \"etag\": \"1\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2020-09-28T10:53:43-08:00\",\n \"updated_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"updated_at\": \"2020-09-28T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "6a622f91-bbc5-416b-8aa7-cf84f2d0c59a",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id",
                                        "copy"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "51c34768-d693-45bf-be07-29a6bf5f556c",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access to update the file request.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id",
                                        "copy"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "73e402f5-f0fb-4b7c-acfa-f8a3069f1be3",
                            "name": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id",
                                        "copy"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a713a8f2-721b-45c2-922a-930a5901b691",
                            "name": "Returned if the `file_request_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id",
                                        "copy"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4a5957a9-4f33-4fb5-a579-fc1e3a59bb44",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"title\": \"Please upload required documents\",\n    \"description\": \"Please upload required documents\",\n    \"status\": \"active\",\n    \"is_email_required\": true,\n    \"is_description_required\": true,\n    \"expires_at\": \"2020-09-28T10:53:43-08:00\",\n    \"folder\": {\n        \"id\": \"42037322\",\n        \"type\": \"folder\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/file_requests/:file_request_id/copy",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_requests",
                                        ":file_request_id",
                                        "copy"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_request_id",
                                            "value": "123",
                                            "description": "(Required) The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "7d041687-636f-4b74-818a-3b70aa39b2e7"
        },
        {
            "name": "File version legal holds",
            "item": [
                {
                    "name": "Get file version legal hold",
                    "id": "a67e3f87-7ea0-4ed1-a306-a43fe2b7a962",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/file_version_legal_holds/:file_version_legal_hold_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_version_legal_holds",
                                ":file_version_legal_hold_id"
                            ],
                            "variable": [
                                {
                                    "id": "757eb29e-c0e2-48c2-aaa9-89c11bc599ea",
                                    "key": "file_version_legal_hold_id",
                                    "value": "2348213",
                                    "description": "(Required) The ID of the file version legal hold"
                                }
                            ]
                        },
                        "description": "Retrieves information about the legal hold policies\nassigned to a file version."
                    },
                    "response": [
                        {
                            "id": "53951156-1122-4cef-b46a-485a2421a35e",
                            "name": "Returns the legal hold policy assignments for the file version.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_legal_holds/:file_version_legal_hold_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_legal_holds",
                                        ":file_version_legal_hold_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_version_legal_hold_id",
                                            "value": "2348213",
                                            "description": "(Required) The ID of the file version legal hold"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"file_version_legal_hold\",\n \"file_version\": {\n  \"id\": \"12345\",\n  \"type\": \"file_version\",\n  \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n },\n \"file\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"legal_hold_policy_assignments\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"legal_hold_policy_assignment\",\n   \"legal_hold_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_to\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"legal_hold_policy_assignment\",\n   \"legal_hold_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_to\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ],\n \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "638a3d66-d3e8-4bdb-9f32-585e20e46373",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_legal_holds/:file_version_legal_hold_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_legal_holds",
                                        ":file_version_legal_hold_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_version_legal_hold_id",
                                            "value": "2348213",
                                            "description": "(Required) The ID of the file version legal hold"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List file version legal holds",
                    "id": "60262976-2936-4410-9ba2-c10fbcf0c1ae",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/file_version_legal_holds?policy_id=133870&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_version_legal_holds"
                            ],
                            "query": [
                                {
                                    "key": "policy_id",
                                    "value": "133870",
                                    "description": "(Required) The ID of the legal hold policy to get the file version legal\nholds for."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Get a list of file versions on legal hold for a legal hold\nassignment.\n\nDue to ongoing re-architecture efforts this API might not return all file\nversions for this policy ID.\n\nInstead, this API will only return file versions held in the legacy\narchitecture. Two new endpoints will available to request any file versions\nheld in the new architecture.\n\nFor file versions held in the new architecture, the `GET\n/legal_hold_policy_assignments/:id/file_versions_on_hold` API can be used to\nreturn all past file versions available for this policy assignment, and the\n`GET /legal_hold_policy_assignments/:id/files_on_hold` API can be used to\nreturn any current (latest) versions of a file under legal hold.\n\nThe `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to\nfind a list of policy assignments for a given policy ID.\n\nOnce the re-architecture is completed this API will be deprecated."
                    },
                    "response": [
                        {
                            "id": "bbda407d-0523-42d9-a05d-63ddf5cba46c",
                            "name": "Returns the list of file version legal holds for a specific legal\nhold policy.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_legal_holds?policy_id=133870&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_legal_holds"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_id",
                                            "value": "133870"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_legal_hold\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legal_hold_policy_assignments\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_legal_hold\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legal_hold_policy_assignments\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "c8643730-52d3-4dd5-85e3-c9461d62ac93",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_legal_holds?policy_id=133870&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_legal_holds"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_id",
                                            "value": "133870"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "cfe5a28c-e539-454f-af68-94159af5675d"
        },
        {
            "name": "File version retentions",
            "item": [
                {
                    "name": "List file version retentions",
                    "id": "fb7e6ec0-84c4-4249-8700-302780bba6c8",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/file_version_retentions?file_id=43123123&file_version_id=1&policy_id=982312&disposition_action=permanently_delete&disposition_before=2012-12-12T10:53:43-08:00&disposition_after=2012-12-19T10:34:23-08:00&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_version_retentions"
                            ],
                            "query": [
                                {
                                    "key": "file_id",
                                    "value": "43123123",
                                    "description": "Filters results by files with this ID."
                                },
                                {
                                    "key": "file_version_id",
                                    "value": "1",
                                    "description": "Filters results by file versions with this ID."
                                },
                                {
                                    "key": "policy_id",
                                    "value": "982312",
                                    "description": "Filters results by the retention policy with this ID."
                                },
                                {
                                    "key": "disposition_action",
                                    "value": "permanently_delete",
                                    "description": "Filters results by the retention policy with this disposition\naction."
                                },
                                {
                                    "key": "disposition_before",
                                    "value": "2012-12-12T10:53:43-08:00",
                                    "description": "Filters results by files that will have their disposition\ncome into effect before this date."
                                },
                                {
                                    "key": "disposition_after",
                                    "value": "2012-12-19T10:34:23-08:00",
                                    "description": "Filters results by files that will have their disposition\ncome into effect after this date."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                }
                            ]
                        },
                        "description": "Retrieves all file version retentions for the given enterprise."
                    },
                    "response": [
                        {
                            "id": "f6bc0f6a-dfce-4277-9798-6bc3ed07f73c",
                            "name": "Returns a list of all file version retentions for the enterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_retentions?file_id=43123123&file_version_id=1&policy_id=982312&disposition_action=permanently_delete&disposition_before=2012-12-12T10:53:43-08:00&disposition_after=2012-12-19T10:34:23-08:00&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_retentions"
                                    ],
                                    "query": [
                                        {
                                            "key": "file_id",
                                            "value": "43123123"
                                        },
                                        {
                                            "key": "file_version_id",
                                            "value": "1"
                                        },
                                        {
                                            "key": "policy_id",
                                            "value": "982312"
                                        },
                                        {
                                            "key": "disposition_action",
                                            "value": "permanently_delete"
                                        },
                                        {
                                            "key": "disposition_before",
                                            "value": "2012-12-12T10:53:43-08:00"
                                        },
                                        {
                                            "key": "disposition_after",
                                            "value": "2012-12-19T10:34:23-08:00"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_retention\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"applied_at\": \"2012-12-12T10:53:43-08:00\",\n   \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n   \"winning_retention_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_retention\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"applied_at\": \"2012-12-12T10:53:43-08:00\",\n   \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n   \"winning_retention_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "39ff59d5-70ac-4878-88b0-9447cafafb80",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_retentions?file_id=43123123&file_version_id=1&policy_id=982312&disposition_action=permanently_delete&disposition_before=2012-12-12T10:53:43-08:00&disposition_after=2012-12-19T10:34:23-08:00&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_retentions"
                                    ],
                                    "query": [
                                        {
                                            "key": "file_id",
                                            "value": "43123123"
                                        },
                                        {
                                            "key": "file_version_id",
                                            "value": "1"
                                        },
                                        {
                                            "key": "policy_id",
                                            "value": "982312"
                                        },
                                        {
                                            "key": "disposition_action",
                                            "value": "permanently_delete"
                                        },
                                        {
                                            "key": "disposition_before",
                                            "value": "2012-12-12T10:53:43-08:00"
                                        },
                                        {
                                            "key": "disposition_after",
                                            "value": "2012-12-19T10:34:23-08:00"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get retention on file",
                    "id": "433f04ad-5d63-4587-8dc1-70564efd5d8d",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/file_version_retentions/:file_version_retention_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "file_version_retentions",
                                ":file_version_retention_id"
                            ],
                            "variable": [
                                {
                                    "id": "f53528cb-ee5a-4c30-bccc-48798046f084",
                                    "key": "file_version_retention_id",
                                    "value": "3424234",
                                    "description": "(Required) The ID of the file version retention"
                                }
                            ]
                        },
                        "description": "Returns information about a file version retention."
                    },
                    "response": [
                        {
                            "id": "337031b5-8bb2-4fdc-94c5-26783d1c69f5",
                            "name": "Returns a file version retention object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_retentions/:file_version_retention_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_retentions",
                                        ":file_version_retention_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_version_retention_id",
                                            "value": "3424234",
                                            "description": "(Required) The ID of the file version retention"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"file_version_retention\",\n \"file_version\": {\n  \"id\": \"12345\",\n  \"type\": \"file_version\",\n  \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n },\n \"file\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"applied_at\": \"2012-12-12T10:53:43-08:00\",\n \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n \"winning_retention_policy\": {\n  \"id\": \"12345\",\n  \"type\": \"retention_policy\",\n  \"policy_name\": \"Some Policy Name\",\n  \"retention_length\": \"365\",\n  \"disposition_action\": \"permanently_delete\"\n }\n}"
                        },
                        {
                            "id": "9819ce35-4d9f-43c7-a23b-0b69000f2487",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/file_version_retentions/:file_version_retention_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "file_version_retentions",
                                        ":file_version_retention_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_version_retention_id",
                                            "value": "3424234",
                                            "description": "(Required) The ID of the file version retention"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "b27f9e61-8594-45a4-93ca-c4dba4793dac"
        },
        {
            "name": "File versions",
            "item": [
                {
                    "name": "List all file versions",
                    "id": "9b43832c-ce68-4818-b86f-36d18175ca39",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/versions?fields=id,type,name&limit=1000&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "versions"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "de473d74-fa2a-48cd-9315-ee1009f0f062",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieve a list of the past versions for a file.\n\nVersions are only tracked by Box users with premium accounts. To fetch the ID\nof the current version of a file, use the `GET /file/:id` API."
                    },
                    "response": [
                        {
                            "id": "bd0bff5a-655f-4d57-bb75-cc27498684a8",
                            "name": "Returns an array of past versions for this file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions?fields=id,type,name&limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trashed_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trashed_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"restored_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"restored_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"purged_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"uploader_display_name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trashed_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trashed_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"restored_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"restored_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"purged_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"uploader_display_name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "156c175b-f236-4393-88ac-4f24f7009fb5",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions?fields=id,type,name&limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get file version",
                    "id": "83fc2d4b-8fa3-4d76-af89-dad5c911d55a",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/versions/:file_version_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "versions",
                                ":file_version_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "2014f002-484e-4575-b091-58532b5976ab",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                },
                                {
                                    "id": "19549f51-3d1d-47c5-b56c-3c24dd4e2676",
                                    "key": "file_version_id",
                                    "value": "1234",
                                    "description": "(Required) The ID of the file version"
                                }
                            ]
                        },
                        "description": "Retrieve a specific version of a file.\n\nVersions are only tracked for Box users with premium accounts."
                    },
                    "response": [
                        {
                            "id": "40440f3b-6c68-4763-a730-3d9648a33a22",
                            "name": "Returns a specific version of a file.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions/:file_version_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions",
                                        ":file_version_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "file_version_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the file version"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"file_version\",\n \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\",\n \"name\": \"tigers.jpeg\",\n \"size\": 629644,\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"restored_at\": \"2012-12-12T10:53:43-08:00\",\n \"restored_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"uploader_display_name\": \"Ellis Wiggins\"\n}"
                        },
                        {
                            "id": "eaf2275c-e1fa-4d6d-a1a1-0edc72976f37",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions/:file_version_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions",
                                        ":file_version_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "file_version_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the file version"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove file version",
                    "id": "17b027fe-9039-45a8-9153-63f735413aaa",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/versions/:file_version_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "versions",
                                ":file_version_id"
                            ],
                            "variable": [
                                {
                                    "id": "f703ba67-7051-44bd-820b-e0600c5740c8",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                },
                                {
                                    "id": "1ee6af28-b6f9-4520-bd7b-feda5dab0f16",
                                    "key": "file_version_id",
                                    "value": "1234",
                                    "description": "(Required) The ID of the file version"
                                }
                            ]
                        },
                        "description": "Move a file version to the trash.\n\nVersions are only tracked for Box users with premium accounts."
                    },
                    "response": [
                        {
                            "id": "8dbeeb0a-1d12-49cd-8c12-ea5bfee09e29",
                            "name": "Returns an empty response when the file has been successfully\ndeleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions/:file_version_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions",
                                        ":file_version_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "file_version_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the file version"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "61c0e9eb-caaf-462f-8749-838e066be6b2",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions/:file_version_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions",
                                        ":file_version_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "file_version_id",
                                            "value": "1234",
                                            "description": "(Required) The ID of the file version"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Revert file version",
                    "id": "3904ec4c-4f54-44b6-a876-5aa9031bdf09",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": \"11446498\",\n    \"type\": \"file_version\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/versions/current?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "versions",
                                "current"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "8cf4a3e1-3e3c-4bbe-8807-04f648d6486c",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Revert to a previous version of a file.\n\nIf previous versions exist, this method can be used to\npromote one of the older versions to the top of the version history.\n\nThis actually creates a new copy of the old version and puts it at the\ntop of the versions history. The file will have the exact same contents\nas the older version, with the the same hash digest, `etag`, and\nname as the original.\n\nOther properties such as comments do not get updated to their\nformer values."
                    },
                    "response": [
                        {
                            "id": "975ba907-86ee-4972-b7cd-505a5c9ecd75",
                            "name": "Returns a newly created file version object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"id\": \"11446498\",\n    \"type\": \"file_version\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions/current?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions",
                                        "current"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"file_version\",\n \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\",\n \"name\": \"tigers.jpeg\",\n \"size\": 629644,\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"restored_at\": \"2012-12-12T10:53:43-08:00\",\n \"restored_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"uploader_display_name\": \"Ellis Wiggins\"\n}"
                        },
                        {
                            "id": "9a5ed2d7-0098-43c9-bd25-5e9d1653cb01",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"id\": \"11446498\",\n    \"type\": \"file_version\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/versions/current?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "versions",
                                        "current"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "4792501d-05b6-4fe8-a708-c9470f43920e"
        },
        {
            "name": "Files",
            "item": [
                {
                    "name": "Get file information",
                    "id": "e2485f81-1888-4b03-a6ad-2590291c5300",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                "key": "if-none-match",
                                "value": "1"
                            },
                            {
                                "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            },
                            {
                                "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                "key": "x-rep-hints",
                                "value": "[pdf]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "d30a6e69-0394-4632-bc8f-56626a4b416c",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves the details about a file."
                    },
                    "response": [
                        {
                            "id": "d96457a2-4ffb-4cfd-b71c-1db38b79e1a5",
                            "name": "Returns a file object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"file\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contract.pdf\",\n \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n \"file_version\": {},\n \"description\": \"Contract for Q1 renewal\",\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"parent\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "45e5c18f-2e38-428d-bc08-778d62570b39",
                            "name": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Modified",
                            "code": 304,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "c27e0388-5fd8-4c9c-aebc-2b0a916b2819",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ff960e1f-3e67-440b-9a3d-6b7008b4c149",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "434146a6-ebb6-434d-9208-0458647838db",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f3ecf123-20ff-4a63-976b-74f0faba7185",
                            "name": "Returns an error if an action is performed on a file with an\nincorrect media type.\n\n* `unsupported_media_type` when requesting an `expiring_embed_link`\n  for a file that is not supported by Box Embed.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unsupported Media Type",
                            "code": 415,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4f4a0e87-5881-4718-9f0a-8b54d7e96971",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    },
                                    {
                                        "description": "(Required) A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
                                        "key": "x-rep-hints",
                                        "value": "[pdf]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update file",
                    "id": "72e16e55-2b2c-4504-b0cc-916dde1af2c0",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "75b00e35-8360-4c6d-b4c5-12e7144dcd91",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Updates a file. This can be used to rename or move a file,\ncreate a shared link, or lock a file."
                    },
                    "response": [
                        {
                            "id": "65d1193d-f7e8-4a73-a6fe-c150f747122f",
                            "name": "Returns a file object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"file\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contract.pdf\",\n \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n \"file_version\": {},\n \"description\": \"Contract for Q1 renewal\",\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"parent\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "b79417a4-277d-4ace-bcc4-e4a625c5b720",
                            "name": "Returned when the new retention time > maximum retention length.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d14ed4b7-06bd-43e2-9f64-addcd0ce7dd7",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c4296142-41fd-4470-b335-d5cffb4491e5",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.\n\nReturns `access_denied_insufficient_permissions` when the authenticated\nuser does not have access the destination folder to move the file to.\n\nReturned when retention time is ",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "40441549-2241-46bc-bc29-09b7b0ec8785",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d184ddc9-23da-4d83-933c-bf8e4de3cc9a",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e0be98ee-cff5-4eb5-b9a3-24e7e055385f",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a9fc4ebd-7629-45d0-8f69-c333025052fd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"NewFile.txt\",\n    \"description\": \"The latest reports. Automatically updated\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"lock\": {\n        \"access\": \"lock\",\n        \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n        \"is_download_prevented\": true\n    },\n    \"disposition_at\": \"2012-12-12T10:53:43-08:00\",\n    \"permissions\": {\n        \"can_download\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete file",
                    "id": "535a82e6-aed1-402a-905d-eb84a2f9237d",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id"
                            ],
                            "variable": [
                                {
                                    "id": "c5527ee0-53cd-4286-85f9-02b276e71664",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Deletes a file, either permanently or by moving it to\nthe trash.\n\nThe the enterprise settings determine whether the item will\nbe permanently deleted from Box or moved to the trash."
                    },
                    "response": [
                        {
                            "id": "8f7062e4-c43f-481e-acf5-661396f5a1a0",
                            "name": "Returns an empty response when the file has been successfully\ndeleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "5feb72ca-db68-48a3-99a1-f053bfbb7e6e",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7cb62af7-c3d3-43d3-a037-951e97b01265",
                            "name": "Returned if the file is not found or has already been deleted, or the user\ndoes not have access to the file.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c3a24e9f-fdd0-46d7-b53f-778b4bceeefe",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c37a9e17-4349-4c7a-88a0-732c61f8fb45",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0c3ea564-2975-4653-993d-8e1e1cb7f560",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Preflight check before upload",
                    "id": "848335b7-e2b1-4c21-8ef5-d19d59879813",
                    "request": {
                        "method": "OPTIONS",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"File.mp4\",\n    \"size\": 1024,\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/content",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                "content"
                            ]
                        },
                        "description": "Performs a check to verify that a file will be accepted by Box\nbefore you upload the entire file."
                    },
                    "response": [
                        {
                            "id": "10f60302-29c9-49b0-ae06-e30f7b5dc703",
                            "name": "If the check passed, the response will include a session URL that\ncan be used to upload the file to.",
                            "originalRequest": {
                                "method": "OPTIONS",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"File.mp4\",\n    \"size\": 1024,\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/content",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "content"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"upload_url\": \"https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234\",\n \"upload_token\": \"Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP\"\n}"
                        },
                        {
                            "id": "118268e1-f7dc-400d-b144-f971de0ce97e",
                            "name": "If the check did not pass, the response will include some details on\nwhy it did not pass.",
                            "originalRequest": {
                                "method": "OPTIONS",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"File.mp4\",\n    \"size\": 1024,\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/content",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "content"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\",\n  \"conflicts\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7d9a4024-11aa-4ee8-97be-75b0c313cb42",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "OPTIONS",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"File.mp4\",\n    \"size\": 1024,\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/content",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "content"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Copy file",
                    "id": "c6aa9a5e-47d2-451c-8d63-ce2476c43a94",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "copy"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "6a999f9f-aec6-44f2-b87b-5ace3cab6493",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Creates a copy of a file."
                    },
                    "response": [
                        {
                            "id": "30d0b810-ab83-4b44-ae07-f1265e613a1a",
                            "name": "Returns a new file object representing the copied file.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"file\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contract.pdf\",\n \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n \"file_version\": {},\n \"description\": \"Contract for Q1 renewal\",\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"parent\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "ae3d34d4-cbd1-4462-a9f6-7d97740b9cf1",
                            "name": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the file. This indicates that the file\nhas not changed since it was last requested.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Modified",
                            "code": 304,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "0e43bacf-056c-406b-bc8d-c1c79aadc635",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `bad_request` when a parameter is missing.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "bcc94fb4-2f98-4f52-8061-d4d343eaca47",
                            "name": "Returns an error if either the source file or the destination\nfolder could not be found, or the authenticated user does not\nhave access to either.\n\n* `not_found` when the authenticated user does not have access\n  to the source file or the destination fold",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "24ff8e3d-a953-4847-89aa-9bbc3c54bf3a",
                            "name": "* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in process.\n\n  The operation can be retried at a later point.\n\n* `item_name_in_use` when a folder",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4d606075-80e1-4c66-a21e-f26ce3ae5689",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"FileCopy.txt\",\n    \"version\": \"0\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get file thumbnail",
                    "id": "22511a54-4d37-4c86-94b4-202833a3c0fc",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "thumbnail.{{extension}}"
                            ],
                            "query": [
                                {
                                    "key": "min_height",
                                    "value": "32",
                                    "description": "The minimum height of the thumbnail"
                                },
                                {
                                    "key": "min_width",
                                    "value": "32",
                                    "description": "The minimum width of the thumbnail"
                                },
                                {
                                    "key": "max_height",
                                    "value": "320",
                                    "description": "The maximum height of the thumbnail"
                                },
                                {
                                    "key": "max_width",
                                    "value": "320",
                                    "description": "The maximum width of the thumbnail"
                                }
                            ],
                            "variable": [
                                {
                                    "id": "c97e16dc-5dda-441e-9b52-05b50143c8b6",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves a thumbnail, or smaller image representation, of a file.\n\nSizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in\nthe `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320`\ncan be returned in the `.jpg` format.\n\nThumbnails can be generated for the image and video file formats listed\n[found on our community site][1].\n\n[1]: https://community.box.com/t5/Migrating-and-Previewing-Content/File-Types-and-Fonts-Supported-in-Box-Content-Preview/ta-p/327"
                    },
                    "response": [
                        {
                            "id": "00929c2b-8a8f-4f5d-b075-b15b473d8214",
                            "name": "When a thumbnail can be created the thumbnail data will be\nreturned in the body of the response.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "image/png"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "eu ad"
                        },
                        {
                            "id": "654fd952-5158-4c58-b93c-8f53f6b16e3d",
                            "name": "Sometimes generating a thumbnail can take a few seconds. In these\nsituations the API returns a `Location`-header pointing to a\nplaceholder graphic for this file type.\n\nThe placeholder graphic can be used in a user interface until the\nthumbnail generation ",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "The time in seconds after which the thumbnail will be available.\n\nYour application  only attempt to get the thumbnail again after\nthis time.",
                                    "key": "Retry-After",
                                    "value": "-41632854"
                                },
                                {
                                    "disabled": false,
                                    "description": "A pointer to a placeholder graphic that can be used until the\nthumbnail has been generated.",
                                    "key": "Location",
                                    "value": "cupidatat mollit"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "40600165-d665-4b79-87dd-defc06606d41",
                            "name": "Returns an error when Box is not able to create a thumbnail for this\nfile type.\n\nInstead, a `Location`-header pointing to a placeholder graphic for\nthis file type will be returned.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Found",
                            "code": 302,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "A pointer to a placeholder graphic that can be used for this\nfile type.",
                                    "key": "Location",
                                    "value": "cupidatat mollit"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "f4436246-5175-4189-bc52-ff7a1f0f9bd2",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `requested_preview_unavailable` - an incorrect dimension was\n  requested. This will happen if the dimension requested is\n  larger or smaller than the available file sizes for the thum",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e0b74fe8-1b8e-4087-a874-ca4788f97946",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f94f7699-da00-4a15-bdf5-b0656cb3bc1c",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file, or for additional reasons.\n\n* `preview_cannot_be_generated` - Box does not support thumbnails\n  for this type of file",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8b41dff5-b2d6-4511-87dc-e1417c8f9636",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/thumbnail.{{extension}}?min_height=32&min_width=32&max_height=320&max_width=320",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "thumbnail.{{extension}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "min_height",
                                            "value": "32"
                                        },
                                        {
                                            "key": "min_width",
                                            "value": "32"
                                        },
                                        {
                                            "key": "max_height",
                                            "value": "320"
                                        },
                                        {
                                            "key": "max_width",
                                            "value": "320"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "213b1aeb-63c7-4a42-a7b3-1192170fd25a"
        },
        {
            "name": "Folder Locks",
            "item": [
                {
                    "name": "List folder locks",
                    "id": "c4da5106-2620-4079-a659-1cdb35d78eb7",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folder_locks?folder_id=12345",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folder_locks"
                            ],
                            "query": [
                                {
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieves folder lock details for a given folder.\n\nYou must be authenticated as the owner or co-owner of the folder to\nuse this endpoint."
                    },
                    "response": [
                        {
                            "id": "b0f0f56a-b408-43dc-a62b-23211b907058",
                            "name": "Returns details for all folder locks applied to the folder, including the\nlock type and user that applied the lock.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks?folder_id=12345",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"folder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"id\": \"12345678\",\n   \"type\": \"folder_lock\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2020-09-14T23:12:53Z\",\n   \"locked_operations\": {\n    \"move\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"delete\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"lock_type\": \"freeze\"\n  },\n  {\n   \"folder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"id\": \"12345678\",\n   \"type\": \"folder_lock\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2020-09-14T23:12:53Z\",\n   \"locked_operations\": {\n    \"move\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"delete\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"lock_type\": \"freeze\"\n  }\n ]\n}"
                        },
                        {
                            "id": "8ecf687f-60fb-4e7c-8a72-30da7e9f9284",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks?folder_id=12345",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "152fc720-fd3c-4f87-9454-d98c8807e207",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks?folder_id=12345",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "328e6f18-61e4-4529-8332-0866d3643626",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks?folder_id=12345",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "270fd746-4a6e-4de4-8d46-77f6536ec9f5",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks?folder_id=12345",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create folder lock",
                    "id": "c8333c87-68d3-41f8-92e2-b00de218ad96",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"1234567890\"\n    },\n    \"locked_operations\": {\n        \"move\": true,\n        \"delete\": true\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folder_locks",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folder_locks"
                            ]
                        },
                        "description": "Creates a folder lock on a folder, preventing it from being moved and/or\ndeleted.\n\nYou must be authenticated as the owner or co-owner of the folder to\nuse this endpoint."
                    },
                    "response": [
                        {
                            "id": "a0fbb2db-bac3-414e-8cd4-132fa2764378",
                            "name": "Returns the instance of the folder lock that was applied to the folder,\nincluding the user that applied the lock and the operations set.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"1234567890\"\n    },\n    \"locked_operations\": {\n        \"move\": true,\n        \"delete\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"folder\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"id\": \"12345678\",\n \"type\": \"folder_lock\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\"\n },\n \"created_at\": \"2020-09-14T23:12:53Z\",\n \"locked_operations\": {\n  \"move\": true,\n  \"delete\": true\n },\n \"lock_type\": \"freeze\"\n}"
                        },
                        {
                            "id": "fe0bad8d-c043-475e-b66b-05ca7c090686",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an un",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"1234567890\"\n    },\n    \"locked_operations\": {\n        \"move\": true,\n        \"delete\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a13ab8f3-bbc8-4807-b8a0-3dfc216cb005",
                            "name": "Returns an error when the folder could not be found.\n\n* `not_found` - The folder could not be found, the user does not have\naccess to the folder, or the user making call is not an owner or co-owner\nof folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"1234567890\"\n    },\n    \"locked_operations\": {\n        \"move\": true,\n        \"delete\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7070994c-4e3a-42d2-bdb8-74c8bca4ba4c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"1234567890\"\n    },\n    \"locked_operations\": {\n        \"move\": true,\n        \"delete\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete folder lock",
                    "id": "cd8c45a6-5b1c-466d-ab81-64b8c40dd065",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folder_locks/:folder_lock_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folder_locks",
                                ":folder_lock_id"
                            ],
                            "variable": [
                                {
                                    "id": "a385d2ec-6d11-4c2b-9af4-8664e245d5fd",
                                    "key": "folder_lock_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the folder lock."
                                }
                            ]
                        },
                        "description": "Deletes a folder lock on a given folder.\n\nYou must be authenticated as the owner or co-owner of the folder to\nuse this endpoint."
                    },
                    "response": [
                        {
                            "id": "8f611fcf-85bf-4169-a81c-fb282bbfbe2b",
                            "name": "Returns an empty response when the folder lock is successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks/:folder_lock_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks",
                                        ":folder_lock_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_lock_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the folder lock."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "0f329ae8-0266-4559-91b3-c31eaac82ad3",
                            "name": "Returns an error if the user does not have the required\naccess to perform the action.\n\n* `access_denied_insufficient_permissions`: Returned when the\n  user does not have access to the folder.\n\n* `insufficient_scope`: Returned an error if the application\n ",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks/:folder_lock_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks",
                                        ":folder_lock_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_lock_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the folder lock."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7a6fb4ad-f63d-4956-8718-a587b4f8ad85",
                            "name": "Returns an error if the folder could not be found,\nor the authenticated user does not have access to the folder.\n\n* `not_found` when the authenticated user does not have access\n  to the folder.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks/:folder_lock_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks",
                                        ":folder_lock_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_lock_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the folder lock."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "88251a26-8de4-475f-8d67-8cb0b50c254b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folder_locks/:folder_lock_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folder_locks",
                                        ":folder_lock_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_lock_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the folder lock."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "2d285ff6-7e3d-4691-bbdb-042e38b55330"
        },
        {
            "name": "Folders",
            "item": [
                {
                    "name": "Get folder information",
                    "id": "e5248063-e533-4d34-9f5c-c2b9c4b78b79",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                "key": "if-none-match",
                                "value": "1"
                            },
                            {
                                "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "ed2d8e54-91e6-46d0-b8da-287a4dfa817e",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieves details for a folder, including the first 100 entries\nin the folder.\n\nTo fetch more items within the folder, please use the\n[Get items in a folder](#get-folders-id-items) endpoint."
                    },
                    "response": [
                        {
                            "id": "012dac3f-b368-453b-972d-189b04b07423",
                            "name": "Returns a folder, including the first 100 entries in the folder.\n\nTo fetch more items within the folder, please use the\n[Get items in a folder](#get-folders-id-items) endpoint.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fie",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "085720bb-3657-4dca-8eef-0126af7e213c",
                            "name": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Modified",
                            "code": 304,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "acc692be-94c3-4f77-ae81-7a03ef16c48c",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "247e2850-fb6b-40ad-91fb-520dfacad0e7",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "96f095c9-f179-4e16-98f4-8cf3a6f7a1ee",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "6024009d-17b1-467d-bcb9-1e20a8cac0b0",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update folder",
                    "id": "93e25ac0-f341-4149-adc4-16d7ac176a33",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "96ed85c4-b7c2-4e34-9f86-a7d62bb415ef",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Updates a folder. This can be also be used to move the folder,\ncreate shared links, update collaborations, and more."
                    },
                    "response": [
                        {
                            "id": "ba917200-b69a-42c5-ac34-834954a8ccb2",
                            "name": "Returns a folder object for the updated folder\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.\n\nThis call will return synchronously. This holds true even when\nmo",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "d15d1e08-5522-47e2-b184-eed8e34c3ed6",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid, or if a folder lock is preventing a move operation.\n\n* `bad_request` when a parameter is missing or incorrect. This error also\n  happens when a password is set for a shared link with an ",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f9953323-1521-480f-bf60-3cee58859e92",
                            "name": "Returns an error if the user does not have the required\naccess to perform the action.\n\n* `access_denied_insufficient_permissions`: Returned when the\n  user does not have access to the folder or parent folder, or if the\n  folder is being moved and a folder",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1c4ba4ab-8da3-43e6-ae01-449b02e9d4dd",
                            "name": "Returns an error if the folder or parent folder could not be found,\nor the authenticated user does not have access to either folder.\n\n* `not_found` when the authenticated user does not have access\n  to the folder or parent folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4f3f22f5-1fde-4647-9f68-d0f67d6b44d0",
                            "name": "* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in progress.\n\n  The operation can be retried at a later point.\n\n* `item_name_in_use`: Returned if",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a7af0412-d255-4bc1-b521-22369d34282a",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the\nfolder has changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "afa41ed6-7e74-4660-980a-76ff01e26068",
                            "name": "Returns an error when the operation takes longer\nthan 60 seconds. The operation will continue after\nthis response has been returned.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0ed2256e-607d-4f52-a422-fa251b0b90db",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"description\": \"Legal contracts for the new ACME deal\",\n    \"sync_state\": \"synced\",\n    \"can_non_owners_invite\": true,\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"tags\": [\n        \"approved\"\n    ],\n    \"is_collaboration_restricted_to_enterprise\": true,\n    \"collections\": [\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        },\n        {\n            \"id\": \"11446498\",\n            \"type\": \"file\"\n        }\n    ],\n    \"can_non_owners_view_collaborators\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete folder",
                    "id": "ef1503d2-39b2-4f42-afee-eb7981937907",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id"
                            ],
                            "query": [
                                {
                                    "key": "recursive",
                                    "value": "true",
                                    "description": "Delete a folder that is not empty by recursively deleting the\nfolder and all of its content."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "aae9df3d-896c-40cc-b419-1dfe93e0226c",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Deletes a folder, either permanently or by moving it to\nthe trash."
                    },
                    "response": [
                        {
                            "id": "a9714089-8685-481a-919f-9b8f25409126",
                            "name": "Returns an empty response when the folder is successfully deleted\nor moved to the trash.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "07917922-2af9-4516-88ae-f04fa028f835",
                            "name": "Returns an error if the user does not have the required\naccess to perform the action.\n\n* `access_denied_insufficient_permissions`: Returned when the\n  user does not have access to the folder, or when a folder lock has been\n  applied to the folder to preve",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f5ba1dd1-2aaf-476d-b0c6-01e2a1660ab8",
                            "name": "Returns an error if the folder could not be found,\nor the authenticated user does not have access to the folder.\n\n* `not_found` when the authenticated user does not have access\n  to the folder.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "2ee7ac0f-9144-4350-ad46-df0c4d9e8b60",
                            "name": "* `folder_not_empty`: Returned if the folder is not empty. Use the\n  `recursive` query parameter to recursively delete the folder and\n  its contents.\n* `operation_blocked_temporary`: Returned if the folder\n  is locked due to another move, copy, delete or ",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8e172e05-6527-43dd-be3d-52cfe2712445",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the\nfolder has changed since it was last requested.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3360d34d-70bb-4441-bbd1-338947a355bb",
                            "name": "Returns an error when the operation takes longer\nthan 60 seconds. The operation will continue after\nthis response has been returned.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5044275a-5c22-4bb9-aa87-5f49e89a675c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?recursive=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "recursive",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List items in folder",
                    "id": "19f16e1e-3ebb-495b-aa81-d3851d0bfc85",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/items?fields=id,type,name&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000&limit=1000&sort=id&direction=ASC",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "items"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`."
                                },
                                {
                                    "key": "usemarker",
                                    "value": "true",
                                    "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "sort",
                                    "value": "id",
                                    "description": "Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported for marker-based pagination\non the root folder (the folder with an ID of `0`)."
                                },
                                {
                                    "key": "direction",
                                    "value": "ASC",
                                    "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "d02e0f89-4b0b-484f-9338-6fa28ed05af1",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieves a page of items in a folder. These items can be files,\nfolders, and web links.\n\nTo request more information about the folder itself, like its size,\nplease use the [Get a folder](#get-folders-id) endpoint instead."
                    },
                    "response": [
                        {
                            "id": "11636be1-2994-44f9-9f88-a00a39b132d4",
                            "name": "Returns a collection of files, folders, and web links contained in a folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/items?fields=id,type,name&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000&limit=1000&sort=id&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ]\n}"
                        },
                        {
                            "id": "0f2b7592-e3c3-47b1-a743-6d38fb1112d9",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/items?fields=id,type,name&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000&limit=1000&sort=id&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4f58a08d-f4b0-475f-9d85-2a7b9c8c87cb",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/items?fields=id,type,name&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000&limit=1000&sort=id&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d3ee905d-e704-4830-bb7d-352d4a0a1097",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/items?fields=id,type,name&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000&limit=1000&sort=id&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f9d80313-f71e-4309-a628-ab8e575902bb",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/items?fields=id,type,name&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000&limit=1000&sort=id&direction=ASC",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create folder",
                    "id": "e7bab7c4-8771-4bcf-8c53-a6441434b7b8",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Creates a new empty folder within the specified parent folder."
                    },
                    "response": [
                        {
                            "id": "792146c5-a283-482f-8800-19922ceb2e27",
                            "name": "Returns a folder object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "7df66d2a-4f18-4879-a2f4-c4c84cc0ac26",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `bad_request` when a parameter is missing or incorrect.\n* `item_name_too_long` when the folder name is too long.\n* `item_name_invalid` when the folder name contains\n  non-valid charac",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3716667c-e022-4906-91c0-7f6e9db26ef8",
                            "name": "Returns an error if the user does not have the required\naccess to perform the action. This might be because they\ndon't have access to the folder or parent folder, or because\nthe application does not have permission to write files and\nfolders.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c60cd7e1-5d32-47bb-b9a3-de95f50ecfae",
                            "name": "Returns an error if the parent folder could not be found,\nor the authenticated user does not have access to the parent\nfolder.\n\n* `not_found` when the authenticated user does not have access\n  to the parent folder",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "be446dd2-6579-4135-809e-95629c22e9dc",
                            "name": "* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in process.\n\n  The operation can be retried at a later point.\n\n* `item_name_in_use`: Returned if ",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "51e6db10-810c-4c03-8a97-7840c3ac8b91",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"New Folder\",\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"folder_upload_email\": {\n        \"access\": \"open\"\n    },\n    \"sync_state\": \"synced\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Copy folder",
                    "id": "4a766381-abe1-4933-901a-363171feefd1",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "copy"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "a8f29fd7-b71a-4017-b805-ee59745f1307",
                                    "key": "folder_id",
                                    "value": "0",
                                    "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                }
                            ]
                        },
                        "description": "Creates a copy of a folder within a destination folder.\n\nThe original folder will not be changed."
                    },
                    "response": [
                        {
                            "id": "a42e6b4b-bb6e-4960-a8e1-113e8866c247",
                            "name": "Returns a new folder object representing the copied folder.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "8b8ba8f9-a950-4ab0-a50f-b84da840cb98",
                            "name": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Modified",
                            "code": 304,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "8c2044d9-4778-427d-b23a-a139df5e0d90",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `bad_request` when a parameter is missing.\n* `item_name_too_long` when the new folder name is too long.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "29882b0a-df9f-448c-acda-c68c44840b10",
                            "name": "Returns an error if either the source or destination folder\ncould not be found, or the authenticated user does not\nhave access to either folders.\n\n* `not_found` when the authenticated user does not have access\n  to the parent folder",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "67e1ab5b-1e85-4ed6-a4dd-f3bfe31af4e4",
                            "name": "Returns an error if a folder by this name already exists\nin the destination folder, or if the destination folder\nis locked.\n\n* `item_name_in_use` when a folder with the same name already\n  exists.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a63b3869-b4f0-48ea-ab11-c963e73ca28d",
                            "name": "Returns an error when trying to copy the root folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e4399b7c-0e1a-4a48-9c9b-87d0fa73e26e",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"name\": \"New Folder\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/copy?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "copy"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "0",
                                            "description": "(Required) The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "f266671e-8dd5-4dbb-9c6d-76f9b0f879ca"
        },
        {
            "name": "Group memberships",
            "item": [
                {
                    "name": "List user's groups",
                    "id": "31a359d5-80c0-4bd1-9fca-485d07e033db",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id/memberships?limit=1000&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id",
                                "memberships"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "cdaa75a8-0756-49a7-8f6f-d0bf09498ff3",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Retrieves all the groups for a user. Only members of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "248a7ed4-9989-4ed0-97e3-b42e3e11fd84",
                            "name": "Returns a collection of membership objects. If there are no\nmemberships, an empty collection will be returned.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/memberships?limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "memberships"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"group_membership\",\n   \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"group\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": \"member\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"group_membership\",\n   \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"group\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": \"member\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "b3a64ce7-62df-4b92-a458-cb1346f9a73e",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/memberships?limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "memberships"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List members of group",
                    "id": "31df3d4b-7ce6-4c31-9c56-0d38a17486ef",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/groups/:group_id/memberships?limit=1000&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups",
                                ":group_id",
                                "memberships"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "c63f6398-8176-4401-b549-033759837613",
                                    "key": "group_id",
                                    "value": "57645",
                                    "description": "(Required) The ID of the group."
                                }
                            ]
                        },
                        "description": "Retrieves all the members for a group. Only members of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "57db4380-bf35-4926-9b92-56876bdf6bd9",
                            "name": "Returns a collection of membership objects. If there are no\nmemberships, an empty collection will be returned.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id/memberships?limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id",
                                        "memberships"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"group_membership\",\n   \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"group\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": \"member\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"group_membership\",\n   \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"group\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"role\": \"member\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "8fb63e10-2576-45c3-8bf4-dcc758cf9f9f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id/memberships?limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id",
                                        "memberships"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add user to group",
                    "id": "ec0803c4-c16d-43ec-8425-8e6290e4d177",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user\": {\n        \"id\": \"1434325\"\n    },\n    \"group\": {\n        \"id\": \"4545523\"\n    },\n    \"role\": \"member\",\n    \"configurable_permissions\": {\n        \"can_run_reports\": true\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/group_memberships?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "group_memberships"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Creates a group membership. Only users with\nadmin-level permissions will be able to use this API."
                    },
                    "response": [
                        {
                            "id": "b4bf4ce6-224a-4f1b-a206-26da1fb0892b",
                            "name": "Returns a new group membership object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"user\": {\n        \"id\": \"1434325\"\n    },\n    \"group\": {\n        \"id\": \"4545523\"\n    },\n    \"role\": \"member\",\n    \"configurable_permissions\": {\n        \"can_run_reports\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"group_membership\",\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"group\": {\n  \"id\": \"11446498\",\n  \"type\": \"group\",\n  \"name\": \"Support\",\n  \"group_type\": \"managed_group\"\n },\n \"role\": \"member\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "19a81269-cffd-4dca-b4f9-feb93d6b17c3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"user\": {\n        \"id\": \"1434325\"\n    },\n    \"group\": {\n        \"id\": \"4545523\"\n    },\n    \"role\": \"member\",\n    \"configurable_permissions\": {\n        \"can_run_reports\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get group membership",
                    "id": "8ebfc321-d32a-4460-9e44-68a28e608c2f",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/group_memberships/:group_membership_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "group_memberships",
                                ":group_membership_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "e3b48bf0-76ef-4120-a366-4100b11998b6",
                                    "key": "group_membership_id",
                                    "value": "434534",
                                    "description": "(Required) The ID of the group membership."
                                }
                            ]
                        },
                        "description": "Retrieves a specific group membership. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "d686dcf8-7357-409d-910e-5dcdb594a7e4",
                            "name": "Returns the group membership object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships/:group_membership_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships",
                                        ":group_membership_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_membership_id",
                                            "value": "434534",
                                            "description": "(Required) The ID of the group membership."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"group_membership\",\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"group\": {\n  \"id\": \"11446498\",\n  \"type\": \"group\",\n  \"name\": \"Support\",\n  \"group_type\": \"managed_group\"\n },\n \"role\": \"member\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "3ca5721d-6156-44fa-bb80-2b9653e3294e",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships/:group_membership_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships",
                                        ":group_membership_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_membership_id",
                                            "value": "434534",
                                            "description": "(Required) The ID of the group membership."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update group membership",
                    "id": "87bf5a56-b254-4983-83e9-13626c943c17",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"role\": \"member\",\n    \"configurable_permissions\": {\n        \"can_run_reports\": true\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/group_memberships/:group_membership_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "group_memberships",
                                ":group_membership_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "e56f5212-82a1-412f-ad42-7abeb54e56fa",
                                    "key": "group_membership_id",
                                    "value": "434534",
                                    "description": "(Required) The ID of the group membership."
                                }
                            ]
                        },
                        "description": "Updates a user's group membership. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "7dee5c97-b79e-4868-825c-fc43266eee7c",
                            "name": "Returns a new group membership object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"role\": \"member\",\n    \"configurable_permissions\": {\n        \"can_run_reports\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships/:group_membership_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships",
                                        ":group_membership_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_membership_id",
                                            "value": "434534",
                                            "description": "(Required) The ID of the group membership."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"group_membership\",\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"group\": {\n  \"id\": \"11446498\",\n  \"type\": \"group\",\n  \"name\": \"Support\",\n  \"group_type\": \"managed_group\"\n },\n \"role\": \"member\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "c4fb7ad9-e671-48e7-9ba7-0329a4b4de48",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"role\": \"member\",\n    \"configurable_permissions\": {\n        \"can_run_reports\": true\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships/:group_membership_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships",
                                        ":group_membership_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_membership_id",
                                            "value": "434534",
                                            "description": "(Required) The ID of the group membership."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove user from group",
                    "id": "51a114f3-db30-4095-bdef-2c052da03c4a",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/group_memberships/:group_membership_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "group_memberships",
                                ":group_membership_id"
                            ],
                            "variable": [
                                {
                                    "id": "a0ea7b80-2403-441f-a99d-62dafdb5a54f",
                                    "key": "group_membership_id",
                                    "value": "434534",
                                    "description": "(Required) The ID of the group membership."
                                }
                            ]
                        },
                        "description": "Deletes a specific group membership. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "ab4a75d6-19ed-488b-8126-2ec8f37a830c",
                            "name": "A blank response is returned if the membership was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships/:group_membership_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships",
                                        ":group_membership_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_membership_id",
                                            "value": "434534",
                                            "description": "(Required) The ID of the group membership."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "51105677-3d90-4aac-9793-11a8c21afab9",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/group_memberships/:group_membership_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "group_memberships",
                                        ":group_membership_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_membership_id",
                                            "value": "434534",
                                            "description": "(Required) The ID of the group membership."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "f85c2466-fce3-429a-837d-cd066274a5c4"
        },
        {
            "name": "Groups",
            "item": [
                {
                    "name": "List groups for enterprise",
                    "id": "f6b110e7-acc2-4192-a9af-f7d75f0c4d71",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/groups?filter_term=Engineering&fields=id,type,name&limit=1000&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups"
                            ],
                            "query": [
                                {
                                    "key": "filter_term",
                                    "value": "Engineering",
                                    "description": "Limits the results to only groups whose `name` starts\nwith the search term."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ]
                        },
                        "description": "Retrieves all of the groups for a given enterprise. The user\nmust have admin permissions to inspect enterprise's groups."
                    },
                    "response": [
                        {
                            "id": "3602c537-10ea-4a8b-ba75-1c29ac866455",
                            "name": "Returns a collection of group objects. If there are no groups, an\nempty collection will be returned.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups?filter_term=Engineering&fields=id,type,name&limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups"
                                    ],
                                    "query": [
                                        {
                                            "key": "filter_term",
                                            "value": "Engineering"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"group_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"group_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "c1769cb5-af91-4187-a2d2-ba1d85523b41",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups?filter_term=Engineering&fields=id,type,name&limit=1000&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups"
                                    ],
                                    "query": [
                                        {
                                            "key": "filter_term",
                                            "value": "Engineering"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create group",
                    "id": "75ab6c26-f529-4434-b60d-744510e7d5cb",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/groups?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Creates a new group of users in an enterprise. Only users with admin\npermissions can create new groups."
                    },
                    "response": [
                        {
                            "id": "3d0acc7e-31e1-4fd6-83dd-ea7eea8dbb8e",
                            "name": "Returns the new group object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/groups?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"group\",\n \"name\": \"Support\",\n \"group_type\": \"managed_group\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "e9496841-5bc7-4740-b4af-72b9d776359f",
                            "name": "Returns an error a conflict is stopping the group from being created.\n\n* `invalid_parameter`: Often returned if the group name is not unique in\nthe enterprise.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/groups?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9d2bb773-7d39-4bde-bc75-842574930280",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/groups?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get group",
                    "id": "a6a43357-9ab5-44b8-98c0-377dcbe3d431",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups",
                                ":group_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "cefffb0b-bd7a-4849-aae7-106189d94902",
                                    "key": "group_id",
                                    "value": "57645",
                                    "description": "(Required) The ID of the group."
                                }
                            ]
                        },
                        "description": "Retrieves information about a group. Only members of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "5021cc9d-3b03-4285-860a-d16af2bb3eaf",
                            "name": "Returns the group object",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"group\",\n \"name\": \"Support\",\n \"group_type\": \"managed_group\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "9d071d3e-67b8-44dd-9c57-e5ef83cc215c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update group",
                    "id": "392c0fc1-8cdb-485a-8f77-a721385a37d9",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups",
                                ":group_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "ce7d3e88-37ef-461a-a2e9-dc3323a24dff",
                                    "key": "group_id",
                                    "value": "57645",
                                    "description": "(Required) The ID of the group."
                                }
                            ]
                        },
                        "description": "Updates a specific group. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API."
                    },
                    "response": [
                        {
                            "id": "73556f83-5dd3-4ae4-a929-ebc71a51e8f6",
                            "name": "Returns the updated group object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"group\",\n \"name\": \"Support\",\n \"group_type\": \"managed_group\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "9e9f8428-1b5a-4cda-9a3e-fd906dbce133",
                            "name": "Returns an error a conflict is stopping the group from being created.\n\n* `invalid_parameter`: Often returned if the group name is not unique in\nthe enterprise.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "01a369f1-71b8-4245-a171-536aa84d8c04",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Customer Support\",\n    \"provenance\": \"Active Directory\",\n    \"external_sync_identifier\": \"AD:123456\",\n    \"description\": \"\\\"Customer Support Group - as imported from Active Directory\\\"\",\n    \"invitability_level\": \"admins_only\",\n    \"member_viewability_level\": \"admins_only\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove group",
                    "id": "8f677d05-3b28-4ecf-8ff6-37cc6c6ca79f",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/groups/:group_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "groups",
                                ":group_id"
                            ],
                            "variable": [
                                {
                                    "id": "dcbfab6e-1881-4deb-8c77-e0b520a7122f",
                                    "key": "group_id",
                                    "value": "57645",
                                    "description": "(Required) The ID of the group."
                                }
                            ]
                        },
                        "description": "Permanently deletes a group. Only users with\nadmin-level permissions will be able to use this API."
                    },
                    "response": [
                        {
                            "id": "02f4380b-0eba-4486-9925-286ce692e593",
                            "name": "A blank response is returned if the group was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "907ec4e2-e3d2-4366-a1b6-6afe0a99b950",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/groups/:group_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "groups",
                                        ":group_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "group_id",
                                            "value": "57645",
                                            "description": "(Required) The ID of the group."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "21698770-de83-4cbd-a25d-14ee8e865be6"
        },
        {
            "name": "Invites",
            "item": [
                {
                    "name": "Create user invite",
                    "id": "e84cbce1-bbac-4acd-ae10-3043282745e3",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"enterprise\": {\n        \"id\": \"1232234\"\n    },\n    \"actionable_by\": {\n        \"login\": \"john@example.com\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/invites?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "invites"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Invites an existing external user to join an enterprise.\n\nThe existing user can not be part of another enterprise and\nmust already have a Box account. Once invited, the user will receive an\nemail and are prompted to accept the invitation within the\nBox web application.\n\nThis method requires the \"Manage An Enterprise\" scope enabled for\nthe application, which can be enabled within the developer console."
                    },
                    "response": [
                        {
                            "id": "a1f615c9-643b-461d-8cc8-b1afda40cfba",
                            "name": "Returns a new invite object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"enterprise\": {\n        \"id\": \"1232234\"\n    },\n    \"actionable_by\": {\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/invites?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "invites"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"invite\",\n \"invited_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"actionable_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"invited_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"status\": \"pending\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "423102d3-8b0c-4a4e-a2ae-3131cb331b9c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"enterprise\": {\n        \"id\": \"1232234\"\n    },\n    \"actionable_by\": {\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/invites?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "invites"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get user invite status",
                    "id": "f98f497d-e987-4e43-b526-24952db7d48d",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/invites/:invite_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "invites",
                                ":invite_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "d5bca6d7-ffa2-452b-9d1f-0118dd70783d",
                                    "key": "invite_id",
                                    "value": "213723",
                                    "description": "(Required) The ID of an invite."
                                }
                            ]
                        },
                        "description": "Returns the status of a user invite."
                    },
                    "response": [
                        {
                            "id": "2b09ef83-8950-4bcb-9bf3-7957fa5830d9",
                            "name": "Returns an invite object",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/invites/:invite_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "invites",
                                        ":invite_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "invite_id",
                                            "value": "213723",
                                            "description": "(Required) The ID of an invite."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"invite\",\n \"invited_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"actionable_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"invited_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"status\": \"pending\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "7ebe5ef2-f933-4284-bcef-2c70f975bdd0",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/invites/:invite_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "invites",
                                        ":invite_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "invite_id",
                                            "value": "213723",
                                            "description": "(Required) The ID of an invite."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "41018090-1ca9-4e2e-b25a-4f84f2215c11"
        },
        {
            "name": "Legal hold policies",
            "item": [
                {
                    "name": "List all legal hold policies",
                    "id": "8c38b756-fadf-4f53-9862-ec5ff800764d",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policies?policy_name=Sales Policy&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policies"
                            ],
                            "query": [
                                {
                                    "key": "policy_name",
                                    "value": "Sales Policy",
                                    "description": "Limits results to policies for which the names start with\nthis search term. This is a case-insensitive prefix."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Retrieves a list of legal hold policies that belong to\nan enterprise."
                    },
                    "response": [
                        {
                            "id": "eeffe989-424f-401d-9629-b35d811cf2f7",
                            "name": "Returns a list of legal hold policies.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies?policy_name=Sales Policy&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_name",
                                            "value": "Sales Policy"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"legal_hold_policy\",\n   \"policy_name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assignment_counts\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"deleted_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"filter_started_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"filter_ended_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"release_notes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"legal_hold_policy\",\n   \"policy_name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assignment_counts\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"deleted_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"filter_started_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"filter_ended_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"release_notes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "5a02edbe-27e9-46c8-8387-88b2814e57cb",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies?policy_name=Sales Policy&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_name",
                                            "value": "Sales Policy"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create legal hold policy",
                    "id": "1fd1d456-4e25-4d72-bdcf-b9f140df04b8",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n    \"filter_ended_at\": \"2012-12-18T10:53:43-08:00\",\n    \"is_ongoing\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policies",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policies"
                            ]
                        },
                        "description": "Create a new legal hold policy."
                    },
                    "response": [
                        {
                            "id": "d497b4ca-81a2-4422-9d94-ee87051d5e2a",
                            "name": "Returns a new legal hold policy object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n    \"filter_ended_at\": \"2012-12-18T10:53:43-08:00\",\n    \"is_ongoing\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"legal_hold_policy\",\n \"policy_name\": \"Policy 4\",\n \"description\": \"Postman created policy\",\n \"status\": \"active\",\n \"assignment_counts\": {\n  \"user\": 1,\n  \"folder\": 2,\n  \"file\": 3,\n  \"file_version\": 4\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"deleted_at\": \"2012-12-12T10:53:43-08:00\",\n \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n \"filter_ended_at\": \"2012-12-12T10:53:43-08:00\",\n \"release_notes\": \"Example\"\n}"
                        },
                        {
                            "id": "42130af3-1d14-4ba3-bc30-779bcc122c89",
                            "name": "Returns an error if required parameters are missing,\nor neither `is_ongoing` or filter dates are specified.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n    \"filter_ended_at\": \"2012-12-18T10:53:43-08:00\",\n    \"is_ongoing\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "96c6fff3-d2ce-421a-919f-48485ae29ef0",
                            "name": "Returns an error if a policy with this name already exists.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n    \"filter_ended_at\": \"2012-12-18T10:53:43-08:00\",\n    \"is_ongoing\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "89db35a7-4d6b-4be3-9b0e-78843832fe1e",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n    \"filter_ended_at\": \"2012-12-18T10:53:43-08:00\",\n    \"is_ongoing\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get legal hold policy",
                    "id": "2f84277d-894b-4a80-adc7-8f1af372c415",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policies",
                                ":legal_hold_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "91392080-c0f2-4922-8f92-2cd4ca96494e",
                                    "key": "legal_hold_policy_id",
                                    "value": "324432",
                                    "description": "(Required) The ID of the legal hold policy"
                                }
                            ]
                        },
                        "description": "Retrieve a legal hold policy."
                    },
                    "response": [
                        {
                            "id": "cc5d3cd4-b302-4a89-b46b-65d0e2be013a",
                            "name": "Returns a legal hold policy object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"legal_hold_policy\",\n \"policy_name\": \"Policy 4\",\n \"description\": \"Postman created policy\",\n \"status\": \"active\",\n \"assignment_counts\": {\n  \"user\": 1,\n  \"folder\": 2,\n  \"file\": 3,\n  \"file_version\": 4\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"deleted_at\": \"2012-12-12T10:53:43-08:00\",\n \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n \"filter_ended_at\": \"2012-12-12T10:53:43-08:00\",\n \"release_notes\": \"Example\"\n}"
                        },
                        {
                            "id": "9340f464-d31d-4c75-bc48-4d307bcf5a9f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update legal hold policy",
                    "id": "e17e7ab9-cefb-4645-8375-75a779211e74",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"release_notes\": \"Required for GDPR\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policies",
                                ":legal_hold_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "7d019f6a-7a84-46ff-ac4e-a155d46ae17a",
                                    "key": "legal_hold_policy_id",
                                    "value": "324432",
                                    "description": "(Required) The ID of the legal hold policy"
                                }
                            ]
                        },
                        "description": "Update legal hold policy."
                    },
                    "response": [
                        {
                            "id": "609dbb70-fc00-4673-85e5-becaf3134e78",
                            "name": "Returns a new legal hold policy object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"release_notes\": \"Required for GDPR\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"legal_hold_policy\",\n \"policy_name\": \"Policy 4\",\n \"description\": \"Postman created policy\",\n \"status\": \"active\",\n \"assignment_counts\": {\n  \"user\": 1,\n  \"folder\": 2,\n  \"file\": 3,\n  \"file_version\": 4\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"deleted_at\": \"2012-12-12T10:53:43-08:00\",\n \"filter_started_at\": \"2012-12-12T10:53:43-08:00\",\n \"filter_ended_at\": \"2012-12-12T10:53:43-08:00\",\n \"release_notes\": \"Example\"\n}"
                        },
                        {
                            "id": "0a48d958-f91e-4624-a029-ad649c10b7bf",
                            "name": "Returns an error if a policy with this name already exists.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"release_notes\": \"Required for GDPR\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1f7a85c0-ad32-44df-b613-79a077235066",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Sales Policy\",\n    \"description\": \"A custom policy for the sales team\",\n    \"release_notes\": \"Required for GDPR\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove legal hold policy",
                    "id": "04584976-c4d7-461c-990d-087e398f456a",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policies",
                                ":legal_hold_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "475a7734-3f3b-436a-8c40-e870baed1e91",
                                    "key": "legal_hold_policy_id",
                                    "value": "324432",
                                    "description": "(Required) The ID of the legal hold policy"
                                }
                            ]
                        },
                        "description": "Delete an existing legal hold policy.\n\nThis is an asynchronous process. The policy will not be\nfully deleted yet when the response returns."
                    },
                    "response": [
                        {
                            "id": "d71e86d1-d550-46c6-8b6f-d67ae1eb398d",
                            "name": "A blank response is returned if the policy was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "abab1b17-193c-4e09-8dc6-060522eb62b6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policies/:legal_hold_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policies",
                                        ":legal_hold_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_id",
                                            "value": "324432",
                                            "description": "(Required) The ID of the legal hold policy"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "0ad197b0-026e-4001-85dc-e907e9c3ea14"
        },
        {
            "name": "Legal hold policy assignments",
            "item": [
                {
                    "name": "List legal hold policy assignments",
                    "id": "204ee1bc-2e65-4bb5-a952-33f2a66fdb32",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policy_assignments?policy_id=324432&assign_to_type=file&assign_to_id=1234323&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policy_assignments"
                            ],
                            "query": [
                                {
                                    "key": "policy_id",
                                    "value": "324432",
                                    "description": "(Required) The ID of the legal hold policy"
                                },
                                {
                                    "key": "assign_to_type",
                                    "value": "file",
                                    "description": "Filters the results by the type of item the\npolicy was applied to."
                                },
                                {
                                    "key": "assign_to_id",
                                    "value": "1234323",
                                    "description": "Filters the results by the ID of item the\npolicy was applied to."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Retrieves a list of items a legal hold policy has been assigned to."
                    },
                    "response": [
                        {
                            "id": "7c6c7a24-0c2e-461a-92ab-d1641f2d77af",
                            "name": "Returns a list of legal hold policy assignments.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments?policy_id=324432&assign_to_type=file&assign_to_id=1234323&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_id",
                                            "value": "324432"
                                        },
                                        {
                                            "key": "assign_to_type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "assign_to_id",
                                            "value": "1234323"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"legal_hold_policy_assignment\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"legal_hold_policy_assignment\"\n  }\n ]\n}"
                        },
                        {
                            "id": "c7446df0-248c-4a19-8673-b478a4cbc953",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments?policy_id=324432&assign_to_type=file&assign_to_id=1234323&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_id",
                                            "value": "324432"
                                        },
                                        {
                                            "key": "assign_to_type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "assign_to_id",
                                            "value": "1234323"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Assign legal hold policy",
                    "id": "36ca1451-e738-4897-a835-fa49a0c2c039",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"policy_id\": \"123244\",\n    \"assign_to\": {\n        \"type\": \"folder\",\n        \"id\": \"6564564\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policy_assignments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policy_assignments"
                            ]
                        },
                        "description": "Assign a legal hold to a file, file version, folder, or user."
                    },
                    "response": [
                        {
                            "id": "049a7b28-5506-4da5-84f3-30c5a9d0e7ec",
                            "name": "Returns a new legal hold policy assignment.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"123244\",\n    \"assign_to\": {\n        \"type\": \"folder\",\n        \"id\": \"6564564\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"legal_hold_policy_assignment\",\n \"legal_hold_policy\": {\n  \"id\": \"11446498\",\n  \"type\": \"legal_hold_policy\"\n },\n \"assigned_to\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {},\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"size\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path_collection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trashed_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purged_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owned_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shared_link\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"item_status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "888c4c81-f6d9-4522-927c-89b37d0b22dd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"123244\",\n    \"assign_to\": {\n        \"type\": \"folder\",\n        \"id\": \"6564564\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get legal hold policy assignment",
                    "id": "e2e7dcfe-5dcc-4978-92a4-e4b59111b42f",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policy_assignments",
                                ":legal_hold_policy_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "52aa40de-853b-464c-8f24-7338c28c86ca",
                                    "key": "legal_hold_policy_assignment_id",
                                    "value": "753465",
                                    "description": "(Required) The ID of the legal hold policy assignment"
                                }
                            ]
                        },
                        "description": "Retrieve a legal hold policy assignment."
                    },
                    "response": [
                        {
                            "id": "be78fa7e-ffdd-484a-8876-2283dd977160",
                            "name": "Returns a legal hold policy object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"legal_hold_policy_assignment\",\n \"legal_hold_policy\": {\n  \"id\": \"11446498\",\n  \"type\": \"legal_hold_policy\"\n },\n \"assigned_to\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {},\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"size\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path_collection\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"trashed_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purged_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_created_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"content_modified_at\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"created_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"modified_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owned_by\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shared_link\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"item_status\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "ee3c8a8c-d773-4ef9-a4c1-0bc3a7c2e81e",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Unassign legal hold policy",
                    "id": "21e9fa75-9b10-406e-8f15-211cec99b910",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policy_assignments",
                                ":legal_hold_policy_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "945e7b5b-db51-4f56-8f3d-7c7aeb2257c1",
                                    "key": "legal_hold_policy_assignment_id",
                                    "value": "753465",
                                    "description": "(Required) The ID of the legal hold policy assignment"
                                }
                            ]
                        },
                        "description": "Remove a legal hold from an item.\n\nThis is an asynchronous process. The policy will not be\nfully removed yet when the response returns."
                    },
                    "response": [
                        {
                            "id": "e7653418-2dfb-491f-8ba3-0ac76469458e",
                            "name": "A blank response is returned if the assignment was\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "cb2b58af-8746-48c4-81d3-42df39f10259",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List current file versions for legal hold policy assignment",
                    "id": "fa4b767a-fc9f-4dba-9f2b-cd91baf9811f",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id/files_on_hold?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policy_assignments",
                                ":legal_hold_policy_assignment_id",
                                "files_on_hold"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "65aaf5a4-9dac-4f38-8cdb-0340663a8f8e",
                                    "key": "legal_hold_policy_assignment_id",
                                    "value": "753465",
                                    "description": "(Required) The ID of the legal hold policy assignment"
                                }
                            ]
                        },
                        "description": "Get a list of current file versions for a legal hold\nassignment.\n\nIn some cases you may want to get previous file versions instead. In these\ncases, use the `GET  /legal_hold_policy_assignments/:id/file_versions_on_hold`\nAPI instead to return any previous versions of a file for this legal hold\npolicy assignment.\n\nDue to ongoing re-architecture efforts this API might not return all file\nversions held for this policy ID. Instead, this API will only return the\nlatest file version held in the newly developed architecture. The `GET\n/file_version_legal_holds` API can be used to fetch current and past versions\nof files held within the legacy architecture.\n\nThe `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to\nfind a list of policy assignments for a given policy ID."
                    },
                    "response": [
                        {
                            "id": "d96cf90e-c606-48e2-beb5-b8308f0f6313",
                            "name": "Returns the list of current file versions held under legal hold for a\nspecific legal hold policy assignment.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id/files_on_hold?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id",
                                        "files_on_hold"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_legal_hold\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legal_hold_policy_assignments\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_legal_hold\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legal_hold_policy_assignments\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "09dadaae-caf5-4499-bb39-80a73f6c97d1",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id/files_on_hold?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id",
                                        "files_on_hold"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List previous file versions for legal hold policy assignment",
                    "id": "a96881b7-4c69-4faa-af0d-d7aeec742348",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id/file_versions_on_hold?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "legal_hold_policy_assignments",
                                ":legal_hold_policy_assignment_id",
                                "file_versions_on_hold"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "8d98306e-96e8-4bee-bc8d-318c4973bf8d",
                                    "key": "legal_hold_policy_assignment_id",
                                    "value": "753465",
                                    "description": "(Required) The ID of the legal hold policy assignment"
                                }
                            ]
                        },
                        "description": "Get a list of previous file versions for a legal hold\nassignment.\n\nIn some cases you may only need the latest file versions instead. In these\ncases, use the `GET  /legal_hold_policy_assignments/:id/files_on_hold` API\ninstead to return any current (latest) versions of a file for this legal hold\npolicy assignment.\n\nDue to ongoing re-architecture efforts this API might not return all files\nheld for this policy ID. Instead, this API will only return past file versions\nheld in the newly developed architecture. The `GET /file_version_legal_holds`\nAPI can be used to fetch current and past versions of files held within the\nlegacy architecture.\n\nThe `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to\nfind a list of policy assignments for a given policy ID."
                    },
                    "response": [
                        {
                            "id": "b3695893-b4b0-43b0-a54e-3367bcd61f58",
                            "name": "Returns the list of previous file versions held under legal hold for a\nspecific legal hold policy assignment.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id/file_versions_on_hold?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id",
                                        "file_versions_on_hold"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_legal_hold\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legal_hold_policy_assignments\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"file_version_legal_hold\",\n   \"file_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"file\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legal_hold_policy_assignments\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"deleted_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "8bfea4de-4006-4fc1-ac24-c383195f7b86",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/legal_hold_policy_assignments/:legal_hold_policy_assignment_id/file_versions_on_hold?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000&fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "legal_hold_policy_assignments",
                                        ":legal_hold_policy_assignment_id",
                                        "file_versions_on_hold"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "legal_hold_policy_assignment_id",
                                            "value": "753465",
                                            "description": "(Required) The ID of the legal hold policy assignment"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "4fa6e022-0449-4f6f-8fbb-a0875ddc93a0"
        },
        {
            "name": "Metadata cascade policies",
            "item": [
                {
                    "name": "List metadata cascade policies",
                    "id": "ff1207a6-d70a-487c-98f9-b6344f5a6a16",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_cascade_policies?folder_id=31232&owner_enterprise_id=31232&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_cascade_policies"
                            ],
                            "query": [
                                {
                                    "key": "folder_id",
                                    "value": "31232",
                                    "description": "(Required) Specifies which folder to return policies for. This can not be used on the\nroot folder with ID `0`."
                                },
                                {
                                    "key": "owner_enterprise_id",
                                    "value": "31232",
                                    "description": "The ID of the enterprise ID for which to find metadata\ncascade policies. If not specified, it defaults to the\ncurrent enterprise."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ]
                        },
                        "description": "Retrieves a list of all the metadata cascade policies\nthat are applied to a given folder. This can not be used on the root\nfolder with ID `0`."
                    },
                    "response": [
                        {
                            "id": "5e33f4e2-4640-4e60-a751-1a9b0eb2b3b4",
                            "name": "Returns a list of metadata cascade policies",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies?folder_id=31232&owner_enterprise_id=31232&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "owner_enterprise_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"6fd4ff89-8fc1-42cf-8b29-1890dedd26d7\",\n   \"type\": \"metadata_cascade_policy\",\n   \"owner_enterprise\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"parent\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"scope\": \"global\",\n   \"templateKey\": \"productInfo\"\n  },\n  {\n   \"id\": \"6fd4ff89-8fc1-42cf-8b29-1890dedd26d7\",\n   \"type\": \"metadata_cascade_policy\",\n   \"owner_enterprise\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"parent\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"scope\": \"global\",\n   \"templateKey\": \"productInfo\"\n  }\n ]\n}"
                        },
                        {
                            "id": "dbbf0425-5ce4-4269-810b-f23d49412443",
                            "name": "Returns an error when any of the parameters are not in a valid format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies?folder_id=31232&owner_enterprise_id=31232&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "owner_enterprise_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "78ace20a-a3ac-4d63-ba1e-b3637941eedd",
                            "name": "Returns an error when the folder can not be accessed. This error often\nhappens when accessing the root folder with ID `0`.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies?folder_id=31232&owner_enterprise_id=31232&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "owner_enterprise_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "27c67eb1-03a7-4960-8414-de1b3f400e9f",
                            "name": "Returns an error when the folder can not be found or the user does not\nhave access to the folder.\n\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies?folder_id=31232&owner_enterprise_id=31232&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "owner_enterprise_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d9b48839-91ba-4fa7-ace8-d170f2c2afdf",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies?folder_id=31232&owner_enterprise_id=31232&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "owner_enterprise_id",
                                            "value": "31232"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create metadata cascade policy",
                    "id": "24a45dde-b37c-414d-bcb4-111d5c28ee2d",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_cascade_policies",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_cascade_policies"
                            ]
                        },
                        "description": "Creates a new metadata cascade policy that applies a given\nmetadata template to a given folder and automatically\ncascades it down to any files within that folder.\n\nIn order for the policy to be applied a metadata instance must first\nbe applied to the folder the policy is to be applied to."
                    },
                    "response": [
                        {
                            "id": "9b4a8b24-277a-469d-a7af-68f9cd95c211",
                            "name": "Returns a new of metadata cascade policy",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"6fd4ff89-8fc1-42cf-8b29-1890dedd26d7\",\n \"type\": \"metadata_cascade_policy\",\n \"owner_enterprise\": {\n  \"type\": \"enterprise\",\n  \"id\": \"690678\"\n },\n \"parent\": {\n  \"type\": \"folder\",\n  \"id\": \"1234567\"\n },\n \"scope\": \"global\",\n \"templateKey\": \"productInfo\"\n}"
                        },
                        {
                            "id": "d7679a46-2d64-4957-8f55-13b22300e282",
                            "name": "Returns an error when any of the parameters are not in a valid format.\n\n* `bad_request` - Either the `scope`, `templateKey`, or `folder_id` are\nnot in a valid format.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "92a16e8d-3581-4e12-a84a-212f32473ef7",
                            "name": "Returns an error when trying to apply a policy to a restricted folder, for\nexample the root folder with ID `0`.\n\n* `forbidden` - Although the folder ID was valid and the user has access\nto the folder, the policy could not be applied to this folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c3fcc78f-9e9b-4384-bc3e-12ec5d566cf7",
                            "name": "Returns an error when the template or folder can not be found, or when the\nuser does not have access to the folder or template.\n\n* `instance_tuple_not_found` - The template could not be found or the user\ndoes not have access to the template.\n* `not_found`",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7790ae5b-3d6d-4937-a9f1-442dfef26800",
                            "name": "Returns an error when a policy for this folder and template is already in\nplace.\n\n* `tuple_already_exists` - A cascade policy for this combination of\n`folder_id`, `scope` and `templateKey` already exists.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\",\n  \"conflicts\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "993284f1-80e4-4de7-b6a4-573ab10acfad",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"1234567\",\n    \"scope\": \"enterprise\",\n    \"templateKey\": \"productInfo\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get metadata cascade policy",
                    "id": "467907e2-3776-4cb7-ae03-e503a426d941",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_cascade_policies",
                                ":metadata_cascade_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "1b8f57b7-bd97-4b04-8d79-f7b6c958537e",
                                    "key": "metadata_cascade_policy_id",
                                    "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                    "description": "(Required) The ID of the metadata cascade policy."
                                }
                            ]
                        },
                        "description": "Retrieve a specific metadata cascade policy assigned to a folder."
                    },
                    "response": [
                        {
                            "id": "8e64e5c4-2c01-4d20-af53-00e82a33d9a7",
                            "name": "Returns a metadata cascade policy",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the metadata cascade policy."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"6fd4ff89-8fc1-42cf-8b29-1890dedd26d7\",\n \"type\": \"metadata_cascade_policy\",\n \"owner_enterprise\": {\n  \"type\": \"enterprise\",\n  \"id\": \"690678\"\n },\n \"parent\": {\n  \"type\": \"folder\",\n  \"id\": \"1234567\"\n },\n \"scope\": \"global\",\n \"templateKey\": \"productInfo\"\n}"
                        },
                        {
                            "id": "a635bb9e-a7df-4657-9244-11e33d3f0dca",
                            "name": "Returns an error when the policy can not be found or the user does not\nhave access to the folder.\n\n* `instance_not_found` - The policy could not be found\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the metadata cascade policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d10ae296-a4b3-42cd-adf2-312b0903ea2d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the metadata cascade policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove metadata cascade policy",
                    "id": "844512ec-5e93-4ba6-aea1-610968f56f79",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_cascade_policies",
                                ":metadata_cascade_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "34417557-df0f-4f5f-b075-452f6ab3cd90",
                                    "key": "metadata_cascade_policy_id",
                                    "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                    "description": "(Required) The ID of the metadata cascade policy."
                                }
                            ]
                        },
                        "description": "Deletes a metadata cascade policy."
                    },
                    "response": [
                        {
                            "id": "d5450bbf-5766-4970-a827-2c05c10759f2",
                            "name": "Returns an empty response when the policy\nis successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the metadata cascade policy."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "772a2a5c-0355-41c7-9071-f6dc9badb7cf",
                            "name": "Returns an error when the policy can not be found or the user does not\nhave access to the folder.\n\n* `instance_not_found` - The policy could not be found\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the metadata cascade policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "31064f77-c0fd-40d0-b651-5a58ffef949d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the metadata cascade policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Force-apply metadata cascade policy to folder",
                    "id": "00795618-33ab-44b1-b795-5e8328bec7dd",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"conflict_resolution\": \"none\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id/apply",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_cascade_policies",
                                ":metadata_cascade_policy_id",
                                "apply"
                            ],
                            "variable": [
                                {
                                    "id": "62bf1106-c740-4668-9f7f-7156917d4550",
                                    "key": "metadata_cascade_policy_id",
                                    "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                    "description": "(Required) The ID of the cascade policy to force-apply."
                                }
                            ]
                        },
                        "description": "Force the metadata on a folder with a metadata cascade policy to be applied to\nall of its children. This can be used after creating a new cascade policy to\nenforce the metadata to be cascaded down to all existing files within that\nfolder."
                    },
                    "response": [
                        {
                            "id": "0f5a84ac-b896-4ddd-93b2-3941e7ce6ab6",
                            "name": "Returns an empty response when the API call was successful. The metadata\ncascade operation will be performed asynchronously.\n\nThe API call will return directly, before the cascade operation\nis complete. There is currently no API to check for the status of",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"conflict_resolution\": \"none\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id/apply",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id",
                                        "apply"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the cascade policy to force-apply."
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "7bc9fb8b-4a1d-43dd-bd02-e16a0e86961a",
                            "name": "Returns an error when the policy can not be found or the user does not\nhave access to the folder.\n\n* `instance_not_found` - The policy could not be found\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"conflict_resolution\": \"none\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id/apply",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id",
                                        "apply"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the cascade policy to force-apply."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "16eb3b59-aa72-4b83-be8e-113b5f0360ea",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"conflict_resolution\": \"none\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_cascade_policies/:metadata_cascade_policy_id/apply",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_cascade_policies",
                                        ":metadata_cascade_policy_id",
                                        "apply"
                                    ],
                                    "variable": [
                                        {
                                            "key": "metadata_cascade_policy_id",
                                            "value": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                                            "description": "(Required) The ID of the cascade policy to force-apply."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "52605976-75f5-4fab-9438-edd5dc4b8cb9"
        },
        {
            "name": "Metadata instances (Files)",
            "item": [
                {
                    "name": "List metadata instances on file",
                    "id": "b2510b5a-f503-4140-bd12-68af121903b3",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata"
                            ],
                            "variable": [
                                {
                                    "id": "93e0bf6c-db63-4f1d-b676-38c4edf7bb2c",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves all metadata for a given file."
                    },
                    "response": [
                        {
                            "id": "5ae9d908-4bb8-4881-9291-764474606080",
                            "name": "Returns all the metadata associated with a file.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"$parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$template\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$scope\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"$parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$template\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$scope\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"limit\": 100\n}"
                        },
                        {
                            "id": "6e2385dc-b820-49bb-b0c5-a0a24e7b9b96",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9c6d09fc-9450-4db0-8be7-046cc13737fd",
                            "name": "Returned when the user does not have access to the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "619748dc-a672-4875-a97b-134305622ff8",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get metadata instance on file",
                    "id": "f44d716d-4ac3-4b54-88c5-3f5a8970fb08",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "1c50ed09-a671-428a-8ea2-b503cc97d9c0",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                },
                                {
                                    "id": "b49e6389-1736-46fc-93a5-7087e26d4472",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "8acf14ab-82ed-4e9c-880b-7cabfd6a3a77",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Retrieves the instance of a metadata template that has been applied to a\nfile."
                    },
                    "response": [
                        {
                            "id": "76116e2b-a88b-4fbd-a8a9-59cc2aed5c8e",
                            "name": "An instance of the metadata template that includes\nadditional \"key:value\" pairs defined by the user or\nan application.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"marketingCollateral\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1\n}"
                        },
                        {
                            "id": "980080b8-7f04-4a7e-8ebf-bf808b6f0b65",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5a8ab8ec-9638-425d-a609-57de25b334eb",
                            "name": "Returned if the metadata template specified\nwas not applied to this file or the user does not have access to the\nfile.\n\n* `instance_not_found` - The metadata template was not applied to the\nfile.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7812633c-2a6f-4e29-bdcc-72caf7be7671",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "993c1b14-92eb-4829-a1e3-7ef8cc9a4eb5",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create metadata instance on file",
                    "id": "ee646b82-f27f-4d04-8af3-41c4355080ae",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "704791c4-0fc8-409e-aaa3-f3fbbb6d79be",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                },
                                {
                                    "id": "3072e988-21f8-4a01-9cef-f0d238faae89",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "b80f18e1-24ca-495a-979c-6c7c175c8fbe",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Applies an instance of a metadata template to a file.\n\nIn most cases only values that are present in the metadata template\nwill be accepted, except for the `global.properties` template which accepts\nany key-value pair."
                    },
                    "response": [
                        {
                            "id": "9d3d6320-0bdb-4c45-a4eb-fa73c817ae68",
                            "name": "Returns the instance of the template that was applied to the file,\nincluding the data that was applied to the template.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"marketingCollateral\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1\n}"
                        },
                        {
                            "id": "a9fdbf21-e4e2-4f7c-9009-e117cf1580e4",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4da5aa70-0b2f-48f9-b323-68859abceb55",
                            "name": "Returns an error when the file or metadata template could not be found.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.\n* `instance_tuple_not_found` - The metadata template could not be found.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d0518469-d484-449f-aa9d-c7a8a62698e1",
                            "name": "Returns an error when an instance of this metadata template is already\npresent on the file.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "43efb0ce-5356-4114-94a0-dfd0d26ee69b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update metadata instance on file",
                    "id": "77d15e45-e139-4bc1-acac-8d5c9a3ffd92",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "0a7eec35-d1da-4c09-aa95-7d5006f07a03",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                },
                                {
                                    "id": "0acca33c-fea0-4ff7-9af5-4ca467eebe5c",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "0b88cdfe-c5bd-4d6f-b1c3-7e550e58bd7d",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Updates a piece of metadata on a file.\n\nThe metadata instance can only be updated if the template has already been\napplied to the file before. When editing metadata, only values that match\nthe metadata template schema will be accepted.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata instance will not be changed."
                    },
                    "response": [
                        {
                            "id": "94ed90c4-4766-4bfb-9876-4469a12f349a",
                            "name": "Returns the updated metadata template instance, with the\ncustom template data included.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"marketingCollateral\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1\n}"
                        },
                        {
                            "id": "4e3df0b4-3142-420d-b342-05ccc6a394c0",
                            "name": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch objects.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "de1f3132-e27f-4fee-a60d-447a3c3cb157",
                            "name": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "02decd7f-16a7-4950-ab6e-4252b26b86a2",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove metadata instance from file",
                    "id": "f6c15283-3e1e-4d8f-8178-17f847180526",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "274ee131-b972-4c13-bd51-6166182294d2",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                },
                                {
                                    "id": "7713bbfc-37ac-4c49-84ad-fa3f51f77a46",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "815fa277-38ee-4d88-b22c-514071a10027",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Deletes a piece of file metadata."
                    },
                    "response": [
                        {
                            "id": "51303660-2070-4323-b16a-aee4342fadc9",
                            "name": "Returns an empty response when the metadata is\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "4face8ec-319a-4ff9-9932-d5167861b9d0",
                            "name": "Returned when the request parameters are not valid. This may happen of the\n`scope` is not valid.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4aa5a40b-b38d-4f00-be9a-3c9ae0c03e4a",
                            "name": "Returns an error when the file does not have an instance of the metadata\ntemplate applied to it, or when the user does not have access to the\nfile.\n\n* `instance_not_found` - An instance of the metadata template with the\ngiven `scope` and `templateKey` was",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "88170fa8-b44b-4748-b0b0-cdd537a10aaa",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "71226db6-20dc-462e-a7ef-6bb99e771bec",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "a5702511-6005-49b8-a027-df6f12a520df"
        },
        {
            "name": "Metadata instances (Folders)",
            "item": [
                {
                    "name": "List metadata instances on folder",
                    "id": "dc1ef082-9845-4a21-85e9-4fb0b795b2e5",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata"
                            ],
                            "variable": [
                                {
                                    "id": "6bcc705f-a08a-42b2-bd61-18641a7f9861",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieves all metadata for a given folder. This can not be used on the root\nfolder with ID `0`."
                    },
                    "response": [
                        {
                            "id": "5386b1ae-35d7-4236-8de2-9ee4956484c7",
                            "name": "Returns all the metadata associated with a folder.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"$parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$template\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$scope\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"$parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$template\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$scope\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"$version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"limit\": 100\n}"
                        },
                        {
                            "id": "d5ea71d5-aa7f-44c6-93ad-9ed14061584f",
                            "name": "Returned when the request parameters are not valid.\n\n* `forbidden` - this operation is not allowed on the Root folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "72c8dfc1-027f-40c1-8e79-ca8350276152",
                            "name": "Returned when the user does not have access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "05530d1c-408b-416f-9e66-35b9d2546274",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get metadata instance on folder",
                    "id": "d699ecb0-defc-42c7-bb8e-876d8c5172ca",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "ddf5da5d-7394-4c82-9ff3-d32262c73417",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                },
                                {
                                    "id": "1cfc8225-72bd-4a32-81e5-6ec40cdbbd63",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "f8100f16-a44a-46fc-ae82-1369f91b22b4",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Retrieves the instance of a metadata template that has been applied to a\nfolder. This can not be used on the root folder with ID `0`."
                    },
                    "response": [
                        {
                            "id": "bf2a52cc-321b-4b15-8a9a-89d79ef70322",
                            "name": "An instance of the metadata template that includes\nadditional \"key:value\" pairs defined by the user or\nan application.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"marketingCollateral\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1\n}"
                        },
                        {
                            "id": "0e6c06be-5c90-42a2-adce-97aa11f43bb5",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1fc9c37f-f0d5-43b8-98f2-3f27d50cb6d4",
                            "name": "Returned if the metadata template specified\nwas not applied to this folder or the user does not have access to the\nfolder.\n\n* `instance_not_found` - The metadata template was not applied to the\nfolder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9f681e5a-0b59-44fd-bd70-2b0dfca87f2f",
                            "name": "Returned when the method was not allowed. This often happens when the\nfolder ID is not valid or the root folder with ID `0`.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "00bc2c6d-044d-4c8d-8323-dbb88cab5a9f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create metadata instance on folder",
                    "id": "f33bfa56-ea11-4ebf-b84c-f827686861ca",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "0fb1719f-0ffa-4ff7-83f8-97d2ff354c33",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                },
                                {
                                    "id": "e0108762-464d-44ba-8daf-a4833a4f755d",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "9ec99401-1d1f-4a31-8cde-6d4036623031",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Applies an instance of a metadata template to a folder.\n\nIn most cases only values that are present in the metadata template\nwill be accepted, except for the `global.properties` template which accepts\nany key-value pair.\n\nTo display the metadata template in the Box web app the enterprise needs to be\nconfigured to enable **Cascading Folder Level Metadata** for the user in the\nadmin console."
                    },
                    "response": [
                        {
                            "id": "b89215f1-daf1-47ed-b7c0-47ee79211fd0",
                            "name": "Returns the instance of the template that was applied to the folder,\nincluding the data that was applied to the template.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"marketingCollateral\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1\n}"
                        },
                        {
                            "id": "cb320a37-8992-4fce-aa30-137867796592",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an un",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3c5d7c3e-c7cf-435a-989a-51aabac74e55",
                            "name": "Returns an error when the folder or metadata template could not be found.\n\n* `not_found` - The folder could not be found, or the user does not have\naccess to the folder.\n* `instance_tuple_not_found` - The metadata template could not be found.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d0ccb082-2e7d-4b4a-a236-5bb3697d8207",
                            "name": "Returns an error when an instance of this metadata template is already\npresent on the folder.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f3b0a1d1-1b6c-4d65-992e-6e68bb59c54b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update metadata instance on folder",
                    "id": "fb1b347c-7610-4331-beda-987c9c1f2848",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "137dcefe-58a1-4852-a501-2d76534613e4",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                },
                                {
                                    "id": "bd3f0d85-9b24-4478-ad20-57ea35d69010",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "3b289cda-163f-4e07-ade7-090d8956d627",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Updates a piece of metadata on a folder.\n\nThe metadata instance can only be updated if the template has already been\napplied to the folder before. When editing metadata, only values that match\nthe metadata template schema will be accepted.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata instance will not be changed."
                    },
                    "response": [
                        {
                            "id": "f7edff62-0f48-4921-99cc-84a83e75e6f7",
                            "name": "Returns the updated metadata template instance, with the\ncustom template data included.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$parent\": \"folder_59449484661,\",\n \"$template\": \"marketingCollateral\",\n \"$scope\": \"enterprise_27335\",\n \"$version\": 1\n}"
                        },
                        {
                            "id": "934a581d-9701-41f2-9919-17585682efe7",
                            "name": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch objects.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "64b2c19b-5933-4e9c-8567-75ca4f9e7017",
                            "name": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4e02a3e3-bb14-496e-87de-5c82192533bd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/currentState\",\n        \"value\": \"reviewed\",\n        \"from\": \"/nextState\"\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove metadata instance from folder",
                    "id": "f898f60a-e1af-41e4-b544-828caafad254",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "metadata",
                                ":scope",
                                ":template_key"
                            ],
                            "variable": [
                                {
                                    "id": "9d753878-3074-4790-b22b-86845220f3be",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                },
                                {
                                    "id": "51f7d821-a566-4c56-9501-a4443d4bfafd",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "d3a1916b-ae0c-4e65-8cf2-dedfe012abbc",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Deletes a piece of folder metadata."
                    },
                    "response": [
                        {
                            "id": "8243ce55-2d6e-4491-8434-34eb8b7224c0",
                            "name": "Returns an empty response when the metadata is\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "da7f8330-e232-43c8-a1f2-b19ab8eee6cc",
                            "name": "Returned when the request parameters are not valid. This may happen of the\n`scope` is not valid.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "37a7e3b2-3f97-49e2-ac80-b78918e76214",
                            "name": "Returns an error when the folder does not have an instance of the metadata\ntemplate applied to it, or when the user does not have access to the\nfolder.\n\n* `instance_not_found` - An instance of the metadata template with the\ngiven `scope` and `templateKey`",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9243b537-2cce-4059-9968-f52f7c4a36c9",
                            "name": "Returned when the method was not allowed. This often happens when the\nfolder ID is not valid or the root folder with ID `0`.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9dab08e6-3be3-4c4c-b1af-c288dfa56c9f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/metadata/:scope/:template_key",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "metadata",
                                        ":scope",
                                        ":template_key"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        },
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "0f239b37-e796-41be-99ef-4ec255fe6825"
        },
        {
            "name": "Metadata templates",
            "item": [
                {
                    "name": "Find metadata template by instance ID",
                    "id": "10588a52-e78a-4e7c-b9f2-7cc50a829eee",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates?metadata_instance_id=01234500-12f1-1234-aa12-b1d234cb567e",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates"
                            ],
                            "query": [
                                {
                                    "key": "metadata_instance_id",
                                    "value": "01234500-12f1-1234-aa12-b1d234cb567e",
                                    "description": "(Required) The ID of an instance of the metadata template to find."
                                }
                            ]
                        },
                        "description": "Finds a metadata template by searching for the ID of an instance of the\ntemplate."
                    },
                    "response": [
                        {
                            "id": "0b3002cc-7d28-436e-8c1f-dc78ca4a24b2",
                            "name": "Returns a list containing the 1 metadata template that matches the\ninstance ID.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates?metadata_instance_id=01234500-12f1-1234-aa12-b1d234cb567e",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates"
                                    ],
                                    "query": [
                                        {
                                            "key": "metadata_instance_id",
                                            "value": "01234500-12f1-1234-aa12-b1d234cb567e"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n   \"type\": \"metadata_template\",\n   \"scope\": \"enterprise_123456\",\n   \"templateKey\": \"productInfo\",\n   \"displayName\": \"Product Info\",\n   \"hidden\": true,\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"copyInstanceOnItemCopy\": true\n  },\n  {\n   \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n   \"type\": \"metadata_template\",\n   \"scope\": \"enterprise_123456\",\n   \"templateKey\": \"productInfo\",\n   \"displayName\": \"Product Info\",\n   \"hidden\": true,\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"copyInstanceOnItemCopy\": true\n  }\n ]\n}"
                        },
                        {
                            "id": "f8ce5c8a-c189-4eec-a12d-93fa4a46dd03",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates?metadata_instance_id=01234500-12f1-1234-aa12-b1d234cb567e",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates"
                                    ],
                                    "query": [
                                        {
                                            "key": "metadata_instance_id",
                                            "value": "01234500-12f1-1234-aa12-b1d234cb567e"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "eddd27b4-ec0a-4d1a-9900-22f999ed40ac",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates?metadata_instance_id=01234500-12f1-1234-aa12-b1d234cb567e",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates"
                                    ],
                                    "query": [
                                        {
                                            "key": "metadata_instance_id",
                                            "value": "01234500-12f1-1234-aa12-b1d234cb567e"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get metadata template by name",
                    "id": "3a138f68-8921-4f71-8c21-16333b96bcb9",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                ":scope",
                                ":template_key",
                                "schema"
                            ],
                            "variable": [
                                {
                                    "id": "840e4a52-d498-483a-8235-703a86a0e86e",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "86509991-5a9e-474d-b2ed-557633e711f6",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Retrieves a metadata template by its `scope` and `templateKey` values.\n\nTo find the `scope` and `templateKey` for a template, list all templates for\nan enterprise or globally, or list all templates applied to a file or folder."
                    },
                    "response": [
                        {
                            "id": "f5e88f14-e830-46ab-8e0e-3b9d1217079a",
                            "name": "Returns the metadata template matching the `scope`\nand `template` name.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"productInfo\",\n \"displayName\": \"Product Info\",\n \"hidden\": true,\n \"fields\": [\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  },\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  }\n ],\n \"copyInstanceOnItemCopy\": true\n}"
                        },
                        {
                            "id": "a643f683-36ec-4886-81d8-c0d56d30c40f",
                            "name": "Returned if any of the request parameters are not valid.\n\n* `bad_request`: Often returned when the scope of the template is not\n  recognised. Please make sure to use either `enterprise` or `global` as\n  the `scope` value.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "521cf57d-89c5-4d0c-acd5-a282d8589110",
                            "name": "Returned when a template with the given `scope` and `template_key` can not\nbe found.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "6c21a9dd-4226-407b-b0a4-3d402de15c8c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update metadata template",
                    "id": "d17bfa27-bd1d-4b64-9dec-b748f7b96ba2",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                ":scope",
                                ":template_key",
                                "schema"
                            ],
                            "variable": [
                                {
                                    "id": "ce045992-da78-44f2-9096-4975e8940ad7",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "5f20e3b6-a78a-4847-b3fb-8bcb04b5c574",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Updates a metadata template.\n\nThe metadata template can only be updated if the template\nalready exists.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata template will not be changed."
                    },
                    "response": [
                        {
                            "id": "a8e81160-5a2b-4132-adc5-396adcb780be",
                            "name": "Returns the updated metadata template, with the\ncustom template data included.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"productInfo\",\n \"displayName\": \"Product Info\",\n \"hidden\": true,\n \"fields\": [\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  },\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  }\n ],\n \"copyInstanceOnItemCopy\": true\n}"
                        },
                        {
                            "id": "ecbf8879-a4b2-49d9-9cad-d7bfac732b85",
                            "name": "The request body does not contain a valid metadata schema.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8a511fc7-89ee-421e-a0ca-d0346f24564e",
                            "name": "The request body contains a scope that the user is not\nallowed to create templates for.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d17910b4-0c38-44e8-8419-7a65a71d494d",
                            "name": "The requested template could not be found",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "92b4d354-90cb-41ff-a7a6-e532e2cb782a",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    },\n    {\n        \"op\": \"addEnumOption\",\n        \"data\": {\n            \"name\": \"Aaron Levie\"\n        },\n        \"fieldKey\": \"category\",\n        \"fieldKeys\": [\n            \"category\",\n            \"name\"\n        ],\n        \"enumOptionKey\": \"option1\",\n        \"enumOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ],\n        \"multiSelectOptionKey\": \"option1\",\n        \"multiSelectOptionKeys\": [\n            \"option1\",\n            \"option2\",\n            \"option3\"\n        ]\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove metadata template",
                    "id": "3fb0d3db-e33f-4848-a2b1-0a6f7d77cd1c",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                ":scope",
                                ":template_key",
                                "schema"
                            ],
                            "variable": [
                                {
                                    "id": "108a0f88-b62a-4170-8773-4563d9fd881d",
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "id": "a6971447-ee52-43aa-bb53-9fc606ae5bdf",
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Delete a metadata template and its instances.\nThis deletion is permanent and can not be reversed."
                    },
                    "response": [
                        {
                            "id": "eb88a3d5-196c-4f35-aebf-c0f3ebdc7ba1",
                            "name": "Returns an empty response when the metadata\ntemplate is successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "573eeca7-eb9b-4a76-862c-b6d6d4db8dfb",
                            "name": "Request body does not contain a valid metadata schema.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3d6cf344-9a65-4855-af35-53cda9d25e74",
                            "name": "Request body contains a scope that the user is not allowed to\ncreate a template for.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "07fa86c6-2043-423d-8c1d-f48bc0a51254",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:scope/:template_key/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":scope",
                                        ":template_key",
                                        "schema"
                                    ],
                                    "variable": [
                                        {
                                            "key": "scope",
                                            "value": "global",
                                            "description": "(Required) The scope of the metadata template"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties",
                                            "description": "(Required) The name of the metadata template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get metadata template by ID",
                    "id": "b67793ca-46e5-46f9-9c37-f3dd5d8e5f5e",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/:template_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                ":template_id"
                            ],
                            "variable": [
                                {
                                    "id": "a6c96259-462c-4343-bf88-2b89db1c9a46",
                                    "key": "template_id",
                                    "value": "f7a9891f",
                                    "description": "(Required) The ID of the template"
                                }
                            ]
                        },
                        "description": "Retrieves a metadata template by its ID."
                    },
                    "response": [
                        {
                            "id": "8299b09e-d7b3-47b1-a462-cc47b7648f7b",
                            "name": "Returns the metadata template that matches the ID.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:template_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":template_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "template_id",
                                            "value": "f7a9891f",
                                            "description": "(Required) The ID of the template"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"productInfo\",\n \"displayName\": \"Product Info\",\n \"hidden\": true,\n \"fields\": [\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  },\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  }\n ],\n \"copyInstanceOnItemCopy\": true\n}"
                        },
                        {
                            "id": "eaa6c827-cfca-43d3-8ac7-32a306e78bc9",
                            "name": "Returned if any of the request parameters are not valid.\n\n* `bad_request`: Often returned with a message when the ID of the template\n  is not recognised.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:template_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":template_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "template_id",
                                            "value": "f7a9891f",
                                            "description": "(Required) The ID of the template"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"productInfo\",\n \"displayName\": \"Product Info\",\n \"hidden\": true,\n \"fields\": [\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  },\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  }\n ],\n \"copyInstanceOnItemCopy\": true\n}"
                        },
                        {
                            "id": "b32f8b25-d095-4cd1-bfaf-b529f1b91ce8",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/:template_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        ":template_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "template_id",
                                            "value": "f7a9891f",
                                            "description": "(Required) The ID of the template"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List all global metadata templates",
                    "id": "2516101e-a8dc-4bd5-a56f-ce9eac61ec66",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/global?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "global"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Used to retrieve all generic, global metadata templates available to all\nenterprises using Box."
                    },
                    "response": [
                        {
                            "id": "275c22bf-27b6-43c6-94a0-2e21c0345975",
                            "name": "Returns all of the metadata templates available to all enterprises\nand their corresponding schema.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/global?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "global"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n   \"type\": \"metadata_template\",\n   \"scope\": \"enterprise_123456\",\n   \"templateKey\": \"productInfo\",\n   \"displayName\": \"Product Info\",\n   \"hidden\": true,\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"copyInstanceOnItemCopy\": true\n  },\n  {\n   \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n   \"type\": \"metadata_template\",\n   \"scope\": \"enterprise_123456\",\n   \"templateKey\": \"productInfo\",\n   \"displayName\": \"Product Info\",\n   \"hidden\": true,\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"copyInstanceOnItemCopy\": true\n  }\n ]\n}"
                        },
                        {
                            "id": "861c4a83-e040-4aba-b863-b876227e4885",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/global?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "global"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "83f87847-0c5a-48df-94f5-4b5a3bf83f14",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/global?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "global"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List all metadata templates for enterprise",
                    "id": "3a8ae047-2e39-427c-af2e-1027816f6a40",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/enterprise?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "enterprise"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Used to retrieve all metadata templates created to be used specifically within\nthe user's enterprise"
                    },
                    "response": [
                        {
                            "id": "14af8ca8-a50d-4808-a216-71d2f2796642",
                            "name": "Returns all of the metadata templates within an enterprise\nand their corresponding schema.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n   \"type\": \"metadata_template\",\n   \"scope\": \"enterprise_123456\",\n   \"templateKey\": \"productInfo\",\n   \"displayName\": \"Product Info\",\n   \"hidden\": true,\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"copyInstanceOnItemCopy\": true\n  },\n  {\n   \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n   \"type\": \"metadata_template\",\n   \"scope\": \"enterprise_123456\",\n   \"templateKey\": \"productInfo\",\n   \"displayName\": \"Product Info\",\n   \"hidden\": true,\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"copyInstanceOnItemCopy\": true\n  }\n ]\n}"
                        },
                        {
                            "id": "ccc3e789-d601-40d2-a590-ed4e1e21cd29",
                            "name": "Returned when the request parameters are not valid.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7d8298b0-fb87-4742-9420-466320d6183e",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/enterprise?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "enterprise"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create metadata template",
                    "id": "6609de9b-f963-41e0-b3e2-25ec8a361efb",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Product Info\",\n    \"templateKey\": \"productInfo\",\n    \"hidden\": true,\n    \"fields\": [\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        },\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        }\n    ],\n    \"copyInstanceOnItemCopy\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_templates/schema",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_templates",
                                "schema"
                            ]
                        },
                        "description": "Creates a new metadata template that can be applied to\nfiles and folders."
                    },
                    "response": [
                        {
                            "id": "82f89b56-b5f0-4972-9226-8c76415c4f4b",
                            "name": "The schema representing the metadata template created.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Product Info\",\n    \"templateKey\": \"productInfo\",\n    \"hidden\": true,\n    \"fields\": [\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        },\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        }\n    ],\n    \"copyInstanceOnItemCopy\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"58063d82-4128-7b43-bba9-92f706befcdf\",\n \"type\": \"metadata_template\",\n \"scope\": \"enterprise_123456\",\n \"templateKey\": \"productInfo\",\n \"displayName\": \"Product Info\",\n \"hidden\": true,\n \"fields\": [\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  },\n  {\n   \"type\": \"string\",\n   \"key\": \"category\",\n   \"displayName\": \"Category\",\n   \"description\": \"The category\",\n   \"hidden\": true,\n   \"options\": [\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ],\n   \"id\": \"822227e0-47a5-921b-88a8-494760b2e6d2\"\n  }\n ],\n \"copyInstanceOnItemCopy\": true\n}"
                        },
                        {
                            "id": "0139f5b1-b3df-4e85-9891-9b7218759f1a",
                            "name": "Returned if the request parameters or body is not valid.\n\n* `bad_request` when the body does not contain a valid request. In many\ncases this response will include extra details on what fields are missing.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Product Info\",\n    \"templateKey\": \"productInfo\",\n    \"hidden\": true,\n    \"fields\": [\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        },\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        }\n    ],\n    \"copyInstanceOnItemCopy\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9d62a99f-86d6-41fb-9cb5-5e65b6cd5125",
                            "name": "Returned when the user does not have the permission to create the metadata\ntemplate. This can happen for a few reasons, most commonly when the user\ndoes not have (co-)admin permissions, or the application tries to create a\ntemplate with the `global` scope",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Product Info\",\n    \"templateKey\": \"productInfo\",\n    \"hidden\": true,\n    \"fields\": [\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        },\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        }\n    ],\n    \"copyInstanceOnItemCopy\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e8410293-d54f-4509-ae0f-5cb2c3407990",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"scope\": \"enterprise\",\n    \"displayName\": \"Product Info\",\n    \"templateKey\": \"productInfo\",\n    \"hidden\": true,\n    \"fields\": [\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        },\n        {\n            \"type\": \"string\",\n            \"key\": \"category\",\n            \"displayName\": \"Category\",\n            \"description\": \"The category\",\n            \"hidden\": true,\n            \"options\": [\n                {\n                    \"key\": \"Category 1\"\n                },\n                {\n                    \"key\": \"Category 1\"\n                }\n            ]\n        }\n    ],\n    \"copyInstanceOnItemCopy\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_templates/schema",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_templates",
                                        "schema"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "5b90226d-ed7a-4e2b-b325-a7fa75679b98"
        },
        {
            "name": "Recent items",
            "item": [
                {
                    "name": "List recently accessed items",
                    "id": "6a6ca0b3-0506-4a23-825c-dbfed6b491c8",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/recent_items?fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "recent_items"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                }
                            ]
                        },
                        "description": "Returns information about the recent items accessed\nby a user, either in the last 90 days or up to the last\n1000 items accessed."
                    },
                    "response": [
                        {
                            "id": "58f8a1da-e992-4999-b5db-3918daccc4ff",
                            "name": "Returns a list recent items access by a user.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/recent_items?fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "recent_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"type\": \"recent_item\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"interaction_type\": \"item_preview\",\n   \"interacted_at\": \"2018-04-13T13:53:23-07:00\",\n   \"interaction_shared_link\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\"\n  },\n  {\n   \"type\": \"recent_item\",\n   \"item\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"interaction_type\": \"item_preview\",\n   \"interacted_at\": \"2018-04-13T13:53:23-07:00\",\n   \"interaction_shared_link\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\"\n  }\n ]\n}"
                        },
                        {
                            "id": "17838893-2263-4a11-88b2-70b7ed473eca",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/recent_items?fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "recent_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "10519af4-b47c-4696-90c1-581f8d8c0032"
        },
        {
            "name": "Retention policies",
            "item": [
                {
                    "name": "List retention policies",
                    "id": "34084454-1819-4500-9a50-c2ef8da9fe61",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/retention_policies?policy_name=Sales Policy&policy_type=finite&created_by_user_id=21312321&fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policies"
                            ],
                            "query": [
                                {
                                    "key": "policy_name",
                                    "value": "Sales Policy",
                                    "description": "Filters results by a case sensitive prefix of the name of\nretention policies."
                                },
                                {
                                    "key": "policy_type",
                                    "value": "finite",
                                    "description": "Filters results by the type of retention policy."
                                },
                                {
                                    "key": "created_by_user_id",
                                    "value": "21312321",
                                    "description": "Filters results by the ID of the user who created policy."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination."
                                }
                            ]
                        },
                        "description": "Retrieves all of the retention policies for an enterprise."
                    },
                    "response": [
                        {
                            "id": "417fa8d4-a3a8-449e-b3b1-232c9bc3817b",
                            "name": "Returns a list retention policies in the enterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies?policy_name=Sales Policy&policy_type=finite&created_by_user_id=21312321&fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_name",
                                            "value": "Sales Policy"
                                        },
                                        {
                                            "key": "policy_type",
                                            "value": "finite"
                                        },
                                        {
                                            "key": "created_by_user_id",
                                            "value": "21312321"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"policy_name\": \"Some Policy Name\",\n   \"retention_length\": \"365\",\n   \"disposition_action\": \"permanently_delete\",\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"policy_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"policy_name\": \"Some Policy Name\",\n   \"retention_length\": \"365\",\n   \"disposition_action\": \"permanently_delete\",\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"policy_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"limit\": 1000,\n \"next_marker\": \"JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii\"\n}"
                        },
                        {
                            "id": "8ee576bf-9123-4f4d-ba90-72604cf68000",
                            "name": "Returns a `bad_request` if a non existent `policy_type` was specified.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies?policy_name=Sales Policy&policy_type=finite&created_by_user_id=21312321&fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_name",
                                            "value": "Sales Policy"
                                        },
                                        {
                                            "key": "policy_type",
                                            "value": "finite"
                                        },
                                        {
                                            "key": "created_by_user_id",
                                            "value": "21312321"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1e4f8c60-c1ac-4ac4-a622-8c56f62c272d",
                            "name": "Returns a `not_found` error if the user specified in `created_by_user_id`\ndoes not exist.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies?policy_name=Sales Policy&policy_type=finite&created_by_user_id=21312321&fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_name",
                                            "value": "Sales Policy"
                                        },
                                        {
                                            "key": "policy_type",
                                            "value": "finite"
                                        },
                                        {
                                            "key": "created_by_user_id",
                                            "value": "21312321"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e6cac91e-b762-42e7-a9f6-2c335659d909",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies?policy_name=Sales Policy&policy_type=finite&created_by_user_id=21312321&fields=id,type,name&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "policy_name",
                                            "value": "Sales Policy"
                                        },
                                        {
                                            "key": "policy_type",
                                            "value": "finite"
                                        },
                                        {
                                            "key": "created_by_user_id",
                                            "value": "21312321"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create retention policy",
                    "id": "0cf75e5f-b904-4459-9bdc-5c59ba3da501",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"policy_type\": \"finite\",\n    \"disposition_action\": \"permanently_delete\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"retention_length\": \"365\",\n    \"can_owner_extend_retention\": true,\n    \"are_owners_notified\": true,\n    \"custom_notification_recipients\": [\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/retention_policies",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policies"
                            ]
                        },
                        "description": "Creates a retention policy."
                    },
                    "response": [
                        {
                            "id": "2d34fb37-cc3f-496c-bdf2-018f4d5334cd",
                            "name": "Returns a new retention policy object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"policy_type\": \"finite\",\n    \"disposition_action\": \"permanently_delete\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"retention_length\": \"365\",\n    \"can_owner_extend_retention\": true,\n    \"are_owners_notified\": true,\n    \"custom_notification_recipients\": [\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"retention_policy\",\n \"policy_name\": \"Some Policy Name\",\n \"retention_length\": \"365\",\n \"disposition_action\": \"permanently_delete\",\n \"description\": \"Policy to retain all reports for at least one month\",\n \"policy_type\": \"finite\",\n \"status\": \"active\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "465a4c30-825d-499b-8aa1-ebec3a58ffc1",
                            "name": "Returns a `bad_request` error with the `retention_length` was\nspecified for a `infinite` retention policy, an incorrect\n`disposition_action` was set, or description exceeds maximum length of\n500 characters.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"policy_type\": \"finite\",\n    \"disposition_action\": \"permanently_delete\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"retention_length\": \"365\",\n    \"can_owner_extend_retention\": true,\n    \"are_owners_notified\": true,\n    \"custom_notification_recipients\": [\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8248c451-b3df-4f64-90cb-c85a8ddcc5a6",
                            "name": "Returns an error if a retention policy with the given name already exists",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"policy_type\": \"finite\",\n    \"disposition_action\": \"permanently_delete\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"retention_length\": \"365\",\n    \"can_owner_extend_retention\": true,\n    \"are_owners_notified\": true,\n    \"custom_notification_recipients\": [\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e7da35c2-98c8-47ba-8ba3-93198db61416",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"policy_type\": \"finite\",\n    \"disposition_action\": \"permanently_delete\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"retention_length\": \"365\",\n    \"can_owner_extend_retention\": true,\n    \"are_owners_notified\": true,\n    \"custom_notification_recipients\": [\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"12312312\",\n            \"name\": \"Tim Apple\",\n            \"login\": \"apple@example.com\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get retention policy",
                    "id": "41597cda-b20a-41a0-b2bb-e801c8c3698c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policies",
                                ":retention_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "0ff4f878-80e4-44cc-a3f1-2e248eb78c0a",
                                    "key": "retention_policy_id",
                                    "value": "982312",
                                    "description": "(Required) The ID of the retention policy."
                                }
                            ]
                        },
                        "description": "Retrieves a retention policy."
                    },
                    "response": [
                        {
                            "id": "87c93035-817f-4c97-9d3e-09893c3c8110",
                            "name": "Returns the retention policy object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"retention_policy\",\n \"policy_name\": \"Some Policy Name\",\n \"retention_length\": \"365\",\n \"disposition_action\": \"permanently_delete\",\n \"description\": \"Policy to retain all reports for at least one month\",\n \"policy_type\": \"finite\",\n \"status\": \"active\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "34b1b105-e6a5-4abe-b085-4024837c5a4f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update retention policy",
                    "id": "658e3dc2-3651-4279-beb9-a9d245a8c13f",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"disposition_action\": \"permanently_delete\",\n    \"status\": \"retired\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policies",
                                ":retention_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "095029be-9fdc-4d8c-9b8c-ea57194eb7a6",
                                    "key": "retention_policy_id",
                                    "value": "982312",
                                    "description": "(Required) The ID of the retention policy."
                                }
                            ]
                        },
                        "description": "Updates a retention policy."
                    },
                    "response": [
                        {
                            "id": "141b3281-5c34-4310-853a-ee78bbc3e698",
                            "name": "Returns the updated retention policy object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"disposition_action\": \"permanently_delete\",\n    \"status\": \"retired\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"retention_policy\",\n \"policy_name\": \"Some Policy Name\",\n \"retention_length\": \"365\",\n \"disposition_action\": \"permanently_delete\",\n \"description\": \"Policy to retain all reports for at least one month\",\n \"policy_type\": \"finite\",\n \"status\": \"active\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "ac8bbf69-9562-45b7-8fe8-f2bb0b2e8855",
                            "name": "Returns a `bad_request` if an incorrect\n`disposition_action` was set or description exceeds maximum length of\n500 characters.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"disposition_action\": \"permanently_delete\",\n    \"status\": \"retired\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d4278dfa-d70a-494c-8585-cafabaf528e5",
                            "name": "Returns an error if a retention policy with the given name already exists",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"disposition_action\": \"permanently_delete\",\n    \"status\": \"retired\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9d52b596-0387-4a9f-8081-07b7bbb2b4cd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_name\": \"Some Policy Name\",\n    \"description\": \"Policy to retain all reports for at least one month\",\n    \"disposition_action\": \"permanently_delete\",\n    \"status\": \"retired\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "a4ac5973-ade2-44f0-af2d-ce6b40e64ce5"
        },
        {
            "name": "Retention policy assignments",
            "item": [
                {
                    "name": "List retention policy assignments",
                    "id": "e42ae7fd-f3fd-4343-8080-0b06698049eb",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/retention_policies/:retention_policy_id/assignments?type=metadata_template&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policies",
                                ":retention_policy_id",
                                "assignments"
                            ],
                            "query": [
                                {
                                    "key": "type",
                                    "value": "metadata_template",
                                    "description": "The type of the retention policy assignment to retrieve."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "9b45f3a7-b04a-4167-a864-96026825c19f",
                                    "key": "retention_policy_id",
                                    "value": "982312",
                                    "description": "(Required) The ID of the retention policy."
                                }
                            ]
                        },
                        "description": "Returns a list of all retention policy assignments associated with a specified\nretention policy."
                    },
                    "response": [
                        {
                            "id": "846fe801-25a0-4ad3-8e92-b5d3827ee148",
                            "name": "Returns a list of the retention policy assignments associated with the\nspecified retention policy.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id/assignments?type=metadata_template&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id",
                                        "assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "metadata_template"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"retention_policy_assignment\",\n   \"retention_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_to\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"filter_fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"assigned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n   \"start_date_field\": \"upload_date\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"retention_policy_assignment\",\n   \"retention_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_to\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"filter_fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"assigned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n   \"start_date_field\": \"upload_date\"\n  }\n ],\n \"limit\": 1000,\n \"next_marker\": \"JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii\"\n}"
                        },
                        {
                            "id": "75430fc3-cb0a-419a-ab73-30349ca41c2f",
                            "name": "Returns an error if an unknown `type` is specified.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id/assignments?type=metadata_template&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id",
                                        "assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "metadata_template"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "76d616b5-98f9-4479-805e-217078aeed1b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policies/:retention_policy_id/assignments?type=metadata_template&fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policies",
                                        ":retention_policy_id",
                                        "assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "type",
                                            "value": "metadata_template"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_id",
                                            "value": "982312",
                                            "description": "(Required) The ID of the retention policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Assign retention policy",
                    "id": "c21facd0-78ea-45e5-a63e-3a0fa2a1cae5",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"policy_id\": \"173463\",\n    \"assign_to\": {\n        \"type\": \"metadata_template\",\n        \"id\": \"6564564\"\n    },\n    \"filter_fields\": [\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        },\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        }\n    ],\n    \"start_date_field\": \"upload_date\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/retention_policy_assignments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policy_assignments"
                            ]
                        },
                        "description": "Assigns a retention policy to an item."
                    },
                    "response": [
                        {
                            "id": "2eb3c620-e9c8-4283-a7ed-cfb989b351d3",
                            "name": "Returns a new retention policy assignment object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"173463\",\n    \"assign_to\": {\n        \"type\": \"metadata_template\",\n        \"id\": \"6564564\"\n    },\n    \"filter_fields\": [\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        },\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        }\n    ],\n    \"start_date_field\": \"upload_date\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"retention_policy_assignment\",\n \"retention_policy\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policy_name\": \"Some Policy Name\",\n  \"retention_length\": \"365\",\n  \"disposition_action\": \"permanently_delete\"\n },\n \"assigned_to\": {\n  \"id\": \"a983f69f-e85f-4ph4-9f46-4afdf9c1af65\",\n  \"type\": \"metadata_template\"\n },\n \"filter_fields\": [\n  {\n   \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n   \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n  },\n  {\n   \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n   \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n  }\n ],\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"start_date_field\": \"upload_date\"\n}"
                        },
                        {
                            "id": "48ab962c-ad9d-4ccb-ada8-46db964d9d9c",
                            "name": "Returns an error if an `id` is specified while assigning the\nretention policy to an enterprise.\n\nReturns an error if `start_date_field` is present but `assign_to.type`\nis not `metadata_template`\n\nReturns an error if `start_date_field` is present, but belo",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"173463\",\n    \"assign_to\": {\n        \"type\": \"metadata_template\",\n        \"id\": \"6564564\"\n    },\n    \"filter_fields\": [\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        },\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        }\n    ],\n    \"start_date_field\": \"upload_date\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0f319b83-8cbc-4fd1-9c5f-939cc7293243",
                            "name": "Returns an error if no retention policy with the given `policy_id` exists.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"173463\",\n    \"assign_to\": {\n        \"type\": \"metadata_template\",\n        \"id\": \"6564564\"\n    },\n    \"filter_fields\": [\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        },\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        }\n    ],\n    \"start_date_field\": \"upload_date\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "58521c7e-f804-4409-a2f7-4c9db1b02c75",
                            "name": "Returns an error if a retention policy of equal or greater length has\nalready been assigned to this item.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"173463\",\n    \"assign_to\": {\n        \"type\": \"metadata_template\",\n        \"id\": \"6564564\"\n    },\n    \"filter_fields\": [\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        },\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        }\n    ],\n    \"start_date_field\": \"upload_date\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "50b79320-7397-49cb-b8f0-a78cf7d820f4",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"policy_id\": \"173463\",\n    \"assign_to\": {\n        \"type\": \"metadata_template\",\n        \"id\": \"6564564\"\n    },\n    \"filter_fields\": [\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        },\n        {\n            \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n            \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n        }\n    ],\n    \"start_date_field\": \"upload_date\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get retention policy assignment",
                    "id": "c16f06ea-6b84-4c49-b9fc-cd675a8356f3",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policy_assignments",
                                ":retention_policy_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "dd39b7d7-6288-4e37-9710-47b38250d122",
                                    "key": "retention_policy_assignment_id",
                                    "value": "1233123",
                                    "description": "(Required) The ID of the retention policy assignment."
                                }
                            ]
                        },
                        "description": "Retrieves a retention policy assignment"
                    },
                    "response": [
                        {
                            "id": "a62e2438-942c-4105-963f-52833c99025b",
                            "name": "Returns the retention policy assignment object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"retention_policy_assignment\",\n \"retention_policy\": {\n  \"id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policy_name\": \"Some Policy Name\",\n  \"retention_length\": \"365\",\n  \"disposition_action\": \"permanently_delete\"\n },\n \"assigned_to\": {\n  \"id\": \"a983f69f-e85f-4ph4-9f46-4afdf9c1af65\",\n  \"type\": \"metadata_template\"\n },\n \"filter_fields\": [\n  {\n   \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n   \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n  },\n  {\n   \"field\": \"a0f4ee4e-1dc1-4h90-a8a9-aef55fc681d4\",\n   \"value\": \"0c27b756-0p87-4fe0-a43a-59fb661ccc4e\"\n  }\n ],\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"start_date_field\": \"upload_date\"\n}"
                        },
                        {
                            "id": "179fa903-4bd1-4820-8806-aea32c1a631c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get files under retention",
                    "id": "1f24fb1f-d1d3-4b7a-81bd-3911b99860f6",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/files_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policy_assignments",
                                ":retention_policy_assignment_id",
                                "files_under_retention"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "a4b29021-4c65-448f-b33f-388fdd2a7ec3",
                                    "key": "retention_policy_assignment_id",
                                    "value": "1233123",
                                    "description": "(Required) The ID of the retention policy assignment."
                                }
                            ]
                        },
                        "description": "Returns a list of files under retention for a retention policy assignment."
                    },
                    "response": [
                        {
                            "id": "c4f0b5d8-9c52-4d29-8015-8554e92abd19",
                            "name": "Returns a list of files under retention that are associated with the\nspecified retention policy assignment.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/files_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id",
                                        "files_under_retention"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ]\n}"
                        },
                        {
                            "id": "25d43045-5f69-42fc-b806-57e49a2fde01",
                            "name": "Returns an error if `retention_policy_assignment_id` is not specified.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/files_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id",
                                        "files_under_retention"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "e25dc0a2-63f8-4f51-967b-1cb1862d2230",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/files_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id",
                                        "files_under_retention"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get file versions under retention",
                    "id": "a67fd50f-2401-4308-ba0a-e2007c8c869e",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/file_versions_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "retention_policy_assignments",
                                ":retention_policy_assignment_id",
                                "file_versions_under_retention"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "ea1c9bc4-844a-4739-87c9-37a3a2b85831",
                                    "key": "retention_policy_assignment_id",
                                    "value": "1233123",
                                    "description": "(Required) The ID of the retention policy assignment."
                                }
                            ]
                        },
                        "description": "Returns a list of file versions under retention for a retention policy\nassignment."
                    },
                    "response": [
                        {
                            "id": "7386d9e2-16f4-42eb-bb1e-f7611da1d143",
                            "name": "Returns a list of file versions under retention that are associated with\nthe specified retention policy assignment.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/file_versions_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id",
                                        "file_versions_under_retention"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {}\n  }\n ]\n}"
                        },
                        {
                            "id": "07afa828-e491-4312-9f85-c43cd6f7f954",
                            "name": "Returns an error if `retention_policy_assignment_id` is not specified.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/file_versions_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id",
                                        "file_versions_under_retention"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3569ef91-41f6-4b5c-84f7-e45698f46892",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/retention_policy_assignments/:retention_policy_assignment_id/file_versions_under_retention?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "retention_policy_assignments",
                                        ":retention_policy_assignment_id",
                                        "file_versions_under_retention"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "retention_policy_assignment_id",
                                            "value": "1233123",
                                            "description": "(Required) The ID of the retention policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "b317f4fd-0848-41c5-af9b-d3e32a23924c"
        },
        {
            "name": "Search",
            "item": [
                {
                    "name": "Query files/folders by metadata",
                    "id": "51dc7de0-b776-46df-ba9d-ef2439fd7837",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"from\": \"enterprise_123456.someTemplate\",\n    \"ancestor_folder_id\": \"0\",\n    \"query\": \"value >= :amount\",\n    \"query_params\": {\n        \"amount\": \"100\"\n    },\n    \"order_by\": [\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    ],\n    \"limit\": 50,\n    \"marker\": \"AAAAAmVYB1FWec8GH6yWu2nwmanfMh07IyYInaa7DZDYjgO1H4KoLW29vPlLY173OKsci6h6xGh61gG73gnaxoS+o0BbI1/h6le6cikjlupVhASwJ2Cj0tOD9wlnrUMHHw3/ISf+uuACzrOMhN6d5fYrbidPzS6MdhJOejuYlvsg4tcBYzjauP3+VU51p77HFAIuObnJT0ff\",\n    \"fields\": [\n        \"extension\",\n        \"created_at\",\n        \"item_status\",\n        \"metadata.enterprise_1234.contracts\",\n        \"metadata.enterprise_1234.regions.location\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/metadata_queries/execute_read",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_queries",
                                "execute_read"
                            ]
                        },
                        "description": "Create a search using SQL-like syntax to return items that match specific\nmetadata.\n\nBy default, this endpoint returns only the most basic info about the items for\nwhich the query matches. To get additional fields for each item, including any\nof the metadata, use the `fields` attribute in the query."
                    },
                    "response": [
                        {
                            "id": "fecafe81-17d4-45d0-88ec-b0d18dbeeb88",
                            "name": "Returns a list of files and folders that match this metadata query.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"from\": \"enterprise_123456.someTemplate\",\n    \"ancestor_folder_id\": \"0\",\n    \"query\": \"value >= :amount\",\n    \"query_params\": {\n        \"amount\": \"100\"\n    },\n    \"order_by\": [\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    ],\n    \"limit\": 50,\n    \"marker\": \"AAAAAmVYB1FWec8GH6yWu2nwmanfMh07IyYInaa7DZDYjgO1H4KoLW29vPlLY173OKsci6h6xGh61gG73gnaxoS+o0BbI1/h6le6cikjlupVhASwJ2Cj0tOD9wlnrUMHHw3/ISf+uuACzrOMhN6d5fYrbidPzS6MdhJOejuYlvsg4tcBYzjauP3+VU51p77HFAIuObnJT0ff\",\n    \"fields\": [\n        \"extension\",\n        \"created_at\",\n        \"item_status\",\n        \"metadata.enterprise_1234.contracts\",\n        \"metadata.enterprise_1234.regions.location\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_queries/execute_read",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_queries",
                                        "execute_read"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {},\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trashed_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"purged_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"content_created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"content_modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": \"12345\",\n   \"etag\": \"1\",\n   \"type\": \"file\",\n   \"sequence_id\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n   },\n   \"name\": \"Contract.pdf\",\n   \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n   \"file_version\": {},\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"trashed_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"purged_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"content_created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"content_modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ],\n \"limit\": 100,\n \"next_marker\": \"0!-M7487OpVfBTNBV-XsQjU50gQFlbFFu5nArMWD7Ck61GH_Qo40M1S2xN5zWZPBzEjaQS1SOjJiQoo5BsXEl1bCVLRZ2pTqo4SKp9tyqzWQK2L51KR_nC1EgF5I_TJSFw7uO2Bx4HweGETOjh5_2oPSWw5iMkM-OvGApeR0lGFO48FDKoyzJyLgz5aogxoKd8VE09CesOOnTnmZvrW0puylDc-hFjY5YLmWFBKox3SOWiSDwKFkmZGNHyjEzza1nSwbZg6CYsAdGsDwGJhuCeTNsFzP5Mo5qx9wMloS0lSPuf2CcBInbIJzl2CKlXF3FvqhANttpm2nzdBTQRSoJyJnjVBpf4Q_HjV2eb4KIZBBlLy067UCVdv2AAWQFd5E2i6s1YiGRTtgMEZntOSUYD4IYLMWWm5Ra7ke_SP32SL3GSjbBQYIyCVQ..\"\n}"
                        },
                        {
                            "id": "7395c9ce-3229-4d29-80c0-90339f7a5e30",
                            "name": "Returns an error when the request body is not valid.\n\n* `invalid_query` - Any of the provided body parameters might be\nincorrect. This can mean the `query` is incorrect, as well as some cases\nwhere the `from` value does not represent a valid template.\n* `",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"from\": \"enterprise_123456.someTemplate\",\n    \"ancestor_folder_id\": \"0\",\n    \"query\": \"value >= :amount\",\n    \"query_params\": {\n        \"amount\": \"100\"\n    },\n    \"order_by\": [\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    ],\n    \"limit\": 50,\n    \"marker\": \"AAAAAmVYB1FWec8GH6yWu2nwmanfMh07IyYInaa7DZDYjgO1H4KoLW29vPlLY173OKsci6h6xGh61gG73gnaxoS+o0BbI1/h6le6cikjlupVhASwJ2Cj0tOD9wlnrUMHHw3/ISf+uuACzrOMhN6d5fYrbidPzS6MdhJOejuYlvsg4tcBYzjauP3+VU51p77HFAIuObnJT0ff\",\n    \"fields\": [\n        \"extension\",\n        \"created_at\",\n        \"item_status\",\n        \"metadata.enterprise_1234.contracts\",\n        \"metadata.enterprise_1234.regions.location\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_queries/execute_read",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_queries",
                                        "execute_read"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ef274d95-e0ba-414d-b933-4740d85ee2fa",
                            "name": "Returns an error when a metadata template with the given `scope` and\n`templateKey` can not be found. The error response will include extra\ndetails.\n\n* `instance_not_found` - The template could not be found. Please make sure\nto use the full template scope ",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"from\": \"enterprise_123456.someTemplate\",\n    \"ancestor_folder_id\": \"0\",\n    \"query\": \"value >= :amount\",\n    \"query_params\": {\n        \"amount\": \"100\"\n    },\n    \"order_by\": [\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    ],\n    \"limit\": 50,\n    \"marker\": \"AAAAAmVYB1FWec8GH6yWu2nwmanfMh07IyYInaa7DZDYjgO1H4KoLW29vPlLY173OKsci6h6xGh61gG73gnaxoS+o0BbI1/h6le6cikjlupVhASwJ2Cj0tOD9wlnrUMHHw3/ISf+uuACzrOMhN6d5fYrbidPzS6MdhJOejuYlvsg4tcBYzjauP3+VU51p77HFAIuObnJT0ff\",\n    \"fields\": [\n        \"extension\",\n        \"created_at\",\n        \"item_status\",\n        \"metadata.enterprise_1234.contracts\",\n        \"metadata.enterprise_1234.regions.location\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_queries/execute_read",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_queries",
                                        "execute_read"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "eae63c25-04dc-4867-9c45-836136945d86",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"from\": \"enterprise_123456.someTemplate\",\n    \"ancestor_folder_id\": \"0\",\n    \"query\": \"value >= :amount\",\n    \"query_params\": {\n        \"amount\": \"100\"\n    },\n    \"order_by\": [\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        },\n        {\n            \"field_key\": \"amount\",\n            \"direction\": \"asc\"\n        }\n    ],\n    \"limit\": 50,\n    \"marker\": \"AAAAAmVYB1FWec8GH6yWu2nwmanfMh07IyYInaa7DZDYjgO1H4KoLW29vPlLY173OKsci6h6xGh61gG73gnaxoS+o0BbI1/h6le6cikjlupVhASwJ2Cj0tOD9wlnrUMHHw3/ISf+uuACzrOMhN6d5fYrbidPzS6MdhJOejuYlvsg4tcBYzjauP3+VU51p77HFAIuObnJT0ff\",\n    \"fields\": [\n        \"extension\",\n        \"created_at\",\n        \"item_status\",\n        \"metadata.enterprise_1234.contracts\",\n        \"metadata.enterprise_1234.regions.location\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_queries/execute_read",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_queries",
                                        "execute_read"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List metadata query indices",
                    "id": "bbaa9e01-c7e9-4c96-bae6-12fb7222fa19",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/metadata_query_indices?scope=global&template_key=properties",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "metadata_query_indices"
                            ],
                            "query": [
                                {
                                    "key": "scope",
                                    "value": "global",
                                    "description": "(Required) The scope of the metadata template"
                                },
                                {
                                    "key": "template_key",
                                    "value": "properties",
                                    "description": "(Required) The name of the metadata template"
                                }
                            ]
                        },
                        "description": "Retrieves the metadata query indices for a given scope and template key."
                    },
                    "response": [
                        {
                            "id": "452d0ab1-cfc4-4089-9d0c-a43ae809c0ef",
                            "name": "Returns a collection of metadata query indices for scope and template key.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_query_indices?scope=global&template_key=properties",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_query_indices"
                                    ],
                                    "query": [
                                        {
                                            "key": "scope",
                                            "value": "global"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"entries\": [\n  {\n   \"id\": \"-9876\",\n   \"type\": \"metadata_query_index\",\n   \"status\": \"active\",\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"-9876\",\n   \"type\": \"metadata_query_index\",\n   \"status\": \"active\",\n   \"fields\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"limit\": 100,\n \"next_marker\": \"0!-M7487OpVfBTNBV-XsQjU50gQFlbFFu5nArMWD7Ck61GH_Qo40M1S2xN5zWZPBzEjaQS1SOjJiQoo5BsXEl1bCVLRZ2pTqo4SKp9tyqzWQK2L51KR_nC1EgF5I_TJSFw7uO2Bx4HweGETOjh5_2oPSWw5iMkM-OvGApeR0lGFO48FDKoyzJyLgz5aogxoKd8VE09CesOOnTnmZvrW0puylDc-hFjY5YLmWFBKox3SOWiSDwKFkmZGNHyjEzza1nSwbZg6CYsAdGsDwGJhuCeTNsFzP5Mo5qx9wMloS0lSPuf2CcBInbIJzl2CKlXF3FvqhANttpm2nzdBTQRSoJyJnjVBpf4Q_HjV2eb4KIZBBlLy067UCVdv2AAWQFd5E2i6s1YiGRTtgMEZntOSUYD4IYLMWWm5Ra7ke_SP32SL3GSjbBQYIyCVQ..\"\n}"
                        },
                        {
                            "id": "58b4a7c1-c148-413d-a821-8d304dfd9664",
                            "name": "Returns an error when any of the parameters are not in a valid format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_query_indices?scope=global&template_key=properties",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_query_indices"
                                    ],
                                    "query": [
                                        {
                                            "key": "scope",
                                            "value": "global"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4fe7be9e-560b-482a-950e-37e94363bfb6",
                            "name": "Returns an error when the scope and template combination cannot be found.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_query_indices?scope=global&template_key=properties",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_query_indices"
                                    ],
                                    "query": [
                                        {
                                            "key": "scope",
                                            "value": "global"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "cc3aa89e-d16e-4b14-ba70-7d5cf1e5c381",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/metadata_query_indices?scope=global&template_key=properties",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "metadata_query_indices"
                                    ],
                                    "query": [
                                        {
                                            "key": "scope",
                                            "value": "global"
                                        },
                                        {
                                            "key": "template_key",
                                            "value": "properties"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Search for content",
                    "id": "5ca6ecaf-4281-4d1c-b3e4-e4dab7013c09",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/search?query=sales&scope=user_content&file_extensions=pdf,png,gif&created_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&updated_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&size_range=1000000,5000000&owner_user_ids=123422,23532,3241212&ancestor_folder_ids=4535234,234123235,2654345&content_types=name,description&type=file&trash_content=non_trashed_only&mdfilters={\"scope\":\"enterprise\",\"templateKey\":\"contract\",\"filters\":{\"category\":\"online\"}}&sort=modified_at&direction=ASC&limit=100&include_recent_shared_links=true&fields=id,type,name&offset=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "search"
                            ],
                            "query": [
                                {
                                    "key": "query",
                                    "value": "sales",
                                    "description": "The string to search for. This query is matched against item names,\ndescriptions, text content of files, and various other fields of\nthe different item types.\n\nThis parameter supports a variety of operators to further refine\nthe results returns.\n\n* `\"\"` - by wrapping a query in double quotes only exact matches are\n  returned by the API. Exact searches do not return search matches\n  based on specific character sequences. Instead, they return\n  matches based on phrases, that is, word sequences. For example:\n  A search for `\"Blue-Box\"` may return search results including\n  the sequence `\"blue.box\"`, `\"Blue Box\"`, and `\"Blue-Box\"`;\n  any item containing the words `Blue` and `Box` consecutively, in\n  the order specified.\n* `AND` - returns items that contain both the search terms. For\n  example, a search for `marketing AND BoxWorks` returns items\n  that have both `marketing` and `BoxWorks` within its text in any order.\n  It does not return a result that only has `BoxWorks` in its text.\n* `OR` - returns items that contain either of the search terms. For\n  example, a search for `marketing OR BoxWorks` returns a result that\n  has either `marketing` or `BoxWorks` within its text. Using this\n  operator is not necessary as we implicitly interpret multi-word\n  queries as `OR` unless another supported boolean term is used.\n* `NOT` - returns items that do not contain the search term provided.\n  For example, a search for `marketing AND NOT BoxWorks` returns a result\n  that has only `marketing` within its text. Results containing\n  `BoxWorks` are omitted.\n\nPlease note that we do not support lower case (that is,\n`and`, `or`, and `not`) or mixed case (that is, `And`, `Or`, and `Not`)\noperators.\n\nThis field is required unless the `mdfilters` parameter is defined."
                                },
                                {
                                    "key": "scope",
                                    "value": "user_content",
                                    "description": "Limits the search results to either the files that the user has\naccess to, or to files available to the entire enterprise.\n\nThe scope defaults to `user_content`, which limits the search\nresults to content that is available to the currently authenticated\nuser.\n\nThe `enterprise_content` can be requested by an admin through our\nsupport channels. Once this scope has been enabled for a user, it\nwill allow that use to query for content across the entire\nenterprise and not only the content that they have access to."
                                },
                                {
                                    "key": "file_extensions",
                                    "value": "pdf,png,gif",
                                    "description": "Limits the search results to any files that match any of the provided\nfile extensions. This list is a comma-separated list of file extensions\nwithout the dots."
                                },
                                {
                                    "key": "created_at_range",
                                    "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00",
                                    "description": "Limits the search results to any items created within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything created before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead."
                                },
                                {
                                    "key": "updated_at_range",
                                    "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00",
                                    "description": "Limits the search results to any items updated within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything updated before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead."
                                },
                                {
                                    "key": "size_range",
                                    "value": "1000000,5000000",
                                    "description": "Limits the search results to any items with a size within\na given file size range. This applied to files and folders.\n\nSize ranges are defined as comma separated list of a lower\nand upper byte size limit (inclusive).\n\nThe upper and lower bound can be omitted to create open ranges."
                                },
                                {
                                    "key": "owner_user_ids",
                                    "value": "123422,23532,3241212",
                                    "description": "Limits the search results to any items that are owned\nby the given list of owners, defined as a list of comma separated\nuser IDs.\n\nPlease note that the items still need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults. If the user does not have access to any files owned by any of\nthe users an empty result set will be returned.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team."
                                },
                                {
                                    "key": "ancestor_folder_ids",
                                    "value": "4535234,234123235,2654345",
                                    "description": "Limits the search results to items within the given\nlist of folders, defined as a comma separated lists\nof folder IDs.\n\nSearch results will also include items within any subfolders\nof those ancestor folders.\n\nPlease note that the folders still need to be owned or shared with\nthe currently authenticated user. If the folder is not accessible by this\nuser, or it does not exist, a `HTTP 404` error code will be returned\ninstead.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team."
                                },
                                {
                                    "key": "content_types",
                                    "value": "name,description",
                                    "description": "Limits the search results to any items that match the search query\nfor a specific part of the file, for example the file description.\n\nContent types are defined as a comma separated lists\nof Box recognized content types. The allowed content types are as follows.\n\n* `name` - The name of the item, as defined by its `name` field.\n* `description` - The description of the item, as defined by its\n  `description` field.\n* `file_content` - The actual content of the file.\n* `comments` - The content of any of the comments on a file or\n   folder.\n* `tags` - Any tags that are applied to an item, as defined by its\n   `tags` field."
                                },
                                {
                                    "key": "type",
                                    "value": "file",
                                    "description": "Limits the search results to any items of this type. This\nparameter only takes one value. By default the API returns\nitems that match any of these types.\n\n* `file` - Limits the search results to files\n* `folder` - Limits the search results to folders\n* `web_link` - Limits the search results to web links, also known\n   as bookmarks"
                                },
                                {
                                    "key": "trash_content",
                                    "value": "non_trashed_only",
                                    "description": "Determines if the search should look in the trash for items.\n\nBy default, this API only returns search results for items\nnot currently in the trash (`non_trashed_only`).\n\n* `trashed_only` - Only searches for items currently in the trash\n* `non_trashed_only` - Only searches for items currently not in\n  the trash"
                                },
                                {
                                    "key": "mdfilters",
                                    "value": "{\"scope\":\"enterprise\",\"templateKey\":\"contract\",\"filters\":{\"category\":\"online\"}}",
                                    "description": "Limits the search results to any items for which the metadata matches\nthe provided filter.\n\nThis parameter contains a list of 1 metadata template to filter\nthe search results by. This list can currently only\ncontain one entry, though this might be expanded in the future.\n\nThis parameter is required unless the `query` parameter is provided."
                                },
                                {
                                    "key": "sort",
                                    "value": "modified_at",
                                    "description": "Defines the order in which search results are returned. This API\ndefaults to returning items by relevance unless this parameter is\nexplicitly specified.\n\n* `relevance` (default) returns the results sorted by relevance to the\nquery search term. The relevance is based on the occurrence of the search\nterm in the items name, description, content, and additional properties.\n* `modified_at` returns the results ordered in descending order by date\nat which the item was last modified."
                                },
                                {
                                    "key": "direction",
                                    "value": "ASC",
                                    "description": "Defines the direction in which search results are ordered. This API\ndefaults to returning items in descending (`DESC`) order unless this\nparameter is explicitly specified.\n\nWhen results are sorted by `relevance` the ordering is locked to returning\nitems in descending order of relevance, and this parameter is ignored."
                                },
                                {
                                    "key": "limit",
                                    "value": "100",
                                    "description": "Defines the maximum number of items to return as part of a page of\nresults."
                                },
                                {
                                    "key": "include_recent_shared_links",
                                    "value": "true",
                                    "description": "Defines whether the search results should include any items\nthat the user recently accessed through a shared link.\n\nPlease note that when this parameter has been set to true,\nthe format of the response of this API changes to return\na list of [Search Results with\nShared Links](r://search_results_with_shared_links)"
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                }
                            ]
                        },
                        "description": "Searches for files, folders, web links, and shared files across the\nusers content or across the entire enterprise."
                    },
                    "response": [
                        {
                            "id": "352af26b-4f57-4dae-b7fd-1e2db61dec61",
                            "name": "Returns a collection of search results. If there are no matching\nsearch results, the `entries` array will be empty.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/search?query=sales&scope=user_content&file_extensions=pdf,png,gif&created_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&updated_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&size_range=1000000,5000000&owner_user_ids=123422,23532,3241212&ancestor_folder_ids=4535234,234123235,2654345&content_types=name,description&type=file&trash_content=non_trashed_only&mdfilters=[object Object]&sort=modified_at&direction=ASC&limit=100&include_recent_shared_links=true&fields=id,type,name&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "search"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "sales"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "user_content"
                                        },
                                        {
                                            "key": "file_extensions",
                                            "value": "pdf,png,gif"
                                        },
                                        {
                                            "key": "created_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "updated_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "size_range",
                                            "value": "1000000,5000000"
                                        },
                                        {
                                            "key": "owner_user_ids",
                                            "value": "123422,23532,3241212"
                                        },
                                        {
                                            "key": "ancestor_folder_ids",
                                            "value": "4535234,234123235,2654345"
                                        },
                                        {
                                            "key": "content_types",
                                            "value": "name,description"
                                        },
                                        {
                                            "key": "type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "trash_content",
                                            "value": "non_trashed_only"
                                        },
                                        {
                                            "key": "mdfilters",
                                            "value": "[object Object]"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "modified_at"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "100"
                                        },
                                        {
                                            "key": "include_recent_shared_links",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"entries\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                        },
                        {
                            "id": "4022e246-eeb9-4662-bfda-a517cfcab6ff",
                            "name": "Returns an error when the request was not valid. This can have multiple\nreasons and the `context_info` object will provide you with more details.\n\n* `missing_parameter` - Please provide at least the `query` or `mdfilters`\n  query parameter in a search.\n* ",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/search?query=sales&scope=user_content&file_extensions=pdf,png,gif&created_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&updated_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&size_range=1000000,5000000&owner_user_ids=123422,23532,3241212&ancestor_folder_ids=4535234,234123235,2654345&content_types=name,description&type=file&trash_content=non_trashed_only&mdfilters=[object Object]&sort=modified_at&direction=ASC&limit=100&include_recent_shared_links=true&fields=id,type,name&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "search"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "sales"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "user_content"
                                        },
                                        {
                                            "key": "file_extensions",
                                            "value": "pdf,png,gif"
                                        },
                                        {
                                            "key": "created_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "updated_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "size_range",
                                            "value": "1000000,5000000"
                                        },
                                        {
                                            "key": "owner_user_ids",
                                            "value": "123422,23532,3241212"
                                        },
                                        {
                                            "key": "ancestor_folder_ids",
                                            "value": "4535234,234123235,2654345"
                                        },
                                        {
                                            "key": "content_types",
                                            "value": "name,description"
                                        },
                                        {
                                            "key": "type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "trash_content",
                                            "value": "non_trashed_only"
                                        },
                                        {
                                            "key": "mdfilters",
                                            "value": "[object Object]"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "modified_at"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "100"
                                        },
                                        {
                                            "key": "include_recent_shared_links",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9d66002b-fb78-4d12-bbc1-15ffe40b8910",
                            "name": "Returns an error when the user does not have the permission to make\nthis API call.\n\n* The developer provided a `scope` of `enterprise_content` but did\n  not request this scope to be enabled for the user through our\n  support channels.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/search?query=sales&scope=user_content&file_extensions=pdf,png,gif&created_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&updated_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&size_range=1000000,5000000&owner_user_ids=123422,23532,3241212&ancestor_folder_ids=4535234,234123235,2654345&content_types=name,description&type=file&trash_content=non_trashed_only&mdfilters=[object Object]&sort=modified_at&direction=ASC&limit=100&include_recent_shared_links=true&fields=id,type,name&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "search"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "sales"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "user_content"
                                        },
                                        {
                                            "key": "file_extensions",
                                            "value": "pdf,png,gif"
                                        },
                                        {
                                            "key": "created_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "updated_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "size_range",
                                            "value": "1000000,5000000"
                                        },
                                        {
                                            "key": "owner_user_ids",
                                            "value": "123422,23532,3241212"
                                        },
                                        {
                                            "key": "ancestor_folder_ids",
                                            "value": "4535234,234123235,2654345"
                                        },
                                        {
                                            "key": "content_types",
                                            "value": "name,description"
                                        },
                                        {
                                            "key": "type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "trash_content",
                                            "value": "non_trashed_only"
                                        },
                                        {
                                            "key": "mdfilters",
                                            "value": "[object Object]"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "modified_at"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "100"
                                        },
                                        {
                                            "key": "include_recent_shared_links",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "297164d8-09c2-49fa-9689-53d6528e27d8",
                            "name": "Returns an error when the user does not have access to an item\nmentioned in the request.\n\n* The developer provided a folder ID in `ancestor_folder_ids`\n  that either does not exist or the user does not have access to.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/search?query=sales&scope=user_content&file_extensions=pdf,png,gif&created_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&updated_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&size_range=1000000,5000000&owner_user_ids=123422,23532,3241212&ancestor_folder_ids=4535234,234123235,2654345&content_types=name,description&type=file&trash_content=non_trashed_only&mdfilters=[object Object]&sort=modified_at&direction=ASC&limit=100&include_recent_shared_links=true&fields=id,type,name&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "search"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "sales"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "user_content"
                                        },
                                        {
                                            "key": "file_extensions",
                                            "value": "pdf,png,gif"
                                        },
                                        {
                                            "key": "created_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "updated_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "size_range",
                                            "value": "1000000,5000000"
                                        },
                                        {
                                            "key": "owner_user_ids",
                                            "value": "123422,23532,3241212"
                                        },
                                        {
                                            "key": "ancestor_folder_ids",
                                            "value": "4535234,234123235,2654345"
                                        },
                                        {
                                            "key": "content_types",
                                            "value": "name,description"
                                        },
                                        {
                                            "key": "type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "trash_content",
                                            "value": "non_trashed_only"
                                        },
                                        {
                                            "key": "mdfilters",
                                            "value": "[object Object]"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "modified_at"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "100"
                                        },
                                        {
                                            "key": "include_recent_shared_links",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b1664a66-dda1-447f-bc97-b560c06495fa",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/search?query=sales&scope=user_content&file_extensions=pdf,png,gif&created_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&updated_at_range=2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00&size_range=1000000,5000000&owner_user_ids=123422,23532,3241212&ancestor_folder_ids=4535234,234123235,2654345&content_types=name,description&type=file&trash_content=non_trashed_only&mdfilters=[object Object]&sort=modified_at&direction=ASC&limit=100&include_recent_shared_links=true&fields=id,type,name&offset=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "search"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "sales"
                                        },
                                        {
                                            "key": "scope",
                                            "value": "user_content"
                                        },
                                        {
                                            "key": "file_extensions",
                                            "value": "pdf,png,gif"
                                        },
                                        {
                                            "key": "created_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "updated_at_range",
                                            "value": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
                                        },
                                        {
                                            "key": "size_range",
                                            "value": "1000000,5000000"
                                        },
                                        {
                                            "key": "owner_user_ids",
                                            "value": "123422,23532,3241212"
                                        },
                                        {
                                            "key": "ancestor_folder_ids",
                                            "value": "4535234,234123235,2654345"
                                        },
                                        {
                                            "key": "content_types",
                                            "value": "name,description"
                                        },
                                        {
                                            "key": "type",
                                            "value": "file"
                                        },
                                        {
                                            "key": "trash_content",
                                            "value": "non_trashed_only"
                                        },
                                        {
                                            "key": "mdfilters",
                                            "value": "[object Object]"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "modified_at"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "100"
                                        },
                                        {
                                            "key": "include_recent_shared_links",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "228732e2-e40f-4626-bf93-329bd2809378"
        },
        {
            "name": "Shared links (Files)",
            "item": [
                {
                    "name": "Find file for shared link",
                    "id": "0b5a81a7-01a0-4f25-afb1-2dcfa591e0d3",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                "key": "if-none-match",
                                "value": "1"
                            },
                            {
                                "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/shared_items?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "shared_items"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Return the file represented by a shared link.\n\nA shared file can be represented by a shared link,\nwhich can originate within the current enterprise or within another.\n\nThis endpoint allows an application to retrieve information about a\nshared file when only given a shared link."
                    },
                    "response": [
                        {
                            "id": "e7fd69ab-362c-4599-b82f-e8ae0eec93b6",
                            "name": "Returns a full file resource if the shared link is valid and\nthe user has access to it.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/shared_items?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "shared_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"file\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contract.pdf\",\n \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n \"file_version\": {},\n \"description\": \"Contract for Q1 renewal\",\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"parent\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "c8385ed0-492b-4cd2-bfc1-2dbe15b4c9d1",
                            "name": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/shared_items?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "shared_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Modified",
                            "code": 304,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "631b45c7-9ec8-4f90-8fad-142868c47af1",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/shared_items?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "shared_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get shared link for file",
                    "id": "f2d0694d-59d9-48dc-80ab-06e3bd5df003",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#get_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                "{{file_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "get_shared_link"
                        },
                        "description": "Gets the information for a shared link on a file."
                    },
                    "response": [
                        {
                            "id": "89e50752-6cdf-4d44-b668-ca3966b36dff",
                            "name": "Returns the base representation of a file with the\nadditional shared link information.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"file\",\n \"etag\": \"1\",\n \"shared_link\": {\n  \"url\": \"https://app.box.com/s/kwio6b4ovt1264rnfbyqo1\",\n  \"download_url\": \"https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf\",\n  \"vanity_url\": null,\n  \"vanity_name\": null,\n  \"effective_access\": \"open\",\n  \"effective_permission\": \"can_download\",\n  \"is_password_enabled\": false,\n  \"unshared_at\": \"2020-09-21T10:34:41-07:00\",\n  \"download_count\": 0,\n  \"preview_count\": 0,\n  \"access\": \"open\",\n  \"permissions\": {\n   \"can_preview\": true,\n   \"can_download\": true\n  }\n }\n}"
                        },
                        {
                            "id": "a93e09b0-91b5-495e-a31c-6b94c86c1cf1",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "eed58f3e-e67d-4435-9c72-3bec2816dd18",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0d9ba41a-32e1-4c6b-9027-9fcb8ad1029c",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "799bc13a-d890-4a8a-bb99-ad8d76545627",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add shared link to file",
                    "id": "4964ac8e-3b15-42ba-b21c-56823a15e4a2",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                "{{file_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "add_shared_link"
                        },
                        "description": "Adds a shared link to a file."
                    },
                    "response": [
                        {
                            "id": "bcff0f34-4830-4a1e-9548-34860c9064c8",
                            "name": "Returns the base representation of a file with a new shared\nlink attached.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"file\",\n \"etag\": \"1\",\n \"shared_link\": {\n  \"url\": \"https://app.box.com/s/kwio6b4ovt1264rnfbyqo1\",\n  \"download_url\": \"https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf\",\n  \"vanity_url\": null,\n  \"vanity_name\": null,\n  \"effective_access\": \"open\",\n  \"effective_permission\": \"can_download\",\n  \"is_password_enabled\": false,\n  \"unshared_at\": \"2020-09-21T10:34:41-07:00\",\n  \"download_count\": 0,\n  \"preview_count\": 0,\n  \"access\": \"open\",\n  \"permissions\": {\n   \"can_preview\": true,\n   \"can_download\": true\n  }\n }\n}"
                        },
                        {
                            "id": "35aac13c-4e3d-430d-8d96-9dfc5b5db6e1",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0ce1217b-90bc-4234-b10b-8c646871bec3",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "de7ccf8b-b39b-4efe-867c-3547baa29e6f",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ad527ba2-39df-4bdf-8684-5297b310539a",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "74c52207-a3b2-43fd-951f-a95984bceaa1",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "82cfde2d-c83d-4404-b8d7-d49b9a7fc9e6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update shared link on file",
                    "id": "32e4fcb3-9dcc-481e-ad90-4f60bb40625e",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                "{{file_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "update_shared_link"
                        },
                        "description": "Updates a shared link on a file."
                    },
                    "response": [
                        {
                            "id": "5fa44d1a-35cd-47c7-86db-3fad99c5c4cf",
                            "name": "Returns a basic representation of the file, with the updated shared\nlink attached.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"file\",\n \"etag\": \"1\",\n \"shared_link\": {\n  \"url\": \"https://app.box.com/s/kwio6b4ovt1264rnfbyqo1\",\n  \"download_url\": \"https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf\",\n  \"vanity_url\": null,\n  \"vanity_name\": null,\n  \"effective_access\": \"open\",\n  \"effective_permission\": \"can_download\",\n  \"is_password_enabled\": false,\n  \"unshared_at\": \"2020-09-21T10:34:41-07:00\",\n  \"download_count\": 0,\n  \"preview_count\": 0,\n  \"access\": \"open\",\n  \"permissions\": {\n   \"can_preview\": true,\n   \"can_download\": true\n  }\n }\n}"
                        },
                        {
                            "id": "5fe786fb-8655-49df-9637-e064f1511ce0",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b350d82c-50e7-4f59-8626-12ccb1326616",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f4968ae1-0941-4273-ab49-bd6cc461c015",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "557d16cb-8fa1-4748-94a3-949d2d0ef66b",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5302569f-0de3-436a-8bb8-8b93e672143c",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b7f5f0e3-b399-44a7-81bd-571feb8d5978",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove shared link from file",
                    "id": "fe5466af-c7a7-4e9a-8ad9-b0e79f5b4913",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"shared_link\": null\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                "{{file_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "remove_shared_link"
                        },
                        "description": "Removes a shared link from a file."
                    },
                    "response": [
                        {
                            "id": "aa226900-8680-4df4-9430-cb58b3971c31",
                            "name": "Returns a basic representation of a file, with the shared link removed.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"file\",\n \"etag\": \"1\",\n \"shared_link\": null\n}"
                        },
                        {
                            "id": "61829ab7-52a7-495a-ae99-e6d1ae730e35",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ef7ab34b-f72f-4cb5-8319-720dd8afaa90",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5e481cf2-af9b-475c-9f2f-c7c2e7fc3425",
                            "name": "Returned if the file is not found, or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f6c350dd-5c0d-4d5d-a52c-49c96a9bf2be",
                            "name": "Returned if the `file_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0cbd3c21-2ada-4b83-9a5f-372ec1a82365",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a690e8a4-f6c5-44fb-8a3c-5ae9ffb4c903",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/{{file_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        "{{file_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "8b19d2f3-ebf0-4d73-8870-51add5978ea2"
        },
        {
            "name": "Shared links (Folders)",
            "item": [
                {
                    "name": "Find folder for shared link",
                    "id": "e9504152-5517-4d0d-9cb9-495c6322b482",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                "key": "if-none-match",
                                "value": "1"
                            },
                            {
                                "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/shared_items?fields=id,type,name#folders",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "shared_items"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "hash": "folders"
                        },
                        "description": "Return the folder represented by a shared link.\n\nA shared folder can be represented by a shared link,\nwhich can originate within the current enterprise or within another.\n\nThis endpoint allows an application to retrieve information about a\nshared folder when only given a shared link."
                    },
                    "response": [
                        {
                            "id": "042401b0-13af-4fa3-9d3a-e8614f2b3ec1",
                            "name": "Returns a full folder resource if the shared link is valid and\nthe user has access to it.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/shared_items?fields=id,type,name#folders",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "shared_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "hash": "folders"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "27bda04f-ec5c-44b3-9367-4d76df5ca5e4",
                            "name": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/shared_items?fields=id,type,name#folders",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "shared_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "hash": "folders"
                                }
                            },
                            "status": "Not Modified",
                            "code": 304,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "e61aa53a-71f9-4c37-b684-fd232066cab0",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "(Required) A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/shared_items?fields=id,type,name#folders",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "shared_items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "hash": "folders"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get shared link for folder",
                    "id": "fcb26bda-869d-4a58-a3ed-e4b410822ee0",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#get_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                "{{folder_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "get_shared_link"
                        },
                        "description": "Gets the information for a shared link on a folder."
                    },
                    "response": [
                        {
                            "id": "d3ba4f0e-d4eb-4935-b043-b5d59511e615",
                            "name": "Returns the base representation of a folder with the\nadditional shared link information.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"folder\",\n \"etag\": \"1\",\n \"shared_link\": {\n  \"url\": \"https://app.box.com/s/kwio6b4ovt1264rnfbyqo1\",\n  \"download_url\": \"https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf\",\n  \"vanity_url\": null,\n  \"vanity_name\": null,\n  \"effective_access\": \"open\",\n  \"effective_permission\": \"can_download\",\n  \"is_password_enabled\": false,\n  \"unshared_at\": \"2020-09-21T10:34:41-07:00\",\n  \"download_count\": 0,\n  \"preview_count\": 0,\n  \"access\": \"open\",\n  \"permissions\": {\n   \"can_preview\": true,\n   \"can_download\": true\n  }\n }\n}"
                        },
                        {
                            "id": "eedefecd-aa7c-444e-b271-a9ae022afd70",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b285d912-eec2-488c-8129-478c895c5665",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a4683767-09ca-4e7d-b99a-e4445ca64b9a",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7d40b297-04ad-4a19-8a6c-d3dd762c8d09",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#get_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "get_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Add shared link to folder",
                    "id": "60d05aa9-fe75-41ae-b535-aa25c5ea2388",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                "{{folder_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "add_shared_link"
                        },
                        "description": "Adds a shared link to a folder."
                    },
                    "response": [
                        {
                            "id": "7d3676c1-d29e-4060-9a5d-b752de0caa4f",
                            "name": "Returns the base representation of a folder with a new shared\nlink attached.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"folder\",\n \"etag\": \"1\",\n \"shared_link\": {\n  \"url\": \"https://app.box.com/s/kwio6b4ovt1264rnfbyqo1\",\n  \"download_url\": \"https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf\",\n  \"vanity_url\": null,\n  \"vanity_name\": null,\n  \"effective_access\": \"open\",\n  \"effective_permission\": \"can_download\",\n  \"is_password_enabled\": false,\n  \"unshared_at\": \"2020-09-21T10:34:41-07:00\",\n  \"download_count\": 0,\n  \"preview_count\": 0,\n  \"access\": \"open\",\n  \"permissions\": {\n   \"can_preview\": true,\n   \"can_download\": true\n  }\n }\n}"
                        },
                        {
                            "id": "84aeaabc-7514-4638-910d-8c0111e7973e",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1d55673e-ac00-4478-abe4-6f17669cd9ae",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "25c44869-3067-4e1a-981c-9d81abed6be4",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "51e63019-68da-47cf-8579-3bb6b65d7fc5",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d5cebf31-a212-46ad-9cde-f9bdd91af0a4",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the folder\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "28921b2e-8b09-407c-970b-e58387698e9b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#add_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "add_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update shared link on folder",
                    "id": "c614f82a-f6a7-43b2-a6c1-f71b959bd31a",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                "{{folder_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "update_shared_link"
                        },
                        "description": "Updates a shared link on a folder."
                    },
                    "response": [
                        {
                            "id": "2fbd830c-e9ce-43b3-a897-dbd556cba664",
                            "name": "Returns a basic representation of the folder, with the updated shared\nlink attached.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"folder\",\n \"etag\": \"1\",\n \"shared_link\": {\n  \"url\": \"https://app.box.com/s/kwio6b4ovt1264rnfbyqo1\",\n  \"download_url\": \"https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf\",\n  \"vanity_url\": null,\n  \"vanity_name\": null,\n  \"effective_access\": \"open\",\n  \"effective_permission\": \"can_download\",\n  \"is_password_enabled\": false,\n  \"unshared_at\": \"2020-09-21T10:34:41-07:00\",\n  \"download_count\": 0,\n  \"preview_count\": 0,\n  \"access\": \"open\",\n  \"permissions\": {\n   \"can_preview\": true,\n   \"can_download\": true\n  }\n }\n}"
                        },
                        {
                            "id": "1da6a3c2-2103-4db3-91b8-dfffdf8cb8fa",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f8e92f8c-8cc1-4421-8f92-bb4fdf576df3",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4d905120-8325-4a71-8ae4-8508f4b68c74",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "bbe63f27-ed2f-4517-ae30-b757a92f4b08",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "09dbb9b8-9195-41a8-923d-64439bfcd5df",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the folder\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3b150165-be84-4c11-9d85-3ad8211c778c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\",\n        \"permissions\": {\n            \"can_download\": true\n        }\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#update_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "update_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove shared link from folder",
                    "id": "069e0cc9-cd8a-45fe-9fe6-f805ba91a7e4",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"shared_link\": null\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                "{{folder_id}}"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "shared_link",
                                    "description": "(Required) Explicitly request the `shared_link` fields\nto be returned for this item."
                                }
                            ],
                            "hash": "remove_shared_link"
                        },
                        "description": "Removes a shared link from a folder."
                    },
                    "response": [
                        {
                            "id": "52759e0e-8407-4cfb-b58a-546c5b65fade",
                            "name": "Returns a basic representation of a folder, with the shared link removed.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"type\": \"folder\",\n \"etag\": \"1\",\n \"shared_link\": null\n}"
                        },
                        {
                            "id": "78bdb487-1e0b-4642-9f17-b35dc0dc0342",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "2053f1b3-4859-4d93-8269-23d1eb188b81",
                            "name": "Returned if the user does not have all the permissions to complete the\nupdate.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ace0c108-bc30-46bc-bc4d-8fa7d143dfa1",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "38a64de4-9aa4-4dd8-aede-e31fea913df1",
                            "name": "Returned if the `folder_id` is not in a recognized format.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "227a48e0-93ba-4918-b5cd-0ec5bd2a766a",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the folder\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ae818fa0-3c1d-4591-a40b-db4667836fcd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"shared_link\": null\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/{{folder_id}}?fields=shared_link#remove_shared_link",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "{{folder_id}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "shared_link"
                                        }
                                    ],
                                    "hash": "remove_shared_link"
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "00d1c7f0-6985-4961-99f6-04eb869bfb11"
        },
        {
            "name": "Skills",
            "item": [
                {
                    "name": "List Box Skill cards on file",
                    "id": "0a41158f-43ef-4fcd-8cae-b0cde2a4b5ba",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "global",
                                "boxSkillsCards"
                            ],
                            "variable": [
                                {
                                    "id": "7caf7faa-e65a-443b-8b90-50454bd43fd5",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "List the Box Skills metadata cards that are attached to a file."
                    },
                    "response": [
                        {
                            "id": "8f688f94-acf8-4fd0-830c-5866567eb2ed",
                            "name": "Returns all the metadata associated with a file.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$canEdit\": true,\n \"$id\": \"01234500-12f1-1234-aa12-b1d234cb567e\",\n \"$parent\": \"folder_59449484661,\",\n \"$scope\": \"enterprise_27335\",\n \"$template\": \"properties\",\n \"$type\": \"properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0\",\n \"$typeVersion\": 2,\n \"$version\": 1,\n \"cards\": [\n  {\n   \"type\": \"skill_card\",\n   \"skill_card_type\": \"status\",\n   \"skill\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"invocation\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created_at\": \"2018-04-13T13:53:23-07:00\",\n   \"skill_card_title\": {\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"status\": {\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"duration\": 1000,\n   \"entries\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"type\": \"skill_card\",\n   \"skill_card_type\": \"status\",\n   \"skill\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"invocation\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created_at\": \"2018-04-13T13:53:23-07:00\",\n   \"skill_card_title\": {\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"status\": {\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"duration\": 1000,\n   \"entries\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "fe7dc6d8-8957-4fc7-88f6-1e4e24655186",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create Box Skill cards on file",
                    "id": "c8a17e8e-7a05-4cca-9817-420004a8fa4c",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"cards\": [\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "global",
                                "boxSkillsCards"
                            ],
                            "variable": [
                                {
                                    "id": "05481c34-bba9-4158-8706-3d0ed15d09ff",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Applies one or more Box Skills metadata cards to a file."
                    },
                    "response": [
                        {
                            "id": "d2a8e984-ff8c-406c-ba04-71a631894875",
                            "name": "Returns the instance of the template that was applied to the file,\nincluding the data that was applied to the template.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"cards\": [\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$canEdit\": true,\n \"$id\": \"01234500-12f1-1234-aa12-b1d234cb567e\",\n \"$parent\": \"folder_59449484661,\",\n \"$scope\": \"enterprise_27335\",\n \"$template\": \"properties\",\n \"$type\": \"properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0\",\n \"$typeVersion\": 2,\n \"$version\": 1,\n \"cards\": [\n  {\n   \"type\": \"skill_card\",\n   \"skill_card_type\": \"status\",\n   \"skill\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"invocation\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created_at\": \"2018-04-13T13:53:23-07:00\",\n   \"skill_card_title\": {\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"status\": {\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"duration\": 1000,\n   \"entries\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"type\": \"skill_card\",\n   \"skill_card_type\": \"status\",\n   \"skill\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"invocation\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created_at\": \"2018-04-13T13:53:23-07:00\",\n   \"skill_card_title\": {\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"status\": {\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"duration\": 1000,\n   \"entries\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "9ae348e1-6dbe-4499-8f8a-c93d0143e021",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"cards\": [\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "77534628-3be2-4fdb-99d3-c5a5b60b32bc",
                            "name": "Returns an error when the file or metadata template could not be found.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.\n* `instance_tuple_not_found` - The metadata template could not be found.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"cards\": [\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "de95a2f5-a6c6-4a9a-b6d2-8acbd1a00ca5",
                            "name": "Returns an error when an instance of this metadata template is already\npresent on the file.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"cards\": [\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c62ae6a0-dc9f-40f5-9638-6709fc34b5a2",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"cards\": [\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update Box Skill cards on file",
                    "id": "b4dc01b8-42ff-43cc-ba2a-2ac9d4cb63c1",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    }\n]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "global",
                                "boxSkillsCards"
                            ],
                            "variable": [
                                {
                                    "id": "7b18f4c0-c0a1-41db-8ace-3b5fd15d4ba6",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Updates one or more Box Skills metadata cards to a file."
                    },
                    "response": [
                        {
                            "id": "0755a95a-bcd6-482f-a0c4-0748443fdda4",
                            "name": "Returns the updated metadata template, with the\ncustom template data included.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"$canEdit\": true,\n \"$id\": \"01234500-12f1-1234-aa12-b1d234cb567e\",\n \"$parent\": \"folder_59449484661,\",\n \"$scope\": \"enterprise_27335\",\n \"$template\": \"properties\",\n \"$type\": \"properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0\",\n \"$typeVersion\": 2,\n \"$version\": 1,\n \"cards\": [\n  {\n   \"type\": \"skill_card\",\n   \"skill_card_type\": \"status\",\n   \"skill\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"invocation\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created_at\": \"2018-04-13T13:53:23-07:00\",\n   \"skill_card_title\": {\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"status\": {\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"duration\": 1000,\n   \"entries\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"type\": \"skill_card\",\n   \"skill_card_type\": \"status\",\n   \"skill\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"invocation\": {\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created_at\": \"2018-04-13T13:53:23-07:00\",\n   \"skill_card_title\": {\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"status\": {\n    \"code\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"duration\": 1000,\n   \"entries\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
                        },
                        {
                            "id": "706d7722-12b1-4532-8b6c-59ee146122e7",
                            "name": "The requested file could not be found",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "929bbaee-1b9e-4aff-a2ff-7a8c63bc49ae",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/cards/0\",\n        \"value\": {\n            \"type\": \"skill_card\",\n            \"skill_card_type\": \"status\",\n            \"skill\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"invocation\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"created_at\": \"2018-04-13T13:53:23-07:00\",\n            \"skill_card_title\": {\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"status\": {\n                \"code\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"duration\": 1000,\n            \"entries\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ]\n        }\n    }\n]",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove Box Skill cards from file",
                    "id": "da22bf34-0ca9-41c5-b5c8-36fa17b462ab",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "metadata",
                                "global",
                                "boxSkillsCards"
                            ],
                            "variable": [
                                {
                                    "id": "955c30a0-5da1-4128-95b4-a097a5d23c96",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Removes any Box Skills cards metadata from a file."
                    },
                    "response": [
                        {
                            "id": "16803aca-7ab6-47b6-add2-e99ca7e08325",
                            "name": "Returns an empty response when the cards are\nsuccessfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "cdc3d047-cf88-4a3f-b6a5-3b9ca6cc3461",
                            "name": "Returns an error when the file does not have an instance of the Box Skill\ncards applied to it, or when the user does not have access to the file.\n\n* `instance_not_found` - An instance of the metadata template for Box\nSkill cards was not found on this file",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1b552d1e-803e-4cdc-a7e2-3c82ab4acf9b",
                            "name": "Returned when the method was not allowed.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c2092974-fa1f-417d-8081-d596a11502c0",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/metadata/global/boxSkillsCards",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "metadata",
                                        "global",
                                        "boxSkillsCards"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update all Box Skill cards on file",
                    "id": "04ced1ca-be7a-41be-b090-83886a3225f9",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"status\": \"success\",\n    \"metadata\": {\n        \"cards\": [\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"file\": {\n        \"type\": \"file\",\n        \"id\": \"3243244\"\n    },\n    \"file_version\": {\n        \"type\": \"file_version\",\n        \"id\": \"731381601045\"\n    },\n    \"usage\": {\n        \"unit\": \"file\",\n        \"value\": 1\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/skill_invocations/:skill_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "skill_invocations",
                                ":skill_id"
                            ],
                            "variable": [
                                {
                                    "id": "0606c9c7-30fe-4ffe-a226-8aad28b1800d",
                                    "key": "skill_id",
                                    "value": "33243242",
                                    "description": "(Required) The ID of the skill to apply this metadata for."
                                }
                            ]
                        },
                        "description": "An alternative method that can be used to overwrite and update all Box Skill\nmetadata cards on a file."
                    },
                    "response": [
                        {
                            "id": "75a876e1-55be-46fd-97e0-35d571d002d7",
                            "name": "Returns an empty response when the card has been successfully updated.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"success\",\n    \"metadata\": {\n        \"cards\": [\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"file\": {\n        \"type\": \"file\",\n        \"id\": \"3243244\"\n    },\n    \"file_version\": {\n        \"type\": \"file_version\",\n        \"id\": \"731381601045\"\n    },\n    \"usage\": {\n        \"unit\": \"file\",\n        \"value\": 1\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/skill_invocations/:skill_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "skill_invocations",
                                        ":skill_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "skill_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the skill to apply this metadata for."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "577301a1-64e2-47b1-be9e-5f123bc7da51",
                            "name": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"success\",\n    \"metadata\": {\n        \"cards\": [\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"file\": {\n        \"type\": \"file\",\n        \"id\": \"3243244\"\n    },\n    \"file_version\": {\n        \"type\": \"file_version\",\n        \"id\": \"731381601045\"\n    },\n    \"usage\": {\n        \"unit\": \"file\",\n        \"value\": 1\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/skill_invocations/:skill_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "skill_invocations",
                                        ":skill_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "skill_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the skill to apply this metadata for."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7c9b8b30-2c07-45ad-9ea1-37c0f8f71f68",
                            "name": "Returns an error when the file could not be found or the user does not\nhave access.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"success\",\n    \"metadata\": {\n        \"cards\": [\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"file\": {\n        \"type\": \"file\",\n        \"id\": \"3243244\"\n    },\n    \"file_version\": {\n        \"type\": \"file_version\",\n        \"id\": \"731381601045\"\n    },\n    \"usage\": {\n        \"unit\": \"file\",\n        \"value\": 1\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/skill_invocations/:skill_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "skill_invocations",
                                        ":skill_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "skill_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the skill to apply this metadata for."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9e97c6fe-d383-433f-ad54-bce2a8ba3fc7",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"success\",\n    \"metadata\": {\n        \"cards\": [\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"skill_card\",\n                \"skill_card_type\": \"status\",\n                \"skill\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"invocation\": {\n                    \"type\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"created_at\": \"2018-04-13T13:53:23-07:00\",\n                \"skill_card_title\": {\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"status\": {\n                    \"code\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"message\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"duration\": 1000,\n                \"entries\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"file\": {\n        \"type\": \"file\",\n        \"id\": \"3243244\"\n    },\n    \"file_version\": {\n        \"type\": \"file_version\",\n        \"id\": \"731381601045\"\n    },\n    \"usage\": {\n        \"unit\": \"file\",\n        \"value\": 1\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/skill_invocations/:skill_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "skill_invocations",
                                        ":skill_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "skill_id",
                                            "value": "33243242",
                                            "description": "(Required) The ID of the skill to apply this metadata for."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "797a17d3-af93-4211-80c7-b3a881e3cefc"
        },
        {
            "name": "Standard and Zones Storage Policies",
            "item": [],
            "id": "97a03cda-6a32-4725-86d3-c545524ee063"
        },
        {
            "name": "Standard and Zones Storage Policy Assignments",
            "item": [],
            "id": "b62076c5-05b5-4be6-a608-d1b94148f311"
        },
        {
            "name": "Task assignments",
            "item": [
                {
                    "name": "List task assignments",
                    "id": "aa5320c2-084d-48e0-91fd-2073efa03dc3",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/:task_id/assignments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                ":task_id",
                                "assignments"
                            ],
                            "variable": [
                                {
                                    "id": "54be0185-1bb0-4d11-90fd-3186f0e81d97",
                                    "key": "task_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task."
                                }
                            ]
                        },
                        "description": "Lists all of the assignments for a given task."
                    },
                    "response": [
                        {
                            "id": "668845c4-5c73-47df-be29-56192dfa4af4",
                            "name": "Returns a collection of task assignment defining what task on\na file has been assigned to which users and by who.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id/assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id",
                                        "assignments"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 100,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"task_assignment\",\n   \"item\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   \"assigned_to\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"message\": \"Please review\",\n   \"completed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n   \"reminded_at\": \"2012-12-12T10:53:43-08:00\",\n   \"resolution_state\": \"incomplete\",\n   \"assigned_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   }\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"task_assignment\",\n   \"item\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   \"assigned_to\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"message\": \"Please review\",\n   \"completed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n   \"reminded_at\": \"2012-12-12T10:53:43-08:00\",\n   \"resolution_state\": \"incomplete\",\n   \"assigned_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "83d8e7b6-df0a-4d55-bb61-1210999761ba",
                            "name": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id/assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id",
                                        "assignments"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "2c97634a-4109-4d5c-ae69-15f089e05078",
                            "name": "Returns an error if the task assignment ID was omitted in\nthe request.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id/assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id",
                                        "assignments"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b96482c8-6c79-4fa6-ab74-50614af9872b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id/assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id",
                                        "assignments"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Assign task",
                    "id": "514d6164-fd18-42fb-af76-97ab6f53f02b",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"task\": {\n        \"id\": \"11446498\",\n        \"type\": \"task\"\n    },\n    \"assign_to\": {\n        \"id\": \"3242343\",\n        \"login\": \"john@example.com\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/task_assignments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "task_assignments"
                            ]
                        },
                        "description": "Assigns a task to a user.\n\nA task can be assigned to more than one user by creating multiple\nassignments."
                    },
                    "response": [
                        {
                            "id": "57982d73-4527-4625-864b-f595b4e09754",
                            "name": "Returns a new task assignment object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"task\": {\n        \"id\": \"11446498\",\n        \"type\": \"task\"\n    },\n    \"assign_to\": {\n        \"id\": \"3242343\",\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task_assignment\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"assigned_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"message\": \"Please review\",\n \"completed_at\": \"2012-12-12T10:53:43-08:00\",\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"reminded_at\": \"2012-12-12T10:53:43-08:00\",\n \"resolution_state\": \"incomplete\",\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n }\n}"
                        },
                        {
                            "id": "b98e09df-97cc-42a4-b31d-9403cd03b743",
                            "name": "Returns an error if a change is attempted for a completed task or the user\ndoes not have access to the item linked to the task for the given task\nassignment.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"task\": {\n        \"id\": \"11446498\",\n        \"type\": \"task\"\n    },\n    \"assign_to\": {\n        \"id\": \"3242343\",\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b45190ea-41a3-4cb4-a604-774de6e77a2a",
                            "name": "Returns an error when the task cannot be found.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"task\": {\n        \"id\": \"11446498\",\n        \"type\": \"task\"\n    },\n    \"assign_to\": {\n        \"id\": \"3242343\",\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c01c4498-134d-45e3-87a4-7f0405e2537b",
                            "name": "Returns an error if any of the IDs for this request were not valid, or if\nthe targeted user does not have access to the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"task\": {\n        \"id\": \"11446498\",\n        \"type\": \"task\"\n    },\n    \"assign_to\": {\n        \"id\": \"3242343\",\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ceb560f8-db60-4a1d-9ae7-f708a2d59d12",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"task\": {\n        \"id\": \"11446498\",\n        \"type\": \"task\"\n    },\n    \"assign_to\": {\n        \"id\": \"3242343\",\n        \"login\": \"john@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get task assignment",
                    "id": "27209acb-f75e-449c-9be4-cc8685907e07",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "task_assignments",
                                ":task_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "7060534d-34df-4b84-bef1-a6a2ca5a57d1",
                                    "key": "task_assignment_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task assignment."
                                }
                            ]
                        },
                        "description": "Retrieves information about a task assignment."
                    },
                    "response": [
                        {
                            "id": "6da241d2-f288-4360-90a3-6facf02777f4",
                            "name": "Returns a task assignment, specifying who the task has been assigned to\nand by whom.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task_assignment\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"assigned_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"message\": \"Please review\",\n \"completed_at\": \"2012-12-12T10:53:43-08:00\",\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"reminded_at\": \"2012-12-12T10:53:43-08:00\",\n \"resolution_state\": \"incomplete\",\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n }\n}"
                        },
                        {
                            "id": "a32cd490-facc-424f-aec9-7628c10a5e0d",
                            "name": "Returns an error when the task assignment could not be found or the user\ndoes not have access to the file the task is assigned to.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "67142e79-3077-4a5e-ac02-0eb3fd2670d2",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update task assignment",
                    "id": "4e8b52dd-14b4-444f-a341-401bcf278586",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"message\": \"Looks good to me\",\n    \"resolution_state\": \"completed\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "task_assignments",
                                ":task_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "e8a7492e-de4e-487b-9ed3-77e2c3b2f907",
                                    "key": "task_assignment_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task assignment."
                                }
                            ]
                        },
                        "description": "Updates a task assignment. This endpoint can be\nused to update the state of a task assigned to a user."
                    },
                    "response": [
                        {
                            "id": "27d7c119-d0f4-4998-8319-d80a7157eb66",
                            "name": "Returns the updated task assignment object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Looks good to me\",\n    \"resolution_state\": \"completed\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task_assignment\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"assigned_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"message\": \"Please review\",\n \"completed_at\": \"2012-12-12T10:53:43-08:00\",\n \"assigned_at\": \"2012-12-12T10:53:43-08:00\",\n \"reminded_at\": \"2012-12-12T10:53:43-08:00\",\n \"resolution_state\": \"incomplete\",\n \"assigned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n }\n}"
                        },
                        {
                            "id": "49096d52-b295-42e4-8ec9-bb85bb8717cf",
                            "name": "Returns an error if a resolution state is incompatible with the action\ntype of the task.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Looks good to me\",\n    \"resolution_state\": \"completed\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a8e93a8c-1d54-4a9d-8719-85e4017c06f4",
                            "name": "Returns an error when the task assignment could not be found or the user\ndoes not have access to the file the task is assigned to.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Looks good to me\",\n    \"resolution_state\": \"completed\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c7b0dc78-64ea-418b-ad48-9ab3d053bc4b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"message\": \"Looks good to me\",\n    \"resolution_state\": \"completed\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Unassign task",
                    "id": "06860379-af3e-409d-b004-86a3180899cb",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "task_assignments",
                                ":task_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "c75d74e5-e3d8-478a-a8ab-88632518385d",
                                    "key": "task_assignment_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task assignment."
                                }
                            ]
                        },
                        "description": "Deletes a specific task assignment."
                    },
                    "response": [
                        {
                            "id": "59e752ea-f657-47a9-95c5-60e7cbdcf8a7",
                            "name": "Returns an empty response when the task\nassignment was successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "bc24779e-6a62-4d63-a0ee-b1358f705571",
                            "name": "Returns an error if the task assignment for the given ID does not exist\nor is inaccessible to your account.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ef18a522-0717-4fdb-997a-912efe66b634",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/task_assignments/:task_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "task_assignments",
                                        ":task_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_assignment_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "730ead2a-7e7f-494d-b2ac-e9fa25ea131f"
        },
        {
            "name": "Tasks",
            "item": [
                {
                    "name": "List tasks on file",
                    "id": "16332c16-4d7a-4c43-8501-8b8ec990cec2",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/tasks",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "tasks"
                            ],
                            "variable": [
                                {
                                    "id": "4030b2bf-fb76-4631-84c4-0553ebf3d88e",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves a list of all the tasks for a file. This\nendpoint does not support pagination."
                    },
                    "response": [
                        {
                            "id": "e06294a0-cfdd-41d8-a969-b4523bcdc9af",
                            "name": "Returns a list of tasks on a file.\n\nIf there are no tasks on this file an empty collection is returned\ninstead.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "tasks"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"task\",\n   \"item\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   \"due_at\": \"2012-12-12T10:53:43-08:00\",\n   \"action\": \"review\",\n   \"message\": \"Legal review\",\n   \"task_assignment_collection\": {\n    \"total_count\": 100,\n    \"entries\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   \"is_completed\": true,\n   \"created_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"completion_rule\": \"all_assignees\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"task\",\n   \"item\": {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"file\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contract.pdf\",\n    \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n    \"file_version\": {}\n   },\n   \"due_at\": \"2012-12-12T10:53:43-08:00\",\n   \"action\": \"review\",\n   \"message\": \"Legal review\",\n   \"task_assignment_collection\": {\n    \"total_count\": 100,\n    \"entries\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   \"is_completed\": true,\n   \"created_by\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"completion_rule\": \"all_assignees\"\n  }\n ]\n}"
                        },
                        {
                            "id": "ebd29b61-f395-43ca-a321-34390e1c4b06",
                            "name": "Returns an error when the file could not be found or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "tasks"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0b0366fb-14d0-40a4-9afe-1ae1b58e2907",
                            "name": "Returns an error when the `file_id` was not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "tasks"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Method Not Allowed",
                            "code": 405,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "029abae2-c6b1-4a99-b252-e95f1a70b028",
                            "name": "Returns an error when an attempt was made to retrieve tasks for the file\nwith ID `0`.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "tasks"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f4d01bb2-2bd4-4d2b-8c4f-886d14f5de5a",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "tasks"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create task",
                    "id": "f0b3f702-e0ac-46c8-8007-eff596afe3e5",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks"
                            ]
                        },
                        "description": "Creates a single task on a file. This task is not assigned to any user and\nwill need to be assigned separately."
                    },
                    "response": [
                        {
                            "id": "d6682dcd-8b1c-41e5-b958-281c805186b8",
                            "name": "Returns the newly created task.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"due_at\": \"2012-12-12T10:53:43-08:00\",\n \"action\": \"review\",\n \"message\": \"Legal review\",\n \"task_assignment_collection\": {\n  \"total_count\": 100,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"is_completed\": true,\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"completion_rule\": \"all_assignees\"\n}"
                        },
                        {
                            "id": "3870b60a-b0a5-4699-904f-0f0d7298fb5e",
                            "name": "Returned if the request parameters or body is not valid.\n\n* `bad_request` when the body does not contain a valid request. This may\nbe because the `action` or `completion_rule` are not one of the allowed\nvalues.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "952e297d-995b-4719-8170-1f03bdbd0d4f",
                            "name": "Returns an error when the user does not have the permission to create a\ntask on the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "21c05452-f228-45ff-877f-2a22cdcc85a3",
                            "name": "Returns an error when the file could not be found or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7d272c88-1100-4d8c-8039-2a83f55b7f9c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"item\": {\n        \"id\": \"11446498\",\n        \"type\": \"file\"\n    },\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get task",
                    "id": "e3c896c7-4dfb-443c-86c2-9b69e7f1d61b",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/:task_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                ":task_id"
                            ],
                            "variable": [
                                {
                                    "id": "984c2df0-95b3-4520-ba3f-e8542d4ec20c",
                                    "key": "task_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task."
                                }
                            ]
                        },
                        "description": "Retrieves information about a specific task."
                    },
                    "response": [
                        {
                            "id": "914f3ec8-f4ea-427c-a03d-96a1a8dff588",
                            "name": "Returns a task object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"due_at\": \"2012-12-12T10:53:43-08:00\",\n \"action\": \"review\",\n \"message\": \"Legal review\",\n \"task_assignment_collection\": {\n  \"total_count\": 100,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"is_completed\": true,\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"completion_rule\": \"all_assignees\"\n}"
                        },
                        {
                            "id": "6add0a15-9b20-4cbf-a037-7940ba41ba06",
                            "name": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "acde9347-e4af-402b-9394-1a354367517b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update task",
                    "id": "c0c5264a-eef7-4766-94d3-fa76146dab72",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/tasks/:task_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                ":task_id"
                            ],
                            "variable": [
                                {
                                    "id": "0459b848-2963-4ddd-a6f1-c849c08e987e",
                                    "key": "task_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task."
                                }
                            ]
                        },
                        "description": "Updates a task. This can be used to update a task's configuration, or to\nupdate its completion state."
                    },
                    "response": [
                        {
                            "id": "0d5bbb7a-15f7-4706-98f0-cf175396a684",
                            "name": "Returns the updated task object",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"due_at\": \"2012-12-12T10:53:43-08:00\",\n \"action\": \"review\",\n \"message\": \"Legal review\",\n \"task_assignment_collection\": {\n  \"total_count\": 100,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"is_completed\": true,\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"completion_rule\": \"all_assignees\"\n}"
                        },
                        {
                            "id": "75eeab05-eebb-4394-aeb4-30eaa3b6ff83",
                            "name": "Returned if the request parameters or body is not valid.\n\n* `bad_request` when the body does not contain a valid request. This may\nbe because the `action` or `completion_rule` are not one of the allowed\nvalues.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "9d1b9c42-5844-4b80-ab05-933af017bf5f",
                            "name": "Returns an error when the user does not have the permission to update a\ntask on the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c1cd8905-2a74-4b8f-b6ba-e59e3c44319b",
                            "name": "Returns an error when the file could not be found or the user does not\nhave access to the file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ea1e6bd7-1a28-4e64-b4c0-c931ac0dbb30",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"action\": \"review\",\n    \"message\": \"Please review\",\n    \"due_at\": \"2012-12-12T10:53:43-08:00\",\n    \"completion_rule\": \"all_assignees\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove task",
                    "id": "082255bc-00aa-429d-a4fd-b9aedc3b9ef2",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/tasks/:task_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "tasks",
                                ":task_id"
                            ],
                            "variable": [
                                {
                                    "id": "a0553bb1-9ccd-4750-8454-4ace9a7897fc",
                                    "key": "task_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the task."
                                }
                            ]
                        },
                        "description": "Removes a task from a file."
                    },
                    "response": [
                        {
                            "id": "28973423-3754-4875-8793-c12b12deacc0",
                            "name": "Returns an empty response when the task was successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "cc803016-9413-4fbb-a1f8-7970fcb2a881",
                            "name": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "630c1bb8-b967-49ea-9b36-0c58a781f351",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/tasks/:task_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "tasks",
                                        ":task_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "task_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the task."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "93d64543-cdd2-4c00-a655-b5e922001198"
        },
        {
            "name": "Terms of service",
            "item": [
                {
                    "name": "List terms of services",
                    "id": "6b54ebd4-d64b-4b47-b6bf-d6170a067624",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_services?tos_type=managed",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_services"
                            ],
                            "query": [
                                {
                                    "key": "tos_type",
                                    "value": "managed",
                                    "description": "Limits the results to the terms of service of the given type."
                                }
                            ]
                        },
                        "description": "Returns the current terms of service text and settings\nfor the enterprise."
                    },
                    "response": [
                        {
                            "id": "c9d1d016-ba58-4749-abb1-3fa576149de3",
                            "name": "Returns a collection of terms of service text and settings for the\nenterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services?tos_type=managed",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services"
                                    ],
                                    "query": [
                                        {
                                            "key": "tos_type",
                                            "value": "managed"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 2,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"terms_of_service\",\n   \"status\": \"enabled\",\n   \"enterprise\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"tos_type\": \"managed\",\n   \"text\": \"By using this service, you agree to ...\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"terms_of_service\",\n   \"status\": \"enabled\",\n   \"enterprise\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"tos_type\": \"managed\",\n   \"text\": \"By using this service, you agree to ...\",\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "6b07ac01-ceee-4f43-a1c1-b1fa33b2ff63",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services?tos_type=managed",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services"
                                    ],
                                    "query": [
                                        {
                                            "key": "tos_type",
                                            "value": "managed"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create terms of service",
                    "id": "f4537749-6582-4edf-8bf2-52b7ce3a095b",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"status\": \"enabled\",\n    \"text\": \"By collaborating on this file you are accepting...\",\n    \"tos_type\": \"managed\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_services",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_services"
                            ]
                        },
                        "description": "Creates a terms of service for a given enterprise\nand type of user."
                    },
                    "response": [
                        {
                            "id": "d1ed54d9-475d-4810-984b-6e45a539722b",
                            "name": "Returns a new task object",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"enabled\",\n    \"text\": \"By collaborating on this file you are accepting...\",\n    \"tos_type\": \"managed\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"task\",\n \"item\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"file\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contract.pdf\",\n  \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n  \"file_version\": {}\n },\n \"due_at\": \"2012-12-12T10:53:43-08:00\",\n \"action\": \"review\",\n \"message\": \"Legal review\",\n \"task_assignment_collection\": {\n  \"total_count\": 100,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"is_completed\": true,\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"completion_rule\": \"all_assignees\"\n}"
                        },
                        {
                            "id": "825004f2-0f9c-4282-a37b-1a7768a41e27",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"enabled\",\n    \"text\": \"By collaborating on this file you are accepting...\",\n    \"tos_type\": \"managed\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get terms of service",
                    "id": "f5d93597-8440-4231-a5cc-7f31e1999fd9",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_services/:terms_of_service_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_services",
                                ":terms_of_service_id"
                            ],
                            "variable": [
                                {
                                    "id": "2b9acba5-3133-417c-874d-b8496a407b0e",
                                    "key": "terms_of_service_id",
                                    "value": "324234",
                                    "description": "(Required) The ID of the terms of service."
                                }
                            ]
                        },
                        "description": "Fetches a specific terms of service."
                    },
                    "response": [
                        {
                            "id": "ea788547-65a1-4567-b775-ed6109568e4f",
                            "name": "Returns a terms of service object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services/:terms_of_service_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services",
                                        ":terms_of_service_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "terms_of_service_id",
                                            "value": "324234",
                                            "description": "(Required) The ID of the terms of service."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"terms_of_service\",\n \"status\": \"enabled\",\n \"enterprise\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"tos_type\": \"managed\",\n \"text\": \"By using this service, you agree to ...\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "a1f402e0-8b4f-48ce-b4d2-419673c89dac",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services/:terms_of_service_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services",
                                        ":terms_of_service_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "terms_of_service_id",
                                            "value": "324234",
                                            "description": "(Required) The ID of the terms of service."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update terms of service",
                    "id": "eec35e3a-10f5-417d-97b9-406b77144e41",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"status\": \"enabled\",\n    \"text\": \"By collaborating on this file you are accepting...\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_services/:terms_of_service_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_services",
                                ":terms_of_service_id"
                            ],
                            "variable": [
                                {
                                    "id": "b3116afb-008d-483b-80ae-394d2c6eb6da",
                                    "key": "terms_of_service_id",
                                    "value": "324234",
                                    "description": "(Required) The ID of the terms of service."
                                }
                            ]
                        },
                        "description": "Updates a specific terms of service."
                    },
                    "response": [
                        {
                            "id": "7a292b75-b094-4389-85af-e5baf2a87777",
                            "name": "Returns an updated terms of service object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"enabled\",\n    \"text\": \"By collaborating on this file you are accepting...\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services/:terms_of_service_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services",
                                        ":terms_of_service_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "terms_of_service_id",
                                            "value": "324234",
                                            "description": "(Required) The ID of the terms of service."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"terms_of_service\",\n \"status\": \"enabled\",\n \"enterprise\": {\n  \"id\": \"11446498\",\n  \"type\": \"enterprise\",\n  \"name\": \"Acme Inc.\"\n },\n \"tos_type\": \"managed\",\n \"text\": \"By using this service, you agree to ...\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "ebf1530c-f749-4653-bba1-1d4085bc28ff",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"status\": \"enabled\",\n    \"text\": \"By collaborating on this file you are accepting...\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_services/:terms_of_service_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_services",
                                        ":terms_of_service_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "terms_of_service_id",
                                            "value": "324234",
                                            "description": "(Required) The ID of the terms of service."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "db9d6d3d-c0ab-469a-8b51-ab01ac6eeb58"
        },
        {
            "name": "Terms of service user statuses",
            "item": [
                {
                    "name": "List terms of service user statuses",
                    "id": "a3912518-4f3c-441d-a6c4-a7348e3e6fcc",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_service_user_statuses?tos_id=324234&user_id=123334",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_service_user_statuses"
                            ],
                            "query": [
                                {
                                    "key": "tos_id",
                                    "value": "324234",
                                    "description": "(Required) The ID of the terms of service."
                                },
                                {
                                    "key": "user_id",
                                    "value": "123334",
                                    "description": "Limits results to the given user ID."
                                }
                            ]
                        },
                        "description": "Retrieves an overview of users and their status for a\nterms of service, including Whether they have accepted\nthe terms and when."
                    },
                    "response": [
                        {
                            "id": "638359f7-e3d5-40f6-8c80-586f8b8dd487",
                            "name": "Returns a list of terms of service statuses.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_service_user_statuses?tos_id=324234&user_id=123334",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_service_user_statuses"
                                    ],
                                    "query": [
                                        {
                                            "key": "tos_id",
                                            "value": "324234"
                                        },
                                        {
                                            "key": "user_id",
                                            "value": "123334"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 2,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"terms_of_service_user_status\",\n   \"tos\": {},\n   \"user\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"is_accepted\": true,\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"terms_of_service_user_status\",\n   \"tos\": {},\n   \"user\": {\n    \"id\": \"11446498\",\n    \"type\": \"user\",\n    \"name\": \"Aaron Levie\",\n    \"login\": \"ceo@example.com\"\n   },\n   \"is_accepted\": true,\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n  }\n ]\n}"
                        },
                        {
                            "id": "b883c280-830b-4314-a9d9-86be0d9aefea",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_service_user_statuses?tos_id=324234&user_id=123334",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_service_user_statuses"
                                    ],
                                    "query": [
                                        {
                                            "key": "tos_id",
                                            "value": "324234"
                                        },
                                        {
                                            "key": "user_id",
                                            "value": "123334"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create terms of service status for new user",
                    "id": "5fc4aacc-7bd2-429d-a1cb-03fa44065589",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"tos\": {\n        \"id\": \"1232132\",\n        \"type\": \"terms_of_service\"\n    },\n    \"user\": {\n        \"id\": \"3423423\",\n        \"type\": \"user\"\n    },\n    \"is_accepted\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_service_user_statuses",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_service_user_statuses"
                            ]
                        },
                        "description": "Sets the status for a terms of service for a user."
                    },
                    "response": [
                        {
                            "id": "1b7ed8be-f0e3-4adb-9fab-7fe2ed5f71f0",
                            "name": "Returns a terms of service status object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"tos\": {\n        \"id\": \"1232132\",\n        \"type\": \"terms_of_service\"\n    },\n    \"user\": {\n        \"id\": \"3423423\",\n        \"type\": \"user\"\n    },\n    \"is_accepted\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_service_user_statuses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_service_user_statuses"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"terms_of_service_user_status\",\n \"tos\": {\n  \"id\": \"11446498\",\n  \"type\": \"terms_of_service\"\n },\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"is_accepted\": true,\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "c6903df3-6ce2-4c79-978f-56479b099e16",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"tos\": {\n        \"id\": \"1232132\",\n        \"type\": \"terms_of_service\"\n    },\n    \"user\": {\n        \"id\": \"3423423\",\n        \"type\": \"user\"\n    },\n    \"is_accepted\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_service_user_statuses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_service_user_statuses"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update terms of service status for existing user",
                    "id": "b38b25fa-0974-49b5-891b-ac84c2634f69",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"is_accepted\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/terms_of_service_user_statuses/:terms_of_service_user_status_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "terms_of_service_user_statuses",
                                ":terms_of_service_user_status_id"
                            ],
                            "variable": [
                                {
                                    "id": "8b1b4e32-3ea1-4f62-8235-0761aefbaec4",
                                    "key": "terms_of_service_user_status_id",
                                    "value": "324234",
                                    "description": "(Required) The ID of the terms of service status."
                                }
                            ]
                        },
                        "description": "Updates the status for a terms of service for a user."
                    },
                    "response": [
                        {
                            "id": "35455ef6-aa8b-4212-afee-f107aa35b9d7",
                            "name": "Returns the updated terms of service status object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"is_accepted\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_service_user_statuses/:terms_of_service_user_status_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_service_user_statuses",
                                        ":terms_of_service_user_status_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "terms_of_service_user_status_id",
                                            "value": "324234",
                                            "description": "(Required) The ID of the terms of service status."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"terms_of_service_user_status\",\n \"tos\": {\n  \"id\": \"11446498\",\n  \"type\": \"terms_of_service\"\n },\n \"user\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"is_accepted\": true,\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n}"
                        },
                        {
                            "id": "f6cd57c0-8666-4453-8aca-5ad6f5aeda16",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"is_accepted\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/terms_of_service_user_statuses/:terms_of_service_user_status_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "terms_of_service_user_statuses",
                                        ":terms_of_service_user_status_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "terms_of_service_user_status_id",
                                            "value": "324234",
                                            "description": "(Required) The ID of the terms of service status."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "43d74414-ec2c-421a-bfaf-662eeb631b0d"
        },
        {
            "name": "Transfer folders",
            "item": [
                {
                    "name": "Transfer owned folders",
                    "id": "7619f9c0-1ac1-4288-8f6e-f8bb12b3b30e",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"owned_by\": {\n        \"id\": \"1232234\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id/folders/0?fields=id,type,name&notify=true",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id",
                                "folders",
                                "0"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "notify",
                                    "value": "true",
                                    "description": "Determines if users should receive email notification\nfor the action performed."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "81e4828c-e7bf-48e3-91cc-7fc1761c2179",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Move all of the items (files, folders and workflows) owned by a user into\nanother user's account\n\nOnly the root folder (`0`) can be transferred.\n\nFolders can only be moved across users by users with administrative\npermissions.\n\nAll existing shared links and folder-level collaborations are transferred\nduring the operation. Please note that while collaborations at the individual\nfile-level are transferred during the operation, the collaborations are\ndeleted when the original user is deleted.\n\nThis call will be performed synchronously which might lead to a slow response\nwhen the source user has a large number of items in all of its folders.\n\nIf the destination path has a metadata cascade policy attached to any of\nthe parent folders, a metadata cascade operation will be kicked off\nasynchronously.\n\nThere is currently no way to check for when this operation is finished.\n\nThe destination folder's name will be in the format `{User}'s Files and\nFolders`, where `{User}` is the display name of the user.\n\nTo make this API call your application will need to have the \"Read and write\nall files and folders stored in Box\" scope enabled.\n\nPlease make sure the destination user has access to `Relay` or `Relay Lite`,\nand has access to the files and folders involved in the workflows being\ntransferred.\n\nAdmins will receive an email when the operation is completed."
                    },
                    "response": [
                        {
                            "id": "65a80734-4015-49ac-937e-b2d93fc9df55",
                            "name": "Returns the information for the newly created\ndestination folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"owned_by\": {\n        \"id\": \"1232234\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/folders/0?fields=id,type,name&notify=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "folders",
                                        "0"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "notify",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "7d59c4b8-72ac-4d9a-b2d6-39c6c9a0353f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"owned_by\": {\n        \"id\": \"1232234\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/folders/0?fields=id,type,name&notify=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "folders",
                                        "0"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "notify",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "01ec7359-ff74-4e89-9b52-e007fbfbf021"
        },
        {
            "name": "Trashed files",
            "item": [
                {
                    "name": "Restore file",
                    "id": "74404812-cb62-4c33-a519-0ed0a36ca39d",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "bfdb4fbe-3490-44fe-9b4c-eb1732be0c0b",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Restores a file that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the file to in case the\noriginal folder has been deleted."
                    },
                    "response": [
                        {
                            "id": "145ad943-5449-4e5f-be7b-c917cd55f036",
                            "name": "Returns a file object when the file has been restored.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"file\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contract.pdf\",\n \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n \"file_version\": {},\n \"description\": \"Contract for Q1 renewal\",\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"parent\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "27d33b3e-69ab-4fda-9834-a4cde703c5d7",
                            "name": "Returns an error if the user does not have access to the folder\nthe file is being restored to, or the user does not have permission\nto restore files from the trash.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "82891370-6067-4fb2-b85b-01049126d2e5",
                            "name": "Returns an error if the file is not in the trash.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c1d136d3-2286-4cba-894d-f0edf8f170be",
                            "name": "Returns an error if there is an file with the same name\nin the folder the file is being restored to.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "95e4c0ec-4428-444a-8149-45ad117b3ab3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get trashed file",
                    "id": "a199cd9d-a22e-4c40-b922-2643a6cbf2e3",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/trash?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "trash"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "29c17a74-b415-4b86-a2b3-0bce16746efe",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieves a file that has been moved to the trash.\n\nPlease note that only if the file itself has been moved to the\ntrash can it be retrieved with this API call. If instead one of\nits parent folders was moved to the trash, only that folder\ncan be inspected using the\n[`GET /folders/:id/trash`](e://get_folders_id_trash) API.\n\nTo list all items that have been moved to the trash, please\nuse the [`GET /folders/trash/items`](e://get-folders-trash-items/)\nAPI."
                    },
                    "response": [
                        {
                            "id": "3f2bb508-413e-454a-a89b-68e480917736",
                            "name": "Returns the file that was trashed,\nincluding information about when the it\nwas moved to the trash.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"file\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contract.pdf\",\n \"sha1\": \"85136C79CBF9FE36BB9D05D0639C70C265C18D37\",\n \"file_version\": {},\n \"description\": \"Contract for Q1 renewal\",\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   },\n   {\n    \"id\": \"12345\",\n    \"etag\": \"1\",\n    \"type\": \"folder\",\n    \"sequence_id\": {\n     \"value\": \"<Error: Could not resolve allOf schema\"\n    },\n    \"name\": \"Contracts\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"parent\": {\n  \"id\": \"12345\",\n  \"etag\": \"1\",\n  \"type\": \"folder\",\n  \"sequence_id\": {\n   \"value\": \"<Error: Could not resolve allOf schema\"\n  },\n  \"name\": \"Contracts\"\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "971c7ca3-88aa-4f86-aaeb-f87b4d3c4ad5",
                            "name": "Returns an error if the file can not be found directly\nin the trash.\n\nPlease note that a `HTTP 404` is also returned if any of\nthe file's parent folders have been moved to the trash.\n\nIn that case, only that parent folder can be inspected using\nthe [`GET ",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c7ff1fc4-34ee-4ced-9eb7-a1d064eb59d3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Permanently remove file",
                    "id": "6276eaf0-a4dd-4b79-b955-328decd399a7",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/trash",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "trash"
                            ],
                            "variable": [
                                {
                                    "id": "2d857960-c5df-490f-8efb-081e6e0d9291",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Permanently deletes a file that is in the trash.\nThis action cannot be undone."
                    },
                    "response": [
                        {
                            "id": "0946e465-02b5-4bb7-b4fb-ed1539c1e93c",
                            "name": "Returns an empty response when the file was\npermanently deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "66f64dfb-10a6-41e8-82b8-e0b42a39de05",
                            "name": "Returns an error if the file is not in the trash.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3cffe09d-e7f6-43ba-ac3c-d12ee8d66aff",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "940c5897-723e-4dce-a4c6-67f1a10d32e1"
        },
        {
            "name": "Trashed folders",
            "item": [
                {
                    "name": "Restore folder",
                    "id": "1cead134-1f48-4c75-9928-c3412b1775f1",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Restored Photos\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "28d7eeff-24ba-43e0-992e-8c70deb90fda",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Restores a folder that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the folder to in case the\noriginal folder has been deleted.\n\n# Folder locking\n\nDuring this operation, part of the file tree will be locked, mainly\nthe source folder and all of its descendants, as well as the destination\nfolder.\n\nFor the duration of the operation, no other move, copy, delete, or restore\noperation can performed on any of the locked folders."
                    },
                    "response": [
                        {
                            "id": "0762f8c2-25a3-4ac8-a6dc-cf0c0f437cc9",
                            "name": "Returns a folder object when the folder has been restored.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored Photos\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "ea55ef78-36cd-4b11-b609-19ae6792978b",
                            "name": "Returns an error if the user does not have access to the folder\nthe folder is being restored to, or the user does not have permission\nto restore folders from the trash.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored Photos\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "fc5c61c0-404b-4566-b5b3-3a2ebf0b85b1",
                            "name": "Returns an error if the folder is not in the trash.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored Photos\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "c06a4223-d94a-439d-baf9-99149129ad6a",
                            "name": "* Returned an error if there is a folder with the same name\n  in the destination folder.\n\n* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in proc",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored Photos\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "b87f8205-52da-4c9a-8166-6fc81d615599",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored Photos\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get trashed folder",
                    "id": "460efc57-eb92-4164-b13f-f3c4a80c7d6a",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/trash?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "trash"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "f185e86d-3620-4895-a760-1871efddc77f",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieves a folder that has been moved to the trash.\n\nPlease note that only if the folder itself has been moved to the\ntrash can it be retrieved with this API call. If instead one of\nits parent folders was moved to the trash, only that folder\ncan be inspected using the\n[`GET /folders/:id/trash`](e://get_folders_id_trash) API.\n\nTo list all items that have been moved to the trash, please\nuse the [`GET /folders/trash/items`](e://get-folders-trash-items/)\nAPI."
                    },
                    "response": [
                        {
                            "id": "1012d0e4-e92b-4a6a-af81-b731bc754547",
                            "name": "Returns the folder that was trashed,\nincluding information about when the it\nwas moved to the trash.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "f69de25a-ca35-436d-aca5-d2ec18faef00",
                            "name": "Returns an error if the folder can not be found directly\nin the trash.\n\nPlease note that a `HTTP 404` is also returned if any of\nthe folder's parent folders have been moved to the trash.\n\nIn that case, only that parent folder can be inspected using\nthe [`",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "88cd2c14-8d4b-4c66-91d2-f1fc604f674d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Permanently remove folder",
                    "id": "2156427e-60b0-476e-8123-9a9b789f90ec",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/trash",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "trash"
                            ],
                            "variable": [
                                {
                                    "id": "e1285bbf-a6e4-494d-9cac-bef5ab4a166a",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Permanently deletes a folder that is in the trash.\nThis action cannot be undone."
                    },
                    "response": [
                        {
                            "id": "3b52809c-3fb6-46ed-8f68-cc7a79158a13",
                            "name": "Returns an empty response when the folder was\npermanently deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "e49fa038-acfd-40b1-89c2-333c8a07cd90",
                            "name": "Returns an error if the folder is not in the trash.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4e5d34ef-1f45-4fc7-9f5c-3e0e88b0954f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "b511e04b-f30c-4bbe-96bd-d48a4da06ef6"
        },
        {
            "name": "Trashed items",
            "item": [
                {
                    "name": "List trashed items",
                    "id": "cbf4c3e0-a9f0-4e0c-bc45-2271ba72f897",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/trash/items?fields=id,type,name&limit=1000&offset=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&direction=ASC&sort=id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                "trash",
                                "items"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "usemarker",
                                    "value": "true",
                                    "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "direction",
                                    "value": "ASC",
                                    "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order."
                                },
                                {
                                    "key": "sort",
                                    "value": "id",
                                    "description": "Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported when using marker-based pagination."
                                }
                            ]
                        },
                        "description": "Retrieves the files and folders that have been moved\nto the trash.\n\nAny attribute in the full files or folders objects can be passed\nin with the `fields` parameter to retrieve those specific\nattributes that are not returned by default.\n\nThis endpoint defaults to use offset-based pagination, yet also supports\nmarker-based pagination using the `marker` parameter."
                    },
                    "response": [
                        {
                            "id": "a3d4a4d0-6795-46df-ac52-37285c017fae",
                            "name": "Returns a list of items that have been deleted",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/trash/items?fields=id,type,name&limit=1000&offset=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&direction=ASC&sort=id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "trash",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
                        },
                        {
                            "id": "6bb81d39-ccad-4377-a0df-4ed70297f8b0",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `invalid_parameter` can appear when the `sort`, `direction` or `offset`\nparameter is provided when using marker based pagination, or when the\n`marker` parameter is provided but `usema",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/trash/items?fields=id,type,name&limit=1000&offset=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&direction=ASC&sort=id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "trash",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "d16f8724-0313-493e-a1a3-779541bbc737",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/trash/items?fields=id,type,name&limit=1000&offset=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&direction=ASC&sort=id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        "trash",
                                        "items"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "direction",
                                            "value": "ASC"
                                        },
                                        {
                                            "key": "sort",
                                            "value": "id"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "bc20c0d3-96bd-48dd-a7c3-e709d075a4af"
        },
        {
            "name": "Trashed web links",
            "item": [
                {
                    "name": "Restore web link",
                    "id": "933d9f08-259e-4488-8c1d-9045671bfab7",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/web_links/:web_link_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links",
                                ":web_link_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "5f1d79c1-5d9e-4bfd-87a6-2c86fc253d46",
                                    "key": "web_link_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the web link."
                                }
                            ]
                        },
                        "description": "Restores a web link that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the  web link to in case\nthe original folder has been deleted."
                    },
                    "response": [
                        {
                            "id": "5c399d92-4764-4048-abd7-1728be7a35dd",
                            "name": "Returns a web link object when it has been restored.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"web_link\",\n \"etag\": \"1\",\n \"url\": \"https://www.example.com/example/1234\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"My Bookmark\",\n \"parent\": {\n  \"sequence_id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"description\": \"Example page\",\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "6eaf7801-7640-4d91-b3bc-a06580fbad81",
                            "name": "Returns an error if the user does not have access to the folder\nthe web link is being restored to, or the user does not have permission\nto restore web link from the trash.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8649f617-531a-4305-b238-2827fbe988d7",
                            "name": "Returns an error if the web link is not in the trash.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "29c66cbe-62b8-4097-8a52-b40baf226f6e",
                            "name": "Returns an error if there is an web link with the same name\nin the folder the web link is being restored to.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "85edcc85-b87d-4da1-8e9e-e2e14f74042d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Restored.docx\",\n    \"parent\": {\n        \"id\": \"123\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get trashed web link",
                    "id": "00fe7a76-8a73-4292-adc5-cb2296d50c0e",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/web_links/:web_link_id/trash?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links",
                                ":web_link_id",
                                "trash"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "fede6a49-090b-4b15-8adf-10d0a74527c1",
                                    "key": "web_link_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the web link."
                                }
                            ]
                        },
                        "description": "Retrieves a web link that has been moved to the trash."
                    },
                    "response": [
                        {
                            "id": "f94039c4-5fbf-4e43-861a-5e986af62d7c",
                            "name": "Returns the web link that was trashed,\nincluding information about when the it\nwas moved to the trash.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"12345\",\n \"etag\": \"1\",\n \"type\": \"folder\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"Contracts\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"description\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"size\": 629644,\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/Folder--Mini detected>\"\n   }\n  ]\n },\n \"created_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"modified_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"owned_by\": {\n  \"id\": \"11446498\",\n  \"type\": \"user\",\n  \"name\": \"Aaron Levie\",\n  \"login\": \"ceo@example.com\"\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"folder_upload_email\": {\n  \"access\": \"open\",\n  \"email\": \"upload.Contracts.asd7asd@u.box.com\"\n },\n \"parent\": {},\n \"item_status\": \"active\",\n \"item_collection\": {\n  \"total_count\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"limit\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"offset\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"entries\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n}"
                        },
                        {
                            "id": "2d1b370f-429a-4c8f-88f7-970eade08420",
                            "name": "Returns an error if the web link is not in the trash.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "293c8e4d-75c4-4018-822f-8fb755aec110",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id/trash?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id",
                                        "trash"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Permanently remove web link",
                    "id": "dd1a7ed7-2d4f-4dde-8226-f40f1b26c7fe",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/web_links/:web_link_id/trash",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links",
                                ":web_link_id",
                                "trash"
                            ],
                            "variable": [
                                {
                                    "id": "5fad3fc7-4f32-4da7-8a64-4836d4ce8da7",
                                    "key": "web_link_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the web link."
                                }
                            ]
                        },
                        "description": "Permanently deletes a web link that is in the trash.\nThis action cannot be undone."
                    },
                    "response": [
                        {
                            "id": "15507dcf-d56c-4e79-90b6-fa6783f4b438",
                            "name": "Returns an empty response when the web link was\npermanently deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "88a6ac79-a0a9-4040-89d4-5b0e96844f06",
                            "name": "Returns an error if the web link is not in the trash.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "73f36c89-76ec-4069-b5e9-af20c3feaeb0",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id/trash",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id",
                                        "trash"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "e3388c81-2cde-460b-bdd9-d6f4dbd5c2c2"
        },
        {
            "name": "Uploads",
            "item": [
                {
                    "name": "Upload file version",
                    "id": "e1cb5ad1-e7df-446c-8b3a-dd1b6eb6d611",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            },
                            {
                                "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                "key": "content-md5",
                                "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                            },
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "attributes",
                                    "value": "{\"name\":\"Photo 2.0.png\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                    "type": "text",
                                    "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>"
                                },
                                {
                                    "key": "file",
                                    "type": "file",
                                    "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                    "value": null
                                }
                            ]
                        },
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/:file_id/content?fields=id,type,name",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                ":file_id",
                                "content"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "9fafd630-2c27-4162-aa77-1ad5345cf797",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Update a file's content. For file sizes over 50MB we recommend\nusing the Chunk Upload APIs.\n\n# Request body order\n\nThe `attributes` part of the body must come **before** the\n`file` part. Requests that do not follow this format when\nuploading the file will receive a HTTP `400` error with a\n`metadata_after_file_contents` error code."
                    },
                    "response": [
                        {
                            "id": "0a7cc6c0-a2da-4874-a668-56a7af7af3ae",
                            "name": "Returns the new file object in a list.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                        "key": "content-md5",
                                        "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "attributes",
                                            "value": "{\"name\":\"Photo 2.0.png\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                            "type": "text"
                                        },
                                        {
                                            "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "file",
                                            "type": "file"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/:file_id/content?fields=id,type,name",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        ":file_id",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 1,\n \"entries\": [\n  {\n   \"description\": \"Contract for Q1 renewal\",\n   \"size\": 629644,\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": \"active\"\n  },\n  {\n   \"description\": \"Contract for Q1 renewal\",\n   \"size\": 629644,\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": \"active\"\n  }\n ]\n}"
                        },
                        {
                            "id": "148b83d2-2b74-40ac-b03c-fdfbbf156974",
                            "name": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                        "key": "content-md5",
                                        "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "attributes",
                                            "value": "{\"name\":\"Photo 2.0.png\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                            "type": "text"
                                        },
                                        {
                                            "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "file",
                                            "type": "file"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/:file_id/content?fields=id,type,name",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        ":file_id",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "df914f61-8bc2-4c38-8e0a-8d24b057cbc8",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                        "key": "content-md5",
                                        "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "attributes",
                                            "value": "{\"name\":\"Photo 2.0.png\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                            "type": "text"
                                        },
                                        {
                                            "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "file",
                                            "type": "file"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/:file_id/content?fields=id,type,name",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        ":file_id",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Upload file",
                    "id": "03fdd7e8-2e7c-48bb-b9e7-595cb3e3241d",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                "key": "content-md5",
                                "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                            },
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "attributes",
                                    "value": "{\"name\":\"Photo.png\",\"parent\":{\"id\":\"124132\"},\"content_created_at\":\"2012-12-12T10:53:43-08:00\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                    "type": "text",
                                    "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>"
                                },
                                {
                                    "key": "file",
                                    "type": "file",
                                    "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                    "value": null
                                }
                            ]
                        },
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/content?fields=id,type,name",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "content"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Uploads a small file to Box. For file sizes over 50MB we recommend\nusing the Chunk Upload APIs.\n\n# Request body order\n\nThe `attributes` part of the body must come **before** the\n`file` part. Requests that do not follow this format when\nuploading the file will receive a HTTP `400` error with a\n`metadata_after_file_contents` error code."
                    },
                    "response": [
                        {
                            "id": "eabee357-9031-465d-a956-a5fd2a23dc16",
                            "name": "Returns the new file object in a list.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                        "key": "content-md5",
                                        "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "attributes",
                                            "value": "{\"name\":\"Photo.png\",\"parent\":{\"id\":\"124132\"},\"content_created_at\":\"2012-12-12T10:53:43-08:00\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                            "type": "text"
                                        },
                                        {
                                            "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "file",
                                            "type": "file"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/content?fields=id,type,name",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 1,\n \"entries\": [\n  {\n   \"description\": \"Contract for Q1 renewal\",\n   \"size\": 629644,\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": \"active\"\n  },\n  {\n   \"description\": \"Contract for Q1 renewal\",\n   \"size\": 629644,\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": \"active\"\n  }\n ]\n}"
                        },
                        {
                            "id": "e7d4add9-362a-42fa-8eca-6f399f1b42aa",
                            "name": "Returns an error if the file already exists,\nor the account has run out of disk space.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                        "key": "content-md5",
                                        "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "attributes",
                                            "value": "{\"name\":\"Photo.png\",\"parent\":{\"id\":\"124132\"},\"content_created_at\":\"2012-12-12T10:53:43-08:00\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                            "type": "text"
                                        },
                                        {
                                            "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "file",
                                            "type": "file"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/content?fields=id,type,name",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7c6e9d02-d416-48b7-99c1-9ca1e76fa074",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
                                        "key": "content-md5",
                                        "value": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": "(Required) The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "attributes",
                                            "value": "{\"name\":\"Photo.png\",\"parent\":{\"id\":\"124132\"},\"content_created_at\":\"2012-12-12T10:53:43-08:00\",\"content_modified_at\":\"2012-12-12T10:53:43-08:00\"}",
                                            "type": "text"
                                        },
                                        {
                                            "description": "(Required) The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
                                            "key": "file",
                                            "type": "file"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/content?fields=id,type,name",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "content"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "e32fd747-9e2f-49a1-8704-ada11fa7e2b4"
        },
        {
            "name": "Uploads (Chunked)",
            "item": [
                {
                    "name": "Create upload session",
                    "id": "80f652fd-103b-40d5-938d-32dcf94690c9",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "upload_sessions"
                            ]
                        },
                        "description": "Creates an upload session for a new file."
                    },
                    "response": [
                        {
                            "id": "98c8e74c-a9b2-4a89-8f38-a0bd7be83230",
                            "name": "Returns a new upload session.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"F971964745A5CD0C001BBE4E58196BFD\",\n \"type\": \"upload_session\",\n \"session_expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"part_size\": 1024,\n \"total_parts\": 1000,\n \"num_parts_processed\": 455,\n \"session_endpoints\": {\n  \"upload_part\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"commit\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit\",\n  \"abort\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"list_parts\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts\",\n  \"status\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"log_event\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log\"\n }\n}"
                        },
                        {
                            "id": "a752c432-ffb7-426b-9eae-a932b5d8e483",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `missing_destination`: No `folder_id` was provided\n* `invalid_folder_id`: `folder_id` is not valid\n* `item_name_invalid`: `file_name` is not valid\n* `missing_file_size`: `file_size` w",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "26ff214b-c100-424f-b438-6bfbe3fbc8f0",
                            "name": "Returns an error if the operation is not allowed for some reason.\n\n* `storage_limit_exceeded`: Account storage limit reached",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8800d15d-1a9b-40f7-80f6-be94968adea7",
                            "name": "Returns an error if the parent folder could not be found, or\nthe authenticated user does not have access to it.\n\n* `invalid_parameter`: The `folder_id` value represents a\n  folder that the user does not have access to, or does not\n  exist.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "724da057-1f5b-4016-9c3b-66a6fe4360b5",
                            "name": "Returns an error if the file already exists,\nor the account has run out of disk space.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "55f25a65-b55e-49cf-82cb-1502808e2f64",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"folder_id\": \"0\",\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create upload session for existing file",
                    "id": "0f50088c-fdda-4894-a238-fa4655091b8d",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/:file_id/upload_sessions",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                ":file_id",
                                "upload_sessions"
                            ],
                            "variable": [
                                {
                                    "id": "15312f13-c650-40a9-b559-05d997ecde64",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Creates an upload session for an existing file."
                    },
                    "response": [
                        {
                            "id": "c7e95745-8793-4295-aa0f-cb796be0dfec",
                            "name": "Returns a new upload session.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/:file_id/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        ":file_id",
                                        "upload_sessions"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"F971964745A5CD0C001BBE4E58196BFD\",\n \"type\": \"upload_session\",\n \"session_expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"part_size\": 1024,\n \"total_parts\": 1000,\n \"num_parts_processed\": 455,\n \"session_endpoints\": {\n  \"upload_part\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"commit\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit\",\n  \"abort\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"list_parts\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts\",\n  \"status\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"log_event\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log\"\n }\n}"
                        },
                        {
                            "id": "84de6b5f-ce00-4bfd-9361-e38ab5873d23",
                            "name": "Returns an error if the file already exists,\nor if the account has run out of disk space.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/:file_id/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        ":file_id",
                                        "upload_sessions"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "02ce75be-a6b1-45eb-a0da-192c4724f8f3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"file_size\": 104857600,\n    \"file_name\": \"Project.mov\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/:file_id/upload_sessions",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        ":file_id",
                                        "upload_sessions"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get upload session",
                    "id": "7316db19-d25c-490b-ade6-0d3fcde30527",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "upload_sessions",
                                ":upload_session_id"
                            ],
                            "variable": [
                                {
                                    "id": "d82edaca-e04b-4024-884f-cc21cb224fab",
                                    "key": "upload_session_id",
                                    "value": "D5E3F7A",
                                    "description": "(Required) The ID of the upload session."
                                }
                            ]
                        },
                        "description": "Return information about an upload session."
                    },
                    "response": [
                        {
                            "id": "99f82c86-dabb-462c-ad2d-986c95da5ea5",
                            "name": "Returns an upload session object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"F971964745A5CD0C001BBE4E58196BFD\",\n \"type\": \"upload_session\",\n \"session_expires_at\": \"2012-12-12T10:53:43-08:00\",\n \"part_size\": 1024,\n \"total_parts\": 1000,\n \"num_parts_processed\": 455,\n \"session_endpoints\": {\n  \"upload_part\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"commit\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit\",\n  \"abort\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"list_parts\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts\",\n  \"status\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD\",\n  \"log_event\": \"https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log\"\n }\n}"
                        },
                        {
                            "id": "1eebe23a-e08c-473a-8a4c-2838100959e3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Upload part of file",
                    "id": "190d308e-2218-4a5c-92ed-52f78355d676",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "description": "(Required) The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                "key": "digest",
                                "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                            },
                            {
                                "description": "(Required) The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
                                "key": "content-range",
                                "value": "bytes 8388608-16777215/445856194"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/octet-stream"
                            }
                        ],
                        "body": {
                            "mode": "file",
                            "file": {}
                        },
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "upload_sessions",
                                ":upload_session_id"
                            ],
                            "variable": [
                                {
                                    "id": "fb4d6eb3-0bcb-4efb-a89f-34057cd3ad65",
                                    "key": "upload_session_id",
                                    "value": "D5E3F7A",
                                    "description": "(Required) The ID of the upload session."
                                }
                            ]
                        },
                        "description": "Updates a chunk of an upload session for a file."
                    },
                    "response": [
                        {
                            "id": "77cc62a2-74d2-489a-9f7a-6c019092810d",
                            "name": "Chunk has been uploaded successfully.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "(Required) The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
                                        "key": "content-range",
                                        "value": "bytes 8388608-16777215/445856194"
                                    }
                                ],
                                "body": {
                                    "mode": "file",
                                    "file": {}
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"part\": {\n  \"part_id\": \"6F2D3486\",\n  \"offset\": 16777216,\n  \"size\": 3222784,\n  \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n }\n}"
                        },
                        {
                            "id": "997c9386-2a22-4c6b-9d1c-eeed90d02ded",
                            "name": "Returns an error if the chunk conflicts with another\nchunk previously uploaded.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "(Required) The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
                                        "key": "content-range",
                                        "value": "bytes 8388608-16777215/445856194"
                                    }
                                ],
                                "body": {
                                    "mode": "file",
                                    "file": {}
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "aacbc74d-fb2e-43ec-89fb-18e115c643cd",
                            "name": "Returns an error if a precondition was not met.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "(Required) The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
                                        "key": "content-range",
                                        "value": "bytes 8388608-16777215/445856194"
                                    }
                                ],
                                "body": {
                                    "mode": "file",
                                    "file": {}
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ad0d3b96-5670-4beb-acae-6a53c03a027b",
                            "name": "Returns an error if the content range does not match a specified range\nfor the session.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "(Required) The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
                                        "key": "content-range",
                                        "value": "bytes 8388608-16777215/445856194"
                                    }
                                ],
                                "body": {
                                    "mode": "file",
                                    "file": {}
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Requested Range Not Satisfiable",
                            "code": 416,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "303801ba-0e22-4687-9ecb-653457bcda79",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "(Required) The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
                                        "key": "content-range",
                                        "value": "bytes 8388608-16777215/445856194"
                                    }
                                ],
                                "body": {
                                    "mode": "file",
                                    "file": {}
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove upload session",
                    "id": "b61ecf34-e3db-489d-81ee-4ea38816350b",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "upload_sessions",
                                ":upload_session_id"
                            ],
                            "variable": [
                                {
                                    "id": "b8d24e7a-c161-449e-9df6-b8d55c95d87f",
                                    "key": "upload_session_id",
                                    "value": "D5E3F7A",
                                    "description": "(Required) The ID of the upload session."
                                }
                            ]
                        },
                        "description": "Abort an upload session and discard all data uploaded.\n\nThis cannot be reversed."
                    },
                    "response": [
                        {
                            "id": "3722e128-1505-46d3-a873-3c0b61d44f31",
                            "name": "A blank response is returned if the session was\nsuccessfully aborted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "62c41ef6-1b15-4da9-9927-f24c45bae7d5",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "List parts",
                    "id": "fc1b736d-e175-416e-8892-2ffcea1356ab",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/parts?offset=1000&limit=1000",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "upload_sessions",
                                ":upload_session_id",
                                "parts"
                            ],
                            "query": [
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "bf23c8a5-0854-48a7-970e-67adccb40030",
                                    "key": "upload_session_id",
                                    "value": "D5E3F7A",
                                    "description": "(Required) The ID of the upload session."
                                }
                            ]
                        },
                        "description": "Return a list of the chunks uploaded to the upload\nsession so far."
                    },
                    "response": [
                        {
                            "id": "96b81730-f8a4-4cd1-bde4-4a5238f2bbd4",
                            "name": "Returns a list of parts that have been uploaded.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/parts?offset=1000&limit=1000",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "parts"
                                    ],
                                    "query": [
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"part_id\": \"6F2D3486\",\n   \"offset\": 16777216,\n   \"size\": 3222784,\n   \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n  },\n  {\n   \"part_id\": \"6F2D3486\",\n   \"offset\": 16777216,\n   \"size\": 3222784,\n   \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n  }\n ]\n}"
                        },
                        {
                            "id": "cecc9f16-56ac-4f60-b306-28bbffcfc5c6",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/parts?offset=1000&limit=1000",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "parts"
                                    ],
                                    "query": [
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Commit upload session",
                    "id": "bf348fef-23a3-4f71-befe-f5096d62e1f7",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "(Required) The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                "key": "digest",
                                "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                            },
                            {
                                "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                "key": "if-match",
                                "value": "1"
                            },
                            {
                                "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                "key": "if-none-match",
                                "value": "1"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parts\": [\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        },\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/commit",
                            "protocol": "https",
                            "host": [
                                "upload",
                                "box",
                                "com"
                            ],
                            "path": [
                                "api",
                                "2.0",
                                "files",
                                "upload_sessions",
                                ":upload_session_id",
                                "commit"
                            ],
                            "variable": [
                                {
                                    "id": "766251f4-2604-4344-b56b-d0eb57863506",
                                    "key": "upload_session_id",
                                    "value": "D5E3F7A",
                                    "description": "(Required) The ID of the upload session."
                                }
                            ]
                        },
                        "description": "Close an upload session and create a file from the\nuploaded chunks."
                    },
                    "response": [
                        {
                            "id": "dd828ed5-082e-41c8-9af7-ee47984ae29a",
                            "name": "Returns the file object in a list.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parts\": [\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        },\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/commit",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "commit"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 1,\n \"entries\": [\n  {\n   \"description\": \"Contract for Q1 renewal\",\n   \"size\": 629644,\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": \"active\"\n  },\n  {\n   \"description\": \"Contract for Q1 renewal\",\n   \"size\": 629644,\n   \"path_collection\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n   \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_created_at\": \"2012-12-12T10:53:43-08:00\",\n   \"content_modified_at\": \"2012-12-12T10:53:43-08:00\",\n   \"created_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"owned_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"shared_link\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"item_status\": \"active\"\n  }\n ]\n}"
                        },
                        {
                            "id": "79baf9ee-dd67-4752-aa85-063b06f05995",
                            "name": "Returns when all chunks have been uploaded but not yet processed.\n\nInspect the upload session to get more information about the\nprogress of processing the chunks, then retry committing the file\nwhen all chunks have processed.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parts\": [\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        },\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/commit",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "commit"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "Indicates the number of seconds the client should wait before\nattempting their commit request again.",
                                    "key": "Retry-After",
                                    "value": "-41632854"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "2fd271f0-c1b3-4a3d-9541-495be3d217ae",
                            "name": "Returns an error if there is already a file with the same name\nin the target folder.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parts\": [\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        },\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/commit",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "commit"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "cd63ba5c-2e00-418e-ac96-064e6469be2d",
                            "name": "Returns an error if the `If-Match` or `If-None-Match` conditions fail.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parts\": [\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        },\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/commit",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "commit"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Precondition Failed",
                            "code": 412,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8b42184c-8de4-401c-aef4-222371c45313",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "(Required) The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
                                        "key": "digest",
                                        "value": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
                                    },
                                    {
                                        "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
                                        "key": "if-match",
                                        "value": "1"
                                    },
                                    {
                                        "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
                                        "key": "if-none-match",
                                        "value": "1"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parts\": [\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        },\n        {\n            \"part_id\": \"6F2D3486\",\n            \"offset\": 16777216,\n            \"size\": 3222784,\n            \"sha1\": \"134b65991ed521fcfe4724b7d814ab8ded5185dc\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "https://upload.box.com/api/2.0/files/upload_sessions/:upload_session_id/commit",
                                    "protocol": "https",
                                    "host": [
                                        "upload",
                                        "box",
                                        "com"
                                    ],
                                    "path": [
                                        "api",
                                        "2.0",
                                        "files",
                                        "upload_sessions",
                                        ":upload_session_id",
                                        "commit"
                                    ],
                                    "variable": [
                                        {
                                            "key": "upload_session_id",
                                            "value": "D5E3F7A",
                                            "description": "(Required) The ID of the upload session."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "3380a684-ef25-458c-80e2-52db12598ccf"
        },
        {
            "name": "User avatars",
            "item": [
                {
                    "name": "Get user avatar",
                    "id": "2a34ac9c-d989-4947-ab47-9bd1793ed2e6",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id/avatar",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id",
                                "avatar"
                            ],
                            "variable": [
                                {
                                    "id": "b68e43da-a210-4e51-891c-d4125625896c",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Retrieves an image of a the user's avatar."
                    },
                    "response": [
                        {
                            "id": "47e11b35-5a0c-4cd9-ad18-778a9d2a38a8",
                            "name": "When an avatar can be found for the user the\nimage data will be returned in the body of the\nresponse.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/avatar",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "avatar"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "image/jpg"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "ipsum"
                        },
                        {
                            "id": "65cbbb28-afb9-4d2a-a2c0-d9aab4275a61",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id/avatar",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id",
                                        "avatar"
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "cce94642-ab9a-4643-9d9f-feb984763253"
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "List enterprise users",
                    "id": "9a1656e3-6e18-4945-a65d-4047d3c5e716",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users?filter_term=john&user_type=managed&external_app_user_id=my-user-1234&fields=id,type,name&offset=1000&limit=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "filter_term",
                                    "value": "john",
                                    "description": "Limits the results to only users who's `name` or\n`login` start with the search term.\n\nFor externally managed users, the search term needs\nto completely match the in order to find the user, and\nit will only return one user at a time."
                                },
                                {
                                    "key": "user_type",
                                    "value": "managed",
                                    "description": "Limits the results to the kind of user specified.\n\n* `all` returns every kind of user for whom the\n  `login` or `name` partially matches the\n  `filter_term`. It will only return an external user\n  if the login matches the `filter_term` completely,\n  and in that case it will only return that user.\n* `managed` returns all managed and app users for whom\n  the `login` or `name` partially matches the\n  `filter_term`.\n* `external` returns all external users for whom the\n  `login` matches the `filter_term` exactly."
                                },
                                {
                                    "key": "external_app_user_id",
                                    "value": "my-user-1234",
                                    "description": "Limits the results to app users with the given\n`external_app_user_id` value.\n\nWhen creating an app user, an\n`external_app_user_id` value can be set. This value can\nthen be used in this endpoint to find any users that\nmatch that `external_app_user_id` value."
                                },
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "offset",
                                    "value": "1000",
                                    "description": "The offset of the item at which to begin the response."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "usemarker",
                                    "value": "true",
                                    "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                }
                            ]
                        },
                        "description": "Returns a list of all users for the Enterprise along with their `user_id`,\n`public_name`, and `login`.\n\nThe application and the authenticated user need to\nhave the permission to look up users in the entire\nenterprise."
                    },
                    "response": [
                        {
                            "id": "6d71409c-f856-4229-9de5-5d010c023552",
                            "name": "Returns all of the users in the enterprise.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users?filter_term=john&user_type=managed&external_app_user_id=my-user-1234&fields=id,type,name&offset=1000&limit=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "filter_term",
                                            "value": "john"
                                        },
                                        {
                                            "key": "user_type",
                                            "value": "managed"
                                        },
                                        {
                                            "key": "external_app_user_id",
                                            "value": "my-user-1234"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_count\": 5000,\n \"limit\": 1000,\n \"offset\": 2000,\n \"order\": [\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  },\n  {\n   \"by\": \"type\",\n   \"direction\": \"ASC\"\n  }\n ],\n \"entries\": [\n  {\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"timezone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"space_amount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"space_used\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"max_upload_size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"job_title\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"phone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"avatar_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"notification_email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"created_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"modified_at\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"timezone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"space_amount\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"space_used\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"max_upload_size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"job_title\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"phone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"avatar_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"notification_email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "4e27d302-3e28-4533-b837-3afb30ac7649",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users?filter_term=john&user_type=managed&external_app_user_id=my-user-1234&fields=id,type,name&offset=1000&limit=1000&usemarker=true&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "filter_term",
                                            "value": "john"
                                        },
                                        {
                                            "key": "user_type",
                                            "value": "managed"
                                        },
                                        {
                                            "key": "external_app_user_id",
                                            "value": "my-user-1234"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "usemarker",
                                            "value": "true"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create user",
                    "id": "face6eae-0542-4624-9eeb-54752ff48cef",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"is_platform_access_only\": true,\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"space_amount\": 11345156112,\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"status\": \"active\",\n    \"external_app_user_id\": \"my-user-1234\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Creates a new managed user in an enterprise. This endpoint\nis only available to users and applications with the right\nadmin permissions."
                    },
                    "response": [
                        {
                            "id": "8102a9c3-86be-4787-9d33-22ceb4ace7c0",
                            "name": "Returns a user object for the newly created user.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"is_platform_access_only\": true,\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"space_amount\": 11345156112,\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"status\": \"active\",\n    \"external_app_user_id\": \"my-user-1234\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"user\",\n \"name\": \"Aaron Levie\",\n \"login\": \"ceo@example.com\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"language\": \"en\",\n \"timezone\": \"Africa/Bujumbura\",\n \"space_amount\": 11345156112,\n \"space_used\": 1237009912,\n \"max_upload_size\": 2147483648,\n \"status\": \"active\",\n \"job_title\": \"CEO\",\n \"phone\": \"6509241374\",\n \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n \"avatar_url\": \"https://www.box.com/api/avatar/large/181216415\",\n \"notification_email\": {\n  \"email\": \"notifications@example.com\",\n  \"is_confirmed\": true\n }\n}"
                        },
                        {
                            "id": "d13b8b21-a18b-4680-adcd-ff47b83745c1",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"is_platform_access_only\": true,\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"space_amount\": 11345156112,\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"status\": \"active\",\n    \"external_app_user_id\": \"my-user-1234\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get current user",
                    "id": "57892ece-3695-44c7-8a2d-bc7f31f2a91c",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/me?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "me"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ]
                        },
                        "description": "Retrieves information about the user who is currently authenticated.\n\nIn the case of a client-side authenticated OAuth 2.0 application\nthis will be the user who authorized the app.\n\nIn the case of a JWT, server-side authenticated application\nthis will be the service account that belongs to the application\nby default.\n\nUse the `As-User` header to change who this API call is made on behalf of."
                    },
                    "response": [
                        {
                            "id": "02a6c534-7e2e-42c8-9984-5aed656d7cad",
                            "name": "Returns a single user object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/me?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        "me"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"user\",\n \"name\": \"Aaron Levie\",\n \"login\": \"ceo@example.com\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"language\": \"en\",\n \"timezone\": \"Africa/Bujumbura\",\n \"space_amount\": 11345156112,\n \"space_used\": 1237009912,\n \"max_upload_size\": 2147483648,\n \"status\": \"active\",\n \"job_title\": \"CEO\",\n \"phone\": \"6509241374\",\n \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n \"avatar_url\": \"https://www.box.com/api/avatar/large/181216415\",\n \"notification_email\": {\n  \"email\": \"notifications@example.com\",\n  \"is_confirmed\": true\n }\n}"
                        },
                        {
                            "id": "70c61250-9bd6-4438-8755-9aa2030a202a",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/me?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        "me"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get user",
                    "id": "71924283-bf56-4ced-887c-a2812bb37023",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "a81ec6cf-70ad-424a-8218-dc740d51e410",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Retrieves information about a user in the enterprise.\n\nThe application and the authenticated user need to\nhave the permission to look up users in the entire\nenterprise.\n\nThis endpoint also returns a limited set of information\nfor external users who are collaborated on content\nowned by the enterprise for authenticated users with the\nright scopes. In this case, disallowed fields will return\nnull instead."
                    },
                    "response": [
                        {
                            "id": "8e2e06db-a065-4a79-a124-fa72f073bd9e",
                            "name": "Returns a single user object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields using the [fields](#get-users-id--request--fields)\nparameter.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"user\",\n \"name\": \"Aaron Levie\",\n \"login\": \"ceo@example.com\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"language\": \"en\",\n \"timezone\": \"Africa/Bujumbura\",\n \"space_amount\": 11345156112,\n \"space_used\": 1237009912,\n \"max_upload_size\": 2147483648,\n \"status\": \"active\",\n \"job_title\": \"CEO\",\n \"phone\": \"6509241374\",\n \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n \"avatar_url\": \"https://www.box.com/api/avatar/large/181216415\",\n \"notification_email\": {\n  \"email\": \"notifications@example.com\",\n  \"is_confirmed\": true\n }\n}"
                        },
                        {
                            "id": "4de716f7-ba23-42d0-9db2-9dc17085c3e8",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update user",
                    "id": "30077010-3165-4d5c-911d-befea1c5ad26",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"enterprise\": null,\n    \"notify\": true,\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"is_password_reset_required\": true,\n    \"status\": \"active\",\n    \"space_amount\": 11345156112,\n    \"notification_email\": {\n        \"email\": \"notifications@example.com\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                }
                            ],
                            "variable": [
                                {
                                    "id": "fb4b5bd3-0aaf-4673-a3cd-b50022a774f0",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Updates a managed user in an enterprise. This endpoint\nis only available to users and applications with the right\nadmin permissions."
                    },
                    "response": [
                        {
                            "id": "ea41ac44-0c21-4dda-8bce-b96ff08d7528",
                            "name": "Returns the updated user object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"enterprise\": null,\n    \"notify\": true,\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"is_password_reset_required\": true,\n    \"status\": \"active\",\n    \"space_amount\": 11345156112,\n    \"notification_email\": {\n        \"email\": \"notifications@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"user\",\n \"name\": \"Aaron Levie\",\n \"login\": \"ceo@example.com\",\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"language\": \"en\",\n \"timezone\": \"Africa/Bujumbura\",\n \"space_amount\": 11345156112,\n \"space_used\": 1237009912,\n \"max_upload_size\": 2147483648,\n \"status\": \"active\",\n \"job_title\": \"CEO\",\n \"phone\": \"6509241374\",\n \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n \"avatar_url\": \"https://www.box.com/api/avatar/large/181216415\",\n \"notification_email\": {\n  \"email\": \"notifications@example.com\",\n  \"is_confirmed\": true\n }\n}"
                        },
                        {
                            "id": "99bc3d70-710c-42a9-8390-de191b4fe846",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `invalid_parameter` when a parameter is formatted incorrectly,\n  for example when the `notification_email` has an incorrectly formatted\n  email address.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"enterprise\": null,\n    \"notify\": true,\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"is_password_reset_required\": true,\n    \"status\": \"active\",\n    \"space_amount\": 11345156112,\n    \"notification_email\": {\n        \"email\": \"notifications@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5061fd1d-4206-4252-86db-ea39a46bda20",
                            "name": "Returns an error if the user is not allowed to make the changes.\n\n* `access_denied_insufficient_permissions` when the user does not have\n  the right permissions, for example when updating the notification email\n  is turned off for the enterprise.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"enterprise\": null,\n    \"notify\": true,\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"is_password_reset_required\": true,\n    \"status\": \"active\",\n    \"space_amount\": 11345156112,\n    \"notification_email\": {\n        \"email\": \"notifications@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "4f6e8b27-a2ad-4cd7-9e0f-2c3add69829a",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"enterprise\": null,\n    \"notify\": true,\n    \"name\": \"Aaron Levie\",\n    \"login\": \"boss@box.com\",\n    \"role\": \"user\",\n    \"language\": \"en\",\n    \"is_sync_enabled\": true,\n    \"job_title\": \"CEO\",\n    \"phone\": \"6509241374\",\n    \"address\": \"900 Jefferson Ave, Redwood City, CA 94063\",\n    \"tracking_codes\": [\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        },\n        {\n            \"type\": \"tracking_code\",\n            \"name\": \"department\",\n            \"value\": \"Sales\"\n        }\n    ],\n    \"can_see_managed_users\": true,\n    \"timezone\": \"Africa/Bujumbura\",\n    \"is_external_collab_restricted\": true,\n    \"is_exempt_from_device_limits\": true,\n    \"is_exempt_from_login_verification\": true,\n    \"is_password_reset_required\": true,\n    \"status\": \"active\",\n    \"space_amount\": 11345156112,\n    \"notification_email\": {\n        \"email\": \"notifications@example.com\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?fields=id,type,name",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Delete user",
                    "id": "95710e73-3c89-45af-b8df-cc4d6c5414cd",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users/:user_id?notify=true&force=true",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                ":user_id"
                            ],
                            "query": [
                                {
                                    "key": "notify",
                                    "value": "true",
                                    "description": "Whether the user will receive email notification of\nthe deletion"
                                },
                                {
                                    "key": "force",
                                    "value": "true",
                                    "description": "Whether the user should be deleted even if this user\nstill own files"
                                }
                            ],
                            "variable": [
                                {
                                    "id": "299af484-3049-4ddc-a476-bba6efd3f367",
                                    "key": "user_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the user."
                                }
                            ]
                        },
                        "description": "Deletes a user. By default this will fail if the user\nstill owns any content. Move their owned content first\nbefore proceeding, or use the `force` field to delete\nthe user and their files."
                    },
                    "response": [
                        {
                            "id": "a102f49b-a640-4020-a928-3fb35aa6fc61",
                            "name": "Removes the user and returns an empty response.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?notify=true&force=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "notify",
                                            "value": "true"
                                        },
                                        {
                                            "key": "force",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "dacf8cb9-80d3-456c-bae2-3c72ac6071b9",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/users/:user_id?notify=true&force=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "users",
                                        ":user_id"
                                    ],
                                    "query": [
                                        {
                                            "key": "notify",
                                            "value": "true"
                                        },
                                        {
                                            "key": "force",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "user_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the user."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "ccd3895a-a7e9-47d1-bb2b-334ba2e054b3"
        },
        {
            "name": "Watermarks (Files)",
            "item": [
                {
                    "name": "Get watermark on file",
                    "id": "f1831865-d522-4659-8cbb-f8ef517da553",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/watermark",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "watermark"
                            ],
                            "variable": [
                                {
                                    "id": "058539b4-f6b1-4621-b15b-c6ac70f0ef95",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Retrieve the watermark for a file."
                    },
                    "response": [
                        {
                            "id": "a98612ca-d683-4ff1-92d2-e6f99ff6879b",
                            "name": "Returns an object containing information about the\nwatermark associated for to this file.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"watermark\": {\n  \"created_at\": \"2012-12-12T10:53:43-08:00\",\n  \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n }\n}"
                        },
                        {
                            "id": "ca33f7f6-996d-449a-be10-8bbe92863aa7",
                            "name": "Returns an error if the file does not have a watermark applied.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "bbb617cc-d695-490f-a0ef-e72fdbb3f301",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Apply watermark to file",
                    "id": "c1bcef2e-18e6-4771-8d76-a4ab294d2a35",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/watermark",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "watermark"
                            ],
                            "variable": [
                                {
                                    "id": "71f7b439-f295-4219-86c2-d20936dc962c",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Applies or update a watermark on a file."
                    },
                    "response": [
                        {
                            "id": "5784478d-6694-427a-aea0-6bdf47948ee1",
                            "name": "Returns an updated watermark if a watermark already\nexisted on this file.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"watermark\": {\n  \"created_at\": \"2012-12-12T10:53:43-08:00\",\n  \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n }\n}"
                        },
                        {
                            "id": "76236d75-a80f-4dba-8f80-81e240aa1dd5",
                            "name": "Returns a new watermark if no watermark existed on\nthis file yet.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"watermark\": {\n  \"created_at\": \"2012-12-12T10:53:43-08:00\",\n  \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n }\n}"
                        },
                        {
                            "id": "2fb690fd-caf6-408e-9fa8-b795ea86e510",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove watermark from file",
                    "id": "b301ab5e-6b29-45ec-8c47-72c31e06da58",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/files/:file_id/watermark",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "files",
                                ":file_id",
                                "watermark"
                            ],
                            "variable": [
                                {
                                    "id": "5fe8f119-f158-405e-914c-8c8e36e5c6f3",
                                    "key": "file_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                }
                            ]
                        },
                        "description": "Removes the watermark from a file."
                    },
                    "response": [
                        {
                            "id": "dae4e877-3f60-4f8e-90f9-5d0bcc63a51a",
                            "name": "An empty response will be returned when the watermark\nwas successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "b195b56a-96dc-4dcd-8b1f-d98f6fd9fd22",
                            "name": "Returns an error if the file did not have\na watermark applied to it",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "317f250a-5652-45a0-b81a-386bdd731974",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/files/:file_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "files",
                                        ":file_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "file_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "f540b430-eed1-4a54-a5e9-4ba9eb5d53c6"
        },
        {
            "name": "Watermarks (Folders)",
            "item": [
                {
                    "name": "Get watermark for folder",
                    "id": "394e85b5-fe36-44a6-9a7f-620f58a2ff62",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "watermark"
                            ],
                            "variable": [
                                {
                                    "id": "04bf1c4f-c454-4391-a9e2-9519ac52d68e",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Retrieve the watermark for a folder."
                    },
                    "response": [
                        {
                            "id": "8aa6b2c7-6985-4250-a7fa-b554ef46458d",
                            "name": "Returns an object containing information about the\nwatermark associated for to this folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"watermark\": {\n  \"created_at\": \"2012-12-12T10:53:43-08:00\",\n  \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n }\n}"
                        },
                        {
                            "id": "2a7ebe8e-f14a-42f9-af26-2e31e1d839e1",
                            "name": "Returns an error if the folder does not have a watermark applied.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "640030cf-b460-472e-9216-bb537716c95c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Apply watermark to folder",
                    "id": "ff9933f7-9efc-45de-806f-dc685f7f01d9",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "watermark"
                            ],
                            "variable": [
                                {
                                    "id": "6cbba831-9583-4e97-9b23-0dd0ba6e1445",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Applies or update a watermark on a folder."
                    },
                    "response": [
                        {
                            "id": "32cdf034-dedf-4140-9d09-2efc1782fb81",
                            "name": "Returns an updated watermark if a watermark already\nexisted on this folder.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"watermark\": {\n  \"created_at\": \"2012-12-12T10:53:43-08:00\",\n  \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n }\n}"
                        },
                        {
                            "id": "976e6adb-3d9d-454c-8e22-730defe192ab",
                            "name": "Returns a new watermark if no watermark existed on\nthis folder yet.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"watermark\": {\n  \"created_at\": \"2012-12-12T10:53:43-08:00\",\n  \"modified_at\": \"2012-12-12T10:53:43-08:00\"\n }\n}"
                        },
                        {
                            "id": "c699f902-15e7-4638-8f72-d77b07c0b84d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"watermark\": {\n        \"imprint\": \"default\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove watermark from folder",
                    "id": "9ee1a2be-68b5-4771-af18-346a198aec9e",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "folders",
                                ":folder_id",
                                "watermark"
                            ],
                            "variable": [
                                {
                                    "id": "881ecc40-d9d3-4b4d-a459-f7816a978e8f",
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                }
                            ]
                        },
                        "description": "Removes the watermark from a folder."
                    },
                    "response": [
                        {
                            "id": "4fda66e5-9137-4a9b-b669-091e9d3a918e",
                            "name": "An empty response will be returned when the watermark\nwas successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "24083c7c-731c-466e-b2a3-31babbcde438",
                            "name": "Returns an error if the folder did not have\na watermark applied to it",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "32332311-f0b7-4447-a35a-decf6ed28906",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/folders/:folder_id/watermark",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "folders",
                                        ":folder_id",
                                        "watermark"
                                    ],
                                    "variable": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345",
                                            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "91686cff-c1c8-4f67-9fa0-d239610308d4"
        },
        {
            "name": "Web links",
            "item": [
                {
                    "name": "Create web link",
                    "id": "8bb86651-14a2-4521-9e19-0ecf4299a87e",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"url\": \"https://box.com\",\n    \"name\": \"Box Website\",\n    \"description\": \"Cloud Content Management\",\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/web_links",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links"
                            ]
                        },
                        "description": "Creates a web link object within a folder."
                    },
                    "response": [
                        {
                            "id": "e076b162-d850-4181-9e2d-f14b64963f73",
                            "name": "Returns the newly created web link object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"url\": \"https://box.com\",\n    \"name\": \"Box Website\",\n    \"description\": \"Cloud Content Management\",\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"web_link\",\n \"etag\": \"1\",\n \"url\": \"https://www.example.com/example/1234\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"My Bookmark\",\n \"parent\": {\n  \"sequence_id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"description\": \"Example page\",\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"modified_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"owned_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "ec6abcf7-78d9-4882-bbdb-0a8a87c81782",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"parent\": {\n        \"id\": \"0\"\n    },\n    \"url\": \"https://box.com\",\n    \"name\": \"Box Website\",\n    \"description\": \"Cloud Content Management\",\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get web link",
                    "id": "b76f53e2-6682-4686-b421-34203f242a79",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                "key": "boxapi",
                                "value": "shared_link=[link]&shared_link_password=[password]"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/web_links/:web_link_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links",
                                ":web_link_id"
                            ],
                            "variable": [
                                {
                                    "id": "b767f864-8a89-47be-8586-76bf54643996",
                                    "key": "web_link_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the web link."
                                }
                            ]
                        },
                        "description": "Retrieve information about a web link."
                    },
                    "response": [
                        {
                            "id": "8ce70326-c246-4282-a593-248841ea554a",
                            "name": "Returns the web link object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"web_link\",\n \"etag\": \"1\",\n \"url\": \"https://www.example.com/example/1234\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"My Bookmark\",\n \"parent\": {\n  \"sequence_id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"description\": \"Example page\",\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"modified_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"owned_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "6422b9a7-7a00-40dc-a65c-24e6ce28b409",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
                                        "key": "boxapi",
                                        "value": "shared_link=[link]&shared_link_password=[password]"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update web link",
                    "id": "88b813cf-7e2c-4e54-9b5f-a4db1dec201a",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"url\": \"https://box.com\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"name\": \"Box Website\",\n    \"description\": \"Cloud Content Management\",\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/web_links/:web_link_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links",
                                ":web_link_id"
                            ],
                            "variable": [
                                {
                                    "id": "728171dc-c63b-4bf0-ba3b-f6006925915c",
                                    "key": "web_link_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the web link."
                                }
                            ]
                        },
                        "description": "Updates a web link object."
                    },
                    "response": [
                        {
                            "id": "5f32b6b0-9e73-49d3-baba-65f9f9fc93f7",
                            "name": "Returns the updated web link object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"url\": \"https://box.com\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"name\": \"Box Website\",\n    \"description\": \"Cloud Content Management\",\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"web_link\",\n \"etag\": \"1\",\n \"url\": \"https://www.example.com/example/1234\",\n \"sequence_id\": {\n  \"value\": \"<Error: Could not resolve allOf schema\"\n },\n \"name\": \"My Bookmark\",\n \"parent\": {\n  \"sequence_id\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"description\": \"Example page\",\n \"path_collection\": {\n  \"total_count\": 1,\n  \"entries\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"modified_at\": \"2012-12-12T10:53:43-08:00\",\n \"trashed_at\": \"2012-12-12T10:53:43-08:00\",\n \"purged_at\": \"2012-12-12T10:53:43-08:00\",\n \"created_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"modified_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"owned_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"shared_link\": {\n  \"url\": \"https://www.box.com/s/vspke7y05sb214wjokpk\",\n  \"download_url\": \"https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\",\n  \"vanity_url\": \"https://acme.app.box.com/v/my_url/\",\n  \"vanity_name\": \"my_url\",\n  \"access\": \"open\",\n  \"effective_access\": \"company\",\n  \"effective_permission\": \"can_download\",\n  \"unshared_at\": \"2018-04-13T13:53:23-07:00\",\n  \"is_password_enabled\": true,\n  \"permissions\": {\n   \"can_download\": true,\n   \"can_preview\": true\n  },\n  \"download_count\": 3,\n  \"preview_count\": 3\n },\n \"item_status\": \"active\"\n}"
                        },
                        {
                            "id": "c668a570-4cbf-4748-a24a-7687cbeacbcf",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"url\": \"https://box.com\",\n    \"parent\": {\n        \"id\": \"123\"\n    },\n    \"name\": \"Box Website\",\n    \"description\": \"Cloud Content Management\",\n    \"shared_link\": {\n        \"access\": \"open\",\n        \"password\": \"do-not-use-this-password\",\n        \"vanity_name\": \"my-shared-link\",\n        \"unshared_at\": \"2012-12-12T10:53:43-08:00\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove web link",
                    "id": "723db056-058e-4aa1-832e-69b1885fa2fa",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/web_links/:web_link_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "web_links",
                                ":web_link_id"
                            ],
                            "variable": [
                                {
                                    "id": "f624d09c-9ddc-44eb-9899-bd238fd50766",
                                    "key": "web_link_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the web link."
                                }
                            ]
                        },
                        "description": "Deletes a web link."
                    },
                    "response": [
                        {
                            "id": "378e495e-9350-4657-9e58-7e9ea6bb661a",
                            "name": "An empty response will be returned when the web link\nwas successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "9b3cbd17-2912-4284-bc21-ac16711e5029",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/web_links/:web_link_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "web_links",
                                        ":web_link_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "web_link_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the web link."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "742770f2-8b9e-41d8-9db3-78eac4b95084"
        },
        {
            "name": "Webhooks",
            "item": [
                {
                    "name": "List all webhooks",
                    "id": "f40baa00-7479-40db-b16a-e3dab0f3af73",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/webhooks?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "webhooks"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Returns all defined webhooks for the requesting application.\n\nThis API only returns webhooks that are applied to files or folders that are\nowned by the authenticated user. This means that an admin can not see webhooks\ncreated by a service account unless the admin has access to those folders, and\nvice versa."
                    },
                    "response": [
                        {
                            "id": "9124d70e-91d8-41a4-9fea-e3aec702c8bc",
                            "name": "Returns a list of webhooks.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"webhook\",\n   \"target\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"webhook\",\n   \"target\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "ef215816-c823-41ab-8963-3f31ecb66318",
                            "name": "Returns an error if the application does not\nhave the permission to manage webhooks.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5acf646f-b73e-44a2-977e-3586ebe5eabd",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Create webhook",
                    "id": "5c77e564-1685-4b39-9655-b5fdac206bd1",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/webhooks",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "webhooks"
                            ]
                        },
                        "description": "Creates a webhook."
                    },
                    "response": [
                        {
                            "id": "6e43de3f-459a-4890-8bce-d391daab1110",
                            "name": "Returns the new webhook object.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"webhook\",\n \"target\": {\n  \"id\": \"1231232\",\n  \"type\": \"file\"\n },\n \"created_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"address\": \"https://example.com/webhooks\",\n \"triggers\": [\n  \"FILE.UPLOADED\"\n ]\n}"
                        },
                        {
                            "id": "77a15764-2e39-48fa-acd0-623a1c43b81a",
                            "name": "Returns an error if the parameters were\nincorrect.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "754feddc-639a-4802-a3fd-1c512963a9a4",
                            "name": "Returns an error if the application does not\nhave the permission to manage webhooks.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1a32222c-4774-4eb4-8c2f-0ef21dc77a32",
                            "name": "Returns an error if the target item could\nnot be found",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "a2137b29-1906-4d94-9cfe-6d07d9218d29",
                            "name": "Returns an error if the a webhook for this\ncombination of target, application, and user\nalready exists.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "fe65737b-2201-4795-9906-581def1c456c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ],\n    \"address\": \"https://example.com/webhooks\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get webhook",
                    "id": "07d6a497-b6dc-4a65-972e-6ed34fa019ce",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/webhooks/:webhook_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "webhooks",
                                ":webhook_id"
                            ],
                            "variable": [
                                {
                                    "id": "7eb57a6d-e036-4ed7-8a91-fd91d1716706",
                                    "key": "webhook_id",
                                    "value": "3321123",
                                    "description": "(Required) The ID of the webhook."
                                }
                            ]
                        },
                        "description": "Retrieves a specific webhook"
                    },
                    "response": [
                        {
                            "id": "abf4de7d-2b84-4502-a552-5d7385add767",
                            "name": "Returns a webhook object",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"webhook\",\n \"target\": {\n  \"id\": \"1231232\",\n  \"type\": \"file\"\n },\n \"created_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"address\": \"https://example.com/webhooks\",\n \"triggers\": [\n  \"FILE.UPLOADED\"\n ]\n}"
                        },
                        {
                            "id": "0ca055e1-dd20-4791-af71-f87628625303",
                            "name": "Returns an error if the application does not\nhave the permission to manage webhooks.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "1fb995f1-b645-4f2b-8deb-38f1a21e3801",
                            "name": "Returns an error if the webhook could not be found",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "925a8f64-09a5-4012-89c3-3dd946356f1b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update webhook",
                    "id": "4b9535e3-c5f0-401c-b323-396722f35c13",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/webhooks/:webhook_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "webhooks",
                                ":webhook_id"
                            ],
                            "variable": [
                                {
                                    "id": "a7e7232e-2e2a-4737-affb-dc166bce88fb",
                                    "key": "webhook_id",
                                    "value": "3321123",
                                    "description": "(Required) The ID of the webhook."
                                }
                            ]
                        },
                        "description": "Updates a webhook."
                    },
                    "response": [
                        {
                            "id": "5c523046-35ea-4eae-be83-11fb2cd254a8",
                            "name": "Returns the new webhook object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"webhook\",\n \"target\": {\n  \"id\": \"1231232\",\n  \"type\": \"file\"\n },\n \"created_by\": {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"login\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n \"created_at\": \"2012-12-12T10:53:43-08:00\",\n \"address\": \"https://example.com/webhooks\",\n \"triggers\": [\n  \"FILE.UPLOADED\"\n ]\n}"
                        },
                        {
                            "id": "cd0a3a5e-c436-40a0-b507-f79a43f97230",
                            "name": "Returns an error if the parameters were\nincorrect.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8c6cb145-845e-4b10-b489-89c11b0a8ee0",
                            "name": "Returns an error if the application does not\nhave the permission to manage webhooks.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ce992d6f-78d8-4677-857e-736efef4ba94",
                            "name": "Returns an error if the target item or webhook\ncould not be found",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "8fb977ed-f313-4d28-9044-9792d2cb7a57",
                            "name": "Returns an error if the a webhook for this\ncombination of target, application, and user\nalready exists.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "f47952c8-13ed-4a06-b9a3-fd02cd0b5309",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"target\": {\n        \"id\": \"1231232\",\n        \"type\": \"file\"\n    },\n    \"address\": \"https://example.com/webhooks\",\n    \"triggers\": [\n        \"FILE.UPLOADED\"\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Remove webhook",
                    "id": "c5a2d8b5-4850-4c5e-b6f3-c4bf115815c2",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/webhooks/:webhook_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "webhooks",
                                ":webhook_id"
                            ],
                            "variable": [
                                {
                                    "id": "ffd2f3ef-5d44-4095-942f-866a146e23f6",
                                    "key": "webhook_id",
                                    "value": "3321123",
                                    "description": "(Required) The ID of the webhook."
                                }
                            ]
                        },
                        "description": "Deletes a webhook."
                    },
                    "response": [
                        {
                            "id": "0c63317c-05d1-4aba-9236-5d4a1d8b4ac8",
                            "name": "An empty response will be returned when the webhook\nwas successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "eb19ac6c-dfb6-42fc-a122-88bb5d9304a6",
                            "name": "Returns an error if the application does not\nhave the permission to manage webhooks.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3f8875e7-fcb1-4011-84d0-f3a4ceb07ed3",
                            "name": "Returns an error if the webhook could not be found",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5b96c88a-48ad-43d5-a4c0-79282d37b7b7",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/webhooks/:webhook_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "webhooks",
                                        ":webhook_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "webhook_id",
                                            "value": "3321123",
                                            "description": "(Required) The ID of the webhook."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "3c6db10f-2c14-4c71-9fb4-fbbd6f88e526"
        },
        {
            "name": "Workflows",
            "item": [
                {
                    "name": "List workflows",
                    "id": "8ce76fd6-052e-434d-af54-c030a81974c7",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/workflows?folder_id=12345&trigger_type=WORKFLOW_MANUAL_START&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "workflows"
                            ],
                            "query": [
                                {
                                    "key": "folder_id",
                                    "value": "12345",
                                    "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
                                },
                                {
                                    "key": "trigger_type",
                                    "value": "WORKFLOW_MANUAL_START",
                                    "description": "Type of trigger to search for."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                }
                            ]
                        },
                        "description": "Returns list of workflows that act on a given `folder ID`, and\nhave a flow with a trigger type of `WORKFLOW_MANUAL_START`.\n\nYou application must be authorized to use the `Manage Box Relay` application\nscope within the developer console in to use this endpoint."
                    },
                    "response": [
                        {
                            "id": "fe01167a-b82b-4074-b025-e5f0c2f1a2e6",
                            "name": "Returns the workflow.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/workflows?folder_id=12345&trigger_type=WORKFLOW_MANUAL_START&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        },
                                        {
                                            "key": "trigger_type",
                                            "value": "WORKFLOW_MANUAL_START"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"flows\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"flows\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "72ae2dbb-2503-45af-9e46-60b56eb0bd7a",
                            "name": "Returned if the trigger type is not `WORKFLOW_MANUAL_START`.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/workflows?folder_id=12345&trigger_type=WORKFLOW_MANUAL_START&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        },
                                        {
                                            "key": "trigger_type",
                                            "value": "WORKFLOW_MANUAL_START"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "3dd27881-7e13-4bce-845c-02b0a77fadd3",
                            "name": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/workflows?folder_id=12345&trigger_type=WORKFLOW_MANUAL_START&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        },
                                        {
                                            "key": "trigger_type",
                                            "value": "WORKFLOW_MANUAL_START"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "979f1ed7-c443-4611-b82b-2c5dfb25f350",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/workflows?folder_id=12345&trigger_type=WORKFLOW_MANUAL_START&limit=1000&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows"
                                    ],
                                    "query": [
                                        {
                                            "key": "folder_id",
                                            "value": "12345"
                                        },
                                        {
                                            "key": "trigger_type",
                                            "value": "WORKFLOW_MANUAL_START"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Starts workflow based on request body",
                    "id": "b482b282-c103-4e60-ac4d-b36151fad625",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"flow\": {\n        \"type\": \"flow\",\n        \"id\": \"123456789\"\n    },\n    \"files\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        }\n    ],\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"87654321\"\n    },\n    \"type\": \"workflow_parameters\",\n    \"outcomes\": [\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        },\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/workflows/:workflow_id/start",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "workflows",
                                ":workflow_id",
                                "start"
                            ],
                            "variable": [
                                {
                                    "id": "c022866d-8a61-439d-8517-258b153d0bc0",
                                    "key": "workflow_id",
                                    "value": "12345",
                                    "description": "(Required) The ID of the workflow."
                                }
                            ]
                        },
                        "description": "Initiates a flow with a trigger type of `WORKFLOW_MANUAL_START`.\n\nYou application must be authorized to use the `Manage Box Relay` application\nscope within the developer console."
                    },
                    "response": [
                        {
                            "id": "489ba36d-852b-412a-873f-381ef71a684e",
                            "name": "Starts the workflow.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"flow\": {\n        \"type\": \"flow\",\n        \"id\": \"123456789\"\n    },\n    \"files\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        }\n    ],\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"87654321\"\n    },\n    \"type\": \"workflow_parameters\",\n    \"outcomes\": [\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        },\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/workflows/:workflow_id/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows",
                                        ":workflow_id",
                                        "start"
                                    ],
                                    "variable": [
                                        {
                                            "key": "workflow_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the workflow."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "93b53f16-0caf-4bdc-9cda-e0a88ebf0045",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `workflow_is_not_enabled` when the workflow is not enabled\n* `workflow_not_active_on_provided_folder` when the workflow is not\n  enabled for the specified folder id\n* `parameters_prov",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"flow\": {\n        \"type\": \"flow\",\n        \"id\": \"123456789\"\n    },\n    \"files\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        }\n    ],\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"87654321\"\n    },\n    \"type\": \"workflow_parameters\",\n    \"outcomes\": [\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        },\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/workflows/:workflow_id/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows",
                                        ":workflow_id",
                                        "start"
                                    ],
                                    "variable": [
                                        {
                                            "key": "workflow_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the workflow."
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "765a49b4-7278-4f24-8b21-f5a8654ed17b",
                            "name": "Returns an error if there are insufficient permissions.\n\n* `insufficient_access` when the user does not have access rights to file\n  or folder\n* `missing_relay_full_access` when the user does not have access to Relay\n  Full",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"flow\": {\n        \"type\": \"flow\",\n        \"id\": \"123456789\"\n    },\n    \"files\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        }\n    ],\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"87654321\"\n    },\n    \"type\": \"workflow_parameters\",\n    \"outcomes\": [\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        },\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/workflows/:workflow_id/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows",
                                        ":workflow_id",
                                        "start"
                                    ],
                                    "variable": [
                                        {
                                            "key": "workflow_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the workflow."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ee409567-43de-48ac-ba9a-404248cf59d6",
                            "name": "Returns an error if the workflow could not be found,\nor the authenticated user does not have access to the workflow.\n\n* `workflow_not_found` when the workflow is not found\n* `flow_missing_or_inaccessible` when the flow is not a manual start flow",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"flow\": {\n        \"type\": \"flow\",\n        \"id\": \"123456789\"\n    },\n    \"files\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        }\n    ],\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"87654321\"\n    },\n    \"type\": \"workflow_parameters\",\n    \"outcomes\": [\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        },\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/workflows/:workflow_id/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows",
                                        ":workflow_id",
                                        "start"
                                    ],
                                    "variable": [
                                        {
                                            "key": "workflow_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the workflow."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "0d31b83c-f110-4fe2-af7c-f5ba1a4a69a5",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"flow\": {\n        \"type\": \"flow\",\n        \"id\": \"123456789\"\n    },\n    \"files\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345678\"\n        }\n    ],\n    \"folder\": {\n        \"type\": \"folder\",\n        \"id\": \"87654321\"\n    },\n    \"type\": \"workflow_parameters\",\n    \"outcomes\": [\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        },\n        {\n            \"id\": \"890375782\",\n            \"type\": \"outcome\",\n            \"parameter\": \"placeholder\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/workflows/:workflow_id/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "workflows",
                                        ":workflow_id",
                                        "start"
                                    ],
                                    "variable": [
                                        {
                                            "key": "workflow_id",
                                            "value": "12345",
                                            "description": "(Required) The ID of the workflow."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "0890b4df-ce63-47aa-a4b6-7134b855f1d0"
        },
        {
            "name": "Zip Downloads",
            "item": [
                {
                    "name": "Create zip download",
                    "id": "6699662b-a018-4d14-8678-6af2af63cb50",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"items\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        }\n    ],\n    \"download_file_name\": \"January Financials\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/zip_downloads",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "zip_downloads"
                            ]
                        },
                        "description": "Creates a request to download multiple files and folders as a single `zip`\narchive file. This API does not return the archive but instead performs all\nthe checks to ensure that the user has access to all the items, and then\nreturns a `download_url` and a `status_url` that can be used to download the\narchive.\n\nThe limit for an archive is either the Account's upload limit or\n10,000 files, whichever is met first"
                    },
                    "response": [
                        {
                            "id": "e48b04f4-9563-481f-b027-ca64a2a22ddb",
                            "name": "If the `zip` archive is ready to be downloaded, the API will return a\nresponse that will include a `download_url`, a `status_url`, as well as\nany conflicts that might have occurred when creating the request.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"items\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        }\n    ],\n    \"download_file_name\": \"January Financials\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads"
                                    ]
                                }
                            },
                            "status": "Accepted",
                            "code": 202,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"download_url\": \"https://dl.boxcloud.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/content\",\n \"status_url\": \"https://api.box.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/status\",\n \"expires_at\": \"2020-07-22T11:26:08Z\",\n \"name_conflicts\": [\n  [\n   {\n    \"id\": \"12345\",\n    \"type\": \"file\",\n    \"original_name\": \"Report.pdf\",\n    \"download_name\": \"3aa6a7.pdf\"\n   },\n   {\n    \"id\": \"34325\",\n    \"type\": \"file\",\n    \"original_name\": \"Report.pdf\",\n    \"download_name\": \"5d53f2.pdf\"\n   }\n  ]\n ]\n}"
                        },
                        {
                            "id": "a6f46827-fd26-481a-8714-8185cafddbf3",
                            "name": "Returns an error if some of the parameters are missing or\nnot valid.\n\nIn most cases, this error might happen because the JSON request body is\nnot valid JSON, any of the items has an incorrect or missing ID, any of\nthe items is not a file or folder, or the",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"items\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        }\n    ],\n    \"download_file_name\": \"January Financials\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "51220f36-cb5c-46ec-bfd7-973fdbd0cd08",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"items\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        }\n    ],\n    \"download_file_name\": \"January Financials\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads"
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "2e894ffc-6f0b-48b9-bda4-223c53edfc07",
                            "name": "Returned when an authorization header is provided but the user does not\nhave access to the items.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"items\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        }\n    ],\n    \"download_file_name\": \"January Financials\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "ca9d4fd5-0f01-4bc6-ae2f-9b5b361b8eb3",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"items\": [\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        },\n        {\n            \"type\": \"file\",\n            \"id\": \"12345\"\n        }\n    ],\n    \"download_file_name\": \"January Financials\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Download zip archive",
                    "id": "e90666ce-69e3-4fbc-983a-43bd74f2b81e",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "https://dl.boxcloud.com/2.0/zip_downloads/:zip_download_id/content",
                            "protocol": "https",
                            "host": [
                                "dl",
                                "boxcloud",
                                "com"
                            ],
                            "path": [
                                "2.0",
                                "zip_downloads",
                                ":zip_download_id",
                                "content"
                            ],
                            "variable": [
                                {
                                    "id": "0a9a70bf-6441-4b3d-a8a7-c13233156e16",
                                    "key": "zip_download_id",
                                    "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                    "description": "(Required) The unique identifier that represent this `zip` archive."
                                }
                            ]
                        },
                        "description": "Returns the contents of a `zip` archive in binary format. This URL does not\nrequire any form of authentication and could be used in a user's browser to\ndownload the archive to a user's device.\n\nBy default, this URL is only valid for a few seconds from the creation of\nthe request for this archive. Once a download has started it can not be\nstopped and resumed, instead a new request for a zip archive would need to\nbe created.\n\nThe URL of this endpoint should not be considered as fixed. Instead, use\nthe [Create zip download](e://post_zip_downloads) API to request to create a\n`zip` archive, and then follow the `download_url` field in the response to\nthis endpoint."
                    },
                    "response": [
                        {
                            "id": "4f85c999-b384-43f3-8c2f-f879063b1887",
                            "name": "Returns the content of the items requested for this download, formatted as\na stream of files and folders in a `zip` archive.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://dl.boxcloud.com/2.0/zip_downloads/:zip_download_id/content",
                                    "protocol": "https",
                                    "host": [
                                        "dl",
                                        "boxcloud",
                                        "com"
                                    ],
                                    "path": [
                                        "2.0",
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "content"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "disabled": false,
                                    "description": "The name of the archive to be downloaded",
                                    "key": "Content-Disposition",
                                    "value": "attachment;filename=\"Avatars.zip\";filename*=UTF-8''Avatars.zip"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/octet-stream"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "eu"
                        },
                        {
                            "id": "8bdb6175-b2f1-4255-b404-ea54f2686b0e",
                            "name": "Returns an error if the ID of this download request is not valid. This\nerror can also be returned if this URL has been called before. To\nre-download this archive, please create a new request for a zip download.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://dl.boxcloud.com/2.0/zip_downloads/:zip_download_id/content",
                                    "protocol": "https",
                                    "host": [
                                        "dl",
                                        "boxcloud",
                                        "com"
                                    ],
                                    "path": [
                                        "2.0",
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "content"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "2febe31d-7158-4ca4-8418-93e771d7743c",
                            "name": "Returns an error if the number of concurrent zip downloads has been\nreached for either the user or the enterprise.\n\n* `user_too_many_concurrent_downloads` - the maximum of 5 parallel\ndownloads of zip archives per user has been met.\n* `enterprise_too_many_",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://dl.boxcloud.com/2.0/zip_downloads/:zip_download_id/content",
                                    "protocol": "https",
                                    "host": [
                                        "dl",
                                        "boxcloud",
                                        "com"
                                    ],
                                    "path": [
                                        "2.0",
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "content"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "910baac6-81fb-40e7-863a-35e00739289c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "https://dl.boxcloud.com/2.0/zip_downloads/:zip_download_id/content",
                                    "protocol": "https",
                                    "host": [
                                        "dl",
                                        "boxcloud",
                                        "com"
                                    ],
                                    "path": [
                                        "2.0",
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "content"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get zip download status",
                    "id": "ddef2412-f663-4561-98b7-3cb237235518",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/zip_downloads/:zip_download_id/status",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "zip_downloads",
                                ":zip_download_id",
                                "status"
                            ],
                            "variable": [
                                {
                                    "id": "4e65b006-20d2-4953-8a35-d885b3e65172",
                                    "key": "zip_download_id",
                                    "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                    "description": "(Required) The unique identifier that represent this `zip` archive."
                                }
                            ]
                        },
                        "description": "Returns the download status of a `zip` archive, allowing an application to\ninspect the progress of the download as well as the number of items that\nmight have been skipped.\n\nThis endpoint can only be accessed once the download has started.\nSubsequently this endpoint is valid for 12 hours from the start of the\ndownload.\n\nThe URL of this endpoint should not be considered as fixed. Instead, use\nthe [Create zip download](e://post_zip_downloads) API to request to create a\n`zip` archive, and then follow the `status_url` field in the response to\nthis endpoint."
                    },
                    "response": [
                        {
                            "id": "4cad4cca-5ca3-46dc-97ca-d091e1be3e0b",
                            "name": "Returns the status of the `zip` archive that is being downloaded.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads/:zip_download_id/status",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "status"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"total_file_count\": 20,\n \"downloaded_file_count\": 10,\n \"skipped_file_count\": 5,\n \"skipped_folder_count\": 5,\n \"state\": \"success\"\n}"
                        },
                        {
                            "id": "a1892d99-1af0-49bc-be1b-c4e0ead0105d",
                            "name": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads/:zip_download_id/status",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "status"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "30594bb3-5b7c-45da-99d5-2356b80b42fd",
                            "name": "Returned when an authorization header is provided but the user does not\nhave access to the items.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads/:zip_download_id/status",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "status"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "7ea1a12e-fdcb-4dc2-9a71-4bb80dbe51ba",
                            "name": "Returns an error if the ID of this download request is not valid, or if\nthe status of a download is requested before the download has been\nstarted.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads/:zip_download_id/status",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "status"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        },
                        {
                            "id": "5ab88ae0-cf8b-4985-8c77-a60bfa431a8c",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/zip_downloads/:zip_download_id/status",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "zip_downloads",
                                        ":zip_download_id",
                                        "status"
                                    ],
                                    "variable": [
                                        {
                                            "key": "zip_download_id",
                                            "value": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd",
                                            "description": "(Required) The unique identifier that represent this `zip` archive."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "cd0a086c-9370-474b-ab4d-e578c07c4b4d"
        },
        {
            "name": "Storage policies",
            "item": [
                {
                    "name": "List storage policies",
                    "id": "c7716bbf-4cb2-4efe-8bba-056385e08855",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/storage_policies?fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policies"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id,type,name",
                                    "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
                                },
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "limit",
                                    "value": "1000",
                                    "description": "The maximum number of items to return per page."
                                }
                            ]
                        },
                        "description": "Fetches all the storage policies in the enterprise."
                    },
                    "response": [
                        {
                            "id": "e10f059d-c85d-44c8-824f-c2a8eae02c2b",
                            "name": "Returns a collection of storage policies.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policies?fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"id\": \"11446498\",\n   \"type\": \"storage_policy\",\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"id\": \"11446498\",\n   \"type\": \"storage_policy\",\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "c4e9bbca-2d66-4bcc-b270-addb40c9e90f",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policies?fields=id,type,name&marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&limit=1000",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policies"
                                    ],
                                    "query": [
                                        {
                                            "key": "fields",
                                            "value": "id,type,name"
                                        },
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "limit",
                                            "value": "1000"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get storage policy",
                    "id": "01694fab-71dd-498a-b93d-c1b1fafb8fe5",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/storage_policies/:storage_policy_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policies",
                                ":storage_policy_id"
                            ],
                            "variable": [
                                {
                                    "id": "1e8269e0-8a82-4ed9-a619-5851cb166367",
                                    "key": "storage_policy_id",
                                    "value": "34342",
                                    "description": "(Required) The ID of the storage policy."
                                }
                            ]
                        },
                        "description": "Fetches a specific storage policy."
                    },
                    "response": [
                        {
                            "id": "9d526970-2fea-4c48-bafc-e1f8e14d0606",
                            "name": "Returns a storage policy object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policies/:storage_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policies",
                                        ":storage_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_id",
                                            "value": "34342",
                                            "description": "(Required) The ID of the storage policy."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"id\": \"11446498\",\n \"type\": \"storage_policy\",\n \"name\": \"Montreal / Dublin\"\n}"
                        },
                        {
                            "id": "7a53c8b7-2755-422f-871e-5e3a3c2f405a",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policies/:storage_policy_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policies",
                                        ":storage_policy_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_id",
                                            "value": "34342",
                                            "description": "(Required) The ID of the storage policy."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "121bb723-affd-4f72-b7f0-80139a424257"
        },
        {
            "name": "Storage policy assignments",
            "item": [
                {
                    "name": "List storage policy assignments",
                    "id": "78e03d91-cff1-48b6-a953-cb4477359069",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/storage_policy_assignments?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&resolved_for_type=user&resolved_for_id=984322",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policy_assignments"
                            ],
                            "query": [
                                {
                                    "key": "marker",
                                    "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                                    "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
                                },
                                {
                                    "key": "resolved_for_type",
                                    "value": "user",
                                    "description": "(Required) The target type to return assignments for"
                                },
                                {
                                    "key": "resolved_for_id",
                                    "value": "984322",
                                    "description": "(Required) The ID of the user or enterprise to return assignments for"
                                }
                            ]
                        },
                        "description": "Fetches all the storage policy assignment for an enterprise or user."
                    },
                    "response": [
                        {
                            "id": "909b54c8-43fa-4eda-9a32-90d4fc9e62b0",
                            "name": "Returns a collection of storage policies for\nthe enterprise or user.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&resolved_for_type=user&resolved_for_id=984322",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "resolved_for_type",
                                            "value": "user"
                                        },
                                        {
                                            "key": "resolved_for_id",
                                            "value": "984322"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"limit\": 1000,\n \"next_marker\": 3000,\n \"prev_marker\": 1000,\n \"entries\": [\n  {\n   \"storage_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_to\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  {\n   \"storage_policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"assigned_to\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n ]\n}"
                        },
                        {
                            "id": "426b351b-1622-4ce5-b634-2ccb2a94919d",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments?marker=JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii&resolved_for_type=user&resolved_for_id=984322",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments"
                                    ],
                                    "query": [
                                        {
                                            "key": "marker",
                                            "value": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
                                        },
                                        {
                                            "key": "resolved_for_type",
                                            "value": "user"
                                        },
                                        {
                                            "key": "resolved_for_id",
                                            "value": "984322"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Assign storage policy",
                    "id": "9003e8fb-8805-4bd2-bbff-b809058f191b",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"storage_policy\": {\n        \"type\": \"storage_policy\",\n        \"id\": \"1434325\"\n    },\n    \"assigned_to\": {\n        \"type\": \"user\",\n        \"id\": \"9987987\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/storage_policy_assignments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policy_assignments"
                            ]
                        },
                        "description": "Creates a storage policy assignment for an enterprise or user."
                    },
                    "response": [
                        {
                            "id": "97f37204-f319-4631-816c-92afffb4ee22",
                            "name": "Returns the new storage policy assignment created.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"storage_policy\": {\n        \"type\": \"storage_policy\",\n        \"id\": \"1434325\"\n    },\n    \"assigned_to\": {\n        \"type\": \"user\",\n        \"id\": \"9987987\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"storage_policy\": {\n  \"id\": \"11446498\",\n  \"type\": \"storage_policy\"\n },\n \"assigned_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"file\"\n }\n}"
                        },
                        {
                            "id": "d01a95cd-ba57-44cd-b13b-12b1b98208e2",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"storage_policy\": {\n        \"type\": \"storage_policy\",\n        \"id\": \"1434325\"\n    },\n    \"assigned_to\": {\n        \"type\": \"user\",\n        \"id\": \"9987987\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Get storage policy assignment",
                    "id": "2753a812-7e68-4c6e-a5c8-50e36b25304f",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policy_assignments",
                                ":storage_policy_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "fe94833e-73d3-493f-aba9-fc899df324fc",
                                    "key": "storage_policy_assignment_id",
                                    "value": "932483",
                                    "description": "(Required) The ID of the storage policy assignment."
                                }
                            ]
                        },
                        "description": "Fetches a specific storage policy assignment."
                    },
                    "response": [
                        {
                            "id": "4eb7186b-f526-466f-9c7d-ee6d3dfd4b01",
                            "name": "Returns a storage policy assignment object.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments",
                                        ":storage_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_assignment_id",
                                            "value": "932483",
                                            "description": "(Required) The ID of the storage policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"storage_policy\": {\n  \"id\": \"11446498\",\n  \"type\": \"storage_policy\"\n },\n \"assigned_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"file\"\n }\n}"
                        },
                        {
                            "id": "8662ef28-b8d2-4a93-8f86-ee614844ee4b",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments",
                                        ":storage_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_assignment_id",
                                            "value": "932483",
                                            "description": "(Required) The ID of the storage policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Update storage policy assignment",
                    "id": "6739cbcb-8379-4477-a8c6-65734592bf7a",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"storage_policy\": {\n        \"type\": \"storage_policy\",\n        \"id\": \"1434325\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policy_assignments",
                                ":storage_policy_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "62d68c31-3951-4f22-8268-69831aa1c034",
                                    "key": "storage_policy_assignment_id",
                                    "value": "932483",
                                    "description": "(Required) The ID of the storage policy assignment."
                                }
                            ]
                        },
                        "description": "Updates a specific storage policy assignment."
                    },
                    "response": [
                        {
                            "id": "a14df85b-d9a9-4d26-b2ac-a896df4ea308",
                            "name": "Returns an updated storage policy assignment object.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"storage_policy\": {\n        \"type\": \"storage_policy\",\n        \"id\": \"1434325\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments",
                                        ":storage_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_assignment_id",
                                            "value": "932483",
                                            "description": "(Required) The ID of the storage policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"storage_policy\": {\n  \"id\": \"11446498\",\n  \"type\": \"storage_policy\"\n },\n \"assigned_to\": {\n  \"id\": \"11446498\",\n  \"type\": \"file\"\n }\n}"
                        },
                        {
                            "id": "19964d2a-26db-42f1-ab93-6a4f490f15e4",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"storage_policy\": {\n        \"type\": \"storage_policy\",\n        \"id\": \"1434325\"\n    }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments",
                                        ":storage_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_assignment_id",
                                            "value": "932483",
                                            "description": "(Required) The ID of the storage policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                },
                {
                    "name": "Unassign storage policy",
                    "id": "0f4713dd-2bca-45c2-ad57-1360362b239f",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "storage_policy_assignments",
                                ":storage_policy_assignment_id"
                            ],
                            "variable": [
                                {
                                    "id": "04c99f69-b08e-4e37-b280-8d010358770a",
                                    "key": "storage_policy_assignment_id",
                                    "value": "932483",
                                    "description": "(Required) The ID of the storage policy assignment."
                                }
                            ]
                        },
                        "description": "Delete a storage policy assignment.\n\nDeleting a storage policy assignment on a user\nwill have the user inherit the enterprise's default\nstorage policy.\n\nThere is a rate limit for calling this endpoint of only\ntwice per user in a 24 hour time frame."
                    },
                    "response": [
                        {
                            "id": "60bef34b-c83c-44e8-9e8c-cab946371bd3",
                            "name": "Returns an empty response when the storage policy\nassignment is successfully deleted.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments",
                                        ":storage_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_assignment_id",
                                            "value": "932483",
                                            "description": "(Required) The ID of the storage policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "No Content",
                            "code": 204,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": ""
                        },
                        {
                            "id": "9fc2c705-2db5-48c6-b875-38bad9733faa",
                            "name": "An unexpected client error.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/storage_policy_assignments/:storage_policy_assignment_id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "storage_policy_assignments",
                                        ":storage_policy_assignment_id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "storage_policy_assignment_id",
                                            "value": "932483",
                                            "description": "(Required) The ID of the storage policy assignment."
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n \"type\": \"error\",\n \"status\": 400,\n \"code\": \"item_name_invalid\",\n \"message\": \"Method Not Allowed\",\n \"context_info\": {\n  \"message\": \"Something went wrong.\"\n },\n \"help_url\": \"http://developers.box.com/docs/#errors\",\n \"request_id\": \"abcdef123456\"\n}"
                        }
                    ]
                }
            ],
            "id": "2cdcfd08-109b-487b-9ebd-0e2fcac9e33d"
        }
    ],
    "auth": {
        "type": "oauth2"
    },
    "variable": [
        {
            "id": "f6893b9c-d1bc-45f9-9fc5-e756d1163716",
            "key": "baseUrl",
            "value": "https://api.box.com/2.0",
            "type": "string"
        },
        {
            "id": "f572bb73-b655-4dfa-ae36-1d6f9949b98a",
            "key": "folder_id",
            "value": "tempor non eu qui sit",
            "type": "any",
            "description": "(Required) The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
        },
        {
            "id": "5f5f3a60-62bb-4909-b386-66406dfbb6dd",
            "key": "file_id",
            "value": "cupidatat mollit",
            "type": "any",
            "description": "(Required) The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
        },
        {
            "id": "d7db9e73-2a71-4b2a-a891-0478c0fed0a4",
            "key": "extension",
            "value": "jpg",
            "type": "any",
            "description": "(Required) The file format for the thumbnail"
        }
    ]
}